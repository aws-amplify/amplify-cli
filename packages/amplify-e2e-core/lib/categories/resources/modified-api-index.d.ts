export declare const modifiedApi = "const express = require(\"express\");\nconst bodyParser = require('body-parser');\nconst port = process.env.PORT || 3001;\n\nconst {\n    addPostToDDB,\n    scanPostsFromDDB,\n    getPostFromDDB\n} = require('./DynamoDBActions');\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n// Enable CORS for all methods\napp.use(function (req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\")\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\")\n    next()\n});\n\nconst checkAuthRules = (req, res, next) => {\n    const jwt = req.header(\"Authorization\") || \"\";\n\n    const [, jwtBody] = jwt.split(\".\");\n\n    const obj = JSON.parse(\n        jwtBody ? Buffer.from(jwtBody, \"base64\").toString(\"utf-8\") : \"{}\"\n    );\n\n    //Customer can perform logic on JWT body\n    //console.log(obj);\n    next();\n\n    //Failure example:\n    // const err = new Error(\"Access denied\");\n    // err.statusCode = 403;\n    // return next(err);\n}\n\napp.use(checkAuthRules);\n\napp.get(\"/posts\", async (req, res, next) => {\n\n    try {\n        const result = await scanPostsFromDDB();\n        res.contentType(\"application/json\").send(result);\n    } catch (err) {\n        next(err);\n    }\n});\n\napp.get(\"/post\", async (req, res, next) => {\n    console.log(req.query.id);\n\n    try {\n        const result = await getPostFromDDB(req.query.id);\n        res.contentType(\"application/json\").send(result);\n    } catch (err) {\n        next(err);\n    }\n});\n\napp.post(\"/post\", async (req, res, next) => {\n\n    try {\n        const result = await addPostToDDB(req.body);\n        res.contentType(\"application/json\").send(result);\n    } catch (err) {\n        next(err);\n    }\n});\n \napp.put('/post', async(req, res, next) => {\n    return {};\n});\n\napp.use((req, res, next) => {\n\n    try {\n        const result = `Please try GET on /posts, /post?id=xyz, or a POST to /post with JSON {\"id\":\"123\",\"title\":\"Fargate test\"}`;\n        res.contentType(\"application/json\").send(result);\n    } catch (err) {\n        next(err);\n    }\n});\n\n// Error middleware must be defined last\napp.use((err, req, res, next) => {\n    console.error(err.message);\n    if (!err.statusCode) err.statusCode = 500; // If err has no specified error code, set error code to 'Internal Server Error (500)'\n    res\n        .status(err.statusCode)\n        .json({ message: err.message })\n        .end();\n});\n\napp.listen(port, () => {\n    console.log('Example app listening at http://localhost:' + port);\n});";
