import { $TSContext } from 'amplify-cli-core';
import type { Schema } from '@aws-amplify/datastore';
import { printer } from 'amplify-prompts';
import AmplifyUIBuilder from 'aws-sdk/clients/amplifyuibuilder';
import { AmplifyStudioClient } from '../clients';
import { isFormDetachedFromModel, isFormSchemaCustomized, shouldRenderComponents } from '../commands/utils';

/**
 * Handles showing a warning for detached forms pre-push.
 */
export const prePushHandler = async (context: $TSContext): Promise<void> => {
  if (!(await shouldRenderComponents(context))) {
    return;
  }
  const studioClient = await AmplifyStudioClient.setClientInfo(context);
  const [formSchemas, localSchema] = await Promise.all<[Promise<{
    entities: AmplifyUIBuilder.Form[];
  }>, Promise<Schema>]>([
    studioClient.listForms(),
    context.amplify.invokePluginMethod(
      context,
      'codegen',
      undefined,
      'getModelIntrospection',
      [context],
    ),
  ]);

  if (!localSchema) {
    printer.debug('Local schema not found');
    return;
  }
  printDetachedFormsWarning(formSchemas, localSchema);
};

const printDetachedFormsWarning = (formSchemas: { entities: AmplifyUIBuilder.Form[] }, localSchema: Schema): void => {
  const modelNames = new Set(Object.keys(localSchema.models));
  const detachedCustomForms: string[] = [];

  formSchemas.entities.forEach(form => {
    // Only show warnings for schema's that have customization, otherwise it's the same as
    // an autogenerated form.
    if (isFormDetachedFromModel(form, modelNames) && isFormSchemaCustomized(form)) {
      detachedCustomForms.push(form.name);
    }
  });

  if (detachedCustomForms.length > 0) {
    printer.warn(`The following form${detachedCustomForms.length === 1 ? '' : 's'} will no longer be available because the connected data model no longer exists: ${detachedCustomForms.join(', ')}`);
  }
};