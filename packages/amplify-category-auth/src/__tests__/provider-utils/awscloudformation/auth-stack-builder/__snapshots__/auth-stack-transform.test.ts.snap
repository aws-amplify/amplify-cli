// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check Auth Template Generated authstack template in default flow 1`] = `
Object {
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": Object {
    "ShouldNotCreateEnvResources": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "env",
        },
        "NONE",
      ],
    },
  },
  "Description": "Amplify Cognito Stack for AWS Amplify CLI",
  "Outputs": Object {
    "AppClientID": Object {
      "Description": "The user pool app client id",
      "Value": Object {
        "Ref": "UserPoolClient",
      },
    },
    "AppClientIDWeb": Object {
      "Description": "The user pool app client id for web",
      "Value": Object {
        "Ref": "UserPoolClientWeb",
      },
    },
    "IdentityPoolId": Object {
      "Description": "Id for the identity pool",
      "Value": Object {
        "Ref": "IdentityPool",
      },
    },
    "IdentityPoolName": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "IdentityPool",
          "Name",
        ],
      },
    },
    "UserPoolArn": Object {
      "Description": "Arn for the user pool",
      "Value": Object {
        "Fn::GetAtt": Array [
          "UserPool",
          "Arn",
        ],
      },
    },
    "UserPoolId": Object {
      "Description": "Id for the user pool",
      "Value": Object {
        "Ref": "UserPool",
      },
    },
    "UserPoolName": Object {
      "Value": Object {
        "Ref": "userPoolName",
      },
    },
  },
  "Parameters": Object {
    "aliasAttributes": Object {
      "Type": "CommaDelimitedList",
    },
    "allowUnauthenticatedIdentities": Object {
      "Type": "String",
    },
    "authRoleArn": Object {
      "Type": "String",
    },
    "authSelections": Object {
      "Type": "String",
    },
    "autoVerifiedAttributes": Object {
      "Type": "CommaDelimitedList",
    },
    "breakCircularDependency": Object {
      "Type": "String",
    },
    "defaultPasswordPolicy": Object {
      "Type": "String",
    },
    "dependsOn": Object {
      "Type": "CommaDelimitedList",
    },
    "emailVerificationMessage": Object {
      "Type": "String",
    },
    "emailVerificationSubject": Object {
      "Type": "String",
    },
    "env": Object {
      "Type": "String",
    },
    "identityPoolName": Object {
      "Type": "String",
    },
    "mfaConfiguration": Object {
      "Type": "String",
    },
    "mfaTypes": Object {
      "Type": "CommaDelimitedList",
    },
    "passwordPolicyCharacters": Object {
      "Type": "CommaDelimitedList",
    },
    "passwordPolicyMinLength": Object {
      "Type": "String",
    },
    "requiredAttributes": Object {
      "Type": "CommaDelimitedList",
    },
    "resourceName": Object {
      "Type": "String",
    },
    "resourceNameTruncated": Object {
      "Type": "String",
    },
    "serviceName": Object {
      "Type": "String",
    },
    "sharedId": Object {
      "Type": "String",
    },
    "smsAuthenticationMessage": Object {
      "Type": "String",
    },
    "smsVerificationMessage": Object {
      "Type": "String",
    },
    "unauthRoleArn": Object {
      "Type": "String",
    },
    "useDefault": Object {
      "Type": "String",
    },
    "useEnabledMfas": Object {
      "Type": "String",
    },
    "userPoolGroupList": Object {
      "Type": "CommaDelimitedList",
    },
    "userPoolName": Object {
      "Type": "String",
    },
    "usernameCaseSensitive": Object {
      "Type": "String",
    },
    "userpoolClientGenerateSecret": Object {
      "Type": "String",
    },
    "userpoolClientLambdaRole": Object {
      "Type": "String",
    },
    "userpoolClientReadAttributes": Object {
      "Type": "CommaDelimitedList",
    },
    "userpoolClientRefreshTokenValidity": Object {
      "Type": "String",
    },
    "userpoolClientSetAttributes": Object {
      "Type": "String",
    },
    "userpoolClientWriteAttributes": Object {
      "Type": "CommaDelimitedList",
    },
  },
  "Resources": Object {
    "IdentityPool": Object {
      "Properties": Object {
        "AllowUnauthenticatedIdentities": Object {
          "Ref": "allowUnauthenticatedIdentities",
        },
        "CognitoIdentityProviders": Array [
          Object {
            "ClientId": Object {
              "Ref": "UserPoolClient",
            },
            "ProviderName": Object {
              "Fn::Sub": Array [
                "cognito-idp.\${region}.amazonaws.com/\${client}",
                Object {
                  "client": Object {
                    "Ref": "UserPool",
                  },
                  "region": Object {
                    "Ref": "AWS::Region",
                  },
                },
              ],
            },
          },
          Object {
            "ClientId": Object {
              "Ref": "UserPoolClientWeb",
            },
            "ProviderName": Object {
              "Fn::Sub": Array [
                "cognito-idp.\${region}.amazonaws.com/\${client}",
                Object {
                  "client": Object {
                    "Ref": "UserPool",
                  },
                  "region": Object {
                    "Ref": "AWS::Region",
                  },
                },
              ],
            },
          },
        ],
        "IdentityPoolName": Object {
          "Fn::If": Array [
            "ShouldNotCreateEnvResources",
            "authdefaultsettings2c33facd_identitypool_2c33facd",
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  "authdefaultsettings2c33facd_identitypool_2c33facd__",
                  Object {
                    "Ref": "env",
                  },
                ],
              ],
            },
          ],
        },
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "IdentityPoolRoleMap": Object {
      "DependsOn": Array [
        "IdentityPool",
      ],
      "Properties": Object {
        "IdentityPoolId": Object {
          "Ref": "IdentityPool",
        },
        "Roles": Object {
          "authenticated": Object {
            "Ref": "authRoleArn",
          },
          "unauthenticated": Object {
            "Ref": "unauthRoleArn",
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "UserPool": Object {
      "Properties": Object {
        "AliasAttributes": Object {
          "Ref": "aliasAttributes",
        },
        "AutoVerifiedAttributes": Array [
          "email",
        ],
        "EmailVerificationMessage": Object {
          "Ref": "emailVerificationMessage",
        },
        "EmailVerificationSubject": Object {
          "Ref": "emailVerificationSubject",
        },
        "MfaConfiguration": Object {
          "Ref": "mfaConfiguration",
        },
        "Policies": Object {
          "PasswordPolicy": Object {
            "MinimumLength": Object {
              "Ref": "passwordPolicyMinLength",
            },
            "RequireLowercase": false,
            "RequireNumbers": false,
            "RequireSymbols": false,
            "RequireUppercase": false,
          },
        },
        "Schema": Array [
          Object {
            "Mutable": true,
            "Name": "email",
            "Required": true,
          },
        ],
        "UserAttributeUpdateSettings": Object {
          "AttributesRequireVerificationBeforeUpdate": Array [
            "email",
          ],
        },
        "UserPoolName": Object {
          "Fn::If": Array [
            "ShouldNotCreateEnvResources",
            Object {
              "Ref": "userPoolName",
            },
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "userPoolName",
                  },
                  "-",
                  Object {
                    "Ref": "env",
                  },
                ],
              ],
            },
          ],
        },
        "UsernameConfiguration": Object {
          "CaseSensitive": false,
        },
      },
      "Type": "AWS::Cognito::UserPool",
    },
    "UserPoolClient": Object {
      "DependsOn": Array [
        "UserPool",
      ],
      "Properties": Object {
        "ClientName": "authde2c33facd_app_client",
        "GenerateSecret": Object {
          "Ref": "userpoolClientGenerateSecret",
        },
        "RefreshTokenValidity": Object {
          "Ref": "userpoolClientRefreshTokenValidity",
        },
        "TokenValidityUnits": Object {
          "RefreshToken": "days",
        },
        "UserPoolId": Object {
          "Ref": "UserPool",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "UserPoolClientWeb": Object {
      "DependsOn": Array [
        "UserPool",
      ],
      "Properties": Object {
        "ClientName": "authde2c33facd_app_clientWeb",
        "RefreshTokenValidity": Object {
          "Ref": "userpoolClientRefreshTokenValidity",
        },
        "TokenValidityUnits": Object {
          "RefreshToken": "days",
        },
        "UserPoolId": Object {
          "Ref": "UserPool",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
  },
}
`;

exports[`Check Auth Template Generated authstack template in manual flow 1`] = `
Object {
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": Object {
    "ShouldNotCreateEnvResources": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "env",
        },
        "NONE",
      ],
    },
  },
  "Description": "Amplify Cognito Stack for AWS Amplify CLI",
  "Outputs": Object {
    "AmazonWebClient": Object {
      "Value": Object {
        "Ref": "amazonAppId",
      },
    },
    "AppClientID": Object {
      "Description": "The user pool app client id",
      "Value": Object {
        "Ref": "UserPoolClient",
      },
    },
    "AppClientIDWeb": Object {
      "Description": "The user pool app client id for web",
      "Value": Object {
        "Ref": "UserPoolClientWeb",
      },
    },
    "AppleWebClient": Object {
      "Value": Object {
        "Ref": "appleAppId",
      },
    },
    "CreatedSNSRole": Object {
      "Description": "role arn",
      "Value": Object {
        "Fn::GetAtt": Array [
          "SNSRole",
          "Arn",
        ],
      },
    },
    "FacebookWebClient": Object {
      "Value": Object {
        "Ref": "facebookAppId",
      },
    },
    "GoogleWebClient": Object {
      "Value": Object {
        "Ref": "googleClientId",
      },
    },
    "HostedUIDomain": Object {
      "Value": Object {
        "Fn::If": Array [
          "ShouldNotCreateEnvResources",
          Object {
            "Ref": "hostedUIDomainName",
          },
          Object {
            "Fn::Join": Array [
              "-",
              Array [
                Object {
                  "Ref": "hostedUIDomainName",
                },
                Object {
                  "Ref": "env",
                },
              ],
            ],
          },
        ],
      },
    },
    "IdentityPoolId": Object {
      "Description": "Id for the identity pool",
      "Value": Object {
        "Ref": "IdentityPool",
      },
    },
    "IdentityPoolName": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "IdentityPool",
          "Name",
        ],
      },
    },
    "OAuthMetadata": Object {
      "Value": Object {
        "Ref": "oAuthMetadata",
      },
    },
    "UserPoolArn": Object {
      "Description": "Arn for the user pool",
      "Value": Object {
        "Fn::GetAtt": Array [
          "UserPool",
          "Arn",
        ],
      },
    },
    "UserPoolId": Object {
      "Description": "Id for the user pool",
      "Value": Object {
        "Ref": "UserPool",
      },
    },
    "UserPoolName": Object {
      "Value": Object {
        "Ref": "userPoolName",
      },
    },
  },
  "Parameters": Object {
    "AllowedOAuthFlows": Object {
      "Type": "String",
    },
    "AllowedOAuthScopes": Object {
      "Type": "CommaDelimitedList",
    },
    "adminQueries": Object {
      "Type": "String",
    },
    "allowUnauthenticatedIdentities": Object {
      "Type": "String",
    },
    "amazonAppId": Object {
      "Type": "String",
    },
    "appleAppId": Object {
      "Type": "String",
    },
    "authProviders": Object {
      "Type": "CommaDelimitedList",
    },
    "authProvidersUserPool": Object {
      "Type": "CommaDelimitedList",
    },
    "authRoleArn": Object {
      "Type": "String",
    },
    "authSelections": Object {
      "Type": "String",
    },
    "authTriggerConnections": Object {
      "Type": "CommaDelimitedList",
    },
    "autoVerifiedAttributes": Object {
      "Type": "CommaDelimitedList",
    },
    "breakCircularDependency": Object {
      "Type": "String",
    },
    "defaultPasswordPolicy": Object {
      "Type": "String",
    },
    "emailVerificationMessage": Object {
      "Type": "String",
    },
    "emailVerificationSubject": Object {
      "Type": "String",
    },
    "env": Object {
      "Type": "String",
    },
    "facebookAppId": Object {
      "Type": "String",
    },
    "facebookAppIdUserPool": Object {
      "Type": "String",
    },
    "facebookAppSecretUserPool": Object {
      "Type": "String",
    },
    "googleAppIdUserPool": Object {
      "Type": "String",
    },
    "googleAppSecretUserPool": Object {
      "Type": "String",
    },
    "googleClientId": Object {
      "Type": "String",
    },
    "hostedUI": Object {
      "Type": "String",
    },
    "hostedUIDomainName": Object {
      "Type": "String",
    },
    "hostedUIProviderCreds": Object {
      "NoEcho": true,
      "Type": "String",
    },
    "hostedUIProviderMeta": Object {
      "Type": "String",
    },
    "identityPoolName": Object {
      "Type": "String",
    },
    "loginwithamazonAppIdUserPool": Object {
      "Type": "String",
    },
    "loginwithamazonAppSecretUserPool": Object {
      "Type": "String",
    },
    "mfaConfiguration": Object {
      "Type": "String",
    },
    "mfaTypes": Object {
      "Type": "CommaDelimitedList",
    },
    "newCallbackURLs": Object {
      "Type": "CommaDelimitedList",
    },
    "newLogoutURLs": Object {
      "Type": "CommaDelimitedList",
    },
    "oAuthMetadata": Object {
      "Type": "String",
    },
    "passwordPolicyCharacters": Object {
      "Type": "CommaDelimitedList",
    },
    "passwordPolicyMinLength": Object {
      "Type": "String",
    },
    "permissions": Object {
      "Type": "CommaDelimitedList",
    },
    "requiredAttributes": Object {
      "Type": "CommaDelimitedList",
    },
    "resourceName": Object {
      "Type": "String",
    },
    "resourceNameTruncated": Object {
      "Type": "String",
    },
    "selectedParties": Object {
      "Type": "String",
    },
    "serviceName": Object {
      "Type": "String",
    },
    "sharedId": Object {
      "Type": "String",
    },
    "signinwithappleClientIdUserPool": Object {
      "Type": "String",
    },
    "signinwithappleKeyIdUserPool": Object {
      "Type": "String",
    },
    "signinwithapplePrivateKeyUserPool": Object {
      "Type": "String",
    },
    "signinwithappleTeamIdUserPool": Object {
      "Type": "String",
    },
    "smsAuthenticationMessage": Object {
      "Type": "String",
    },
    "smsVerificationMessage": Object {
      "Type": "String",
    },
    "thirdPartyAuth": Object {
      "Type": "String",
    },
    "triggers": Object {
      "Type": "String",
    },
    "unauthRoleArn": Object {
      "Type": "String",
    },
    "useDefault": Object {
      "Type": "String",
    },
    "useEnabledMfas": Object {
      "Type": "String",
    },
    "userPoolGroups": Object {
      "Type": "String",
    },
    "userPoolName": Object {
      "Type": "String",
    },
    "usernameCaseSensitive": Object {
      "Type": "String",
    },
    "userpoolClientGenerateSecret": Object {
      "Type": "String",
    },
    "userpoolClientLambdaRole": Object {
      "Type": "String",
    },
    "userpoolClientReadAttributes": Object {
      "Type": "CommaDelimitedList",
    },
    "userpoolClientRefreshTokenValidity": Object {
      "Type": "String",
    },
    "userpoolClientSetAttributes": Object {
      "Type": "String",
    },
    "userpoolClientWriteAttributes": Object {
      "Type": "CommaDelimitedList",
    },
    "verificationBucketName": Object {
      "Type": "String",
    },
  },
  "Resources": Object {
    "CustomMessageConfirmationBucket": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketName": Object {
          "Fn::If": Array [
            "ShouldNotCreateEnvResources",
            Object {
              "Ref": "verificationBucketName",
            },
            Object {
              "Fn::Join": Array [
                "-",
                Array [
                  Object {
                    "Ref": "verificationBucketName",
                  },
                  Object {
                    "Ref": "env",
                  },
                ],
              ],
            },
          ],
        },
        "CorsConfiguration": Object {
          "CorsRules": Array [
            Object {
              "AllowedHeaders": Array [
                "Authorization",
                "Content-length",
              ],
              "AllowedMethods": Array [
                "GET",
              ],
              "AllowedOrigins": Array [
                "*",
              ],
              "MaxAge": 3000,
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "IdentityPool": Object {
      "Properties": Object {
        "AllowUnauthenticatedIdentities": Object {
          "Ref": "allowUnauthenticatedIdentities",
        },
        "CognitoIdentityProviders": Array [
          Object {
            "ClientId": Object {
              "Ref": "UserPoolClient",
            },
            "ProviderName": Object {
              "Fn::Sub": Array [
                "cognito-idp.\${region}.amazonaws.com/\${client}",
                Object {
                  "client": Object {
                    "Ref": "UserPool",
                  },
                  "region": Object {
                    "Ref": "AWS::Region",
                  },
                },
              ],
            },
          },
          Object {
            "ClientId": Object {
              "Ref": "UserPoolClientWeb",
            },
            "ProviderName": Object {
              "Fn::Sub": Array [
                "cognito-idp.\${region}.amazonaws.com/\${client}",
                Object {
                  "client": Object {
                    "Ref": "UserPool",
                  },
                  "region": Object {
                    "Ref": "AWS::Region",
                  },
                },
              ],
            },
          },
        ],
        "IdentityPoolName": Object {
          "Fn::If": Array [
            "ShouldNotCreateEnvResources",
            "extauth387063394_identitypool_87063394",
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  "extauth387063394_identitypool_87063394__",
                  Object {
                    "Ref": "env",
                  },
                ],
              ],
            },
          ],
        },
        "SupportedLoginProviders": Object {
          "accounts.google.com": Object {
            "Ref": "googleClientId",
          },
          "appleid.apple.com": Object {
            "Ref": "appleAppId",
          },
          "graph.facebook.com": Object {
            "Ref": "facebookAppId",
          },
          "www.amazon.com": Object {
            "Ref": "amazonAppId",
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "IdentityPoolRoleMap": Object {
      "DependsOn": Array [
        "IdentityPool",
        "UserPoolClient",
        "UserPoolClientWeb",
      ],
      "Properties": Object {
        "IdentityPoolId": Object {
          "Ref": "IdentityPool",
        },
        "RoleMappings": Object {
          "UserPoolClientRoleMapping": Object {
            "AmbiguousRoleResolution": "AuthenticatedRole",
            "IdentityProvider": Object {
              "Fn::Sub": Array [
                "cognito-idp.\${region}.amazonaws.com/\${userPool}:\${client}",
                Object {
                  "client": Object {
                    "Ref": "UserPoolClient",
                  },
                  "region": Object {
                    "Ref": "AWS::Region",
                  },
                  "userPool": Object {
                    "Ref": "UserPool",
                  },
                },
              ],
            },
            "Type": "Token",
          },
          "UserPoolWebClientRoleMapping": Object {
            "AmbiguousRoleResolution": "AuthenticatedRole",
            "IdentityProvider": Object {
              "Fn::Sub": Array [
                "cognito-idp.\${region}.amazonaws.com/\${userPool}:\${webClient}",
                Object {
                  "region": Object {
                    "Ref": "AWS::Region",
                  },
                  "userPool": Object {
                    "Ref": "UserPool",
                  },
                  "webClient": Object {
                    "Ref": "UserPoolClientWeb",
                  },
                },
              ],
            },
            "Type": "Token",
          },
        },
        "Roles": Object {
          "authenticated": Object {
            "Ref": "authRoleArn",
          },
          "unauthenticated": Object {
            "Ref": "unauthRoleArn",
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "SNSRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sts:AssumeRole",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "sts:ExternalId": "extaut87063394_role_external_id",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cognito-idp.amazonaws.com",
              },
              "Sid": "",
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "sns:Publish",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "extaut87063394-sns-policy",
          },
        ],
        "RoleName": Object {
          "Fn::If": Array [
            "ShouldNotCreateEnvResources",
            "extaut87063394_sns-role",
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  "sns87063394",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          "-",
                          Object {
                            "Ref": "AWS::StackName",
                          },
                        ],
                      },
                    ],
                  },
                  "-",
                  Object {
                    "Ref": "env",
                  },
                ],
              ],
            },
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "UserPool": Object {
      "DependsOn": Array [
        "SNSRole",
      ],
      "Properties": Object {
        "AutoVerifiedAttributes": Array [
          "email",
        ],
        "EmailVerificationMessage": Object {
          "Ref": "emailVerificationMessage",
        },
        "EmailVerificationSubject": Object {
          "Ref": "emailVerificationSubject",
        },
        "EnabledMfas": Array [
          "SMS_MFA",
          "SOFTWARE_TOKEN_MFA",
        ],
        "MfaConfiguration": Object {
          "Ref": "mfaConfiguration",
        },
        "Policies": Object {
          "PasswordPolicy": Object {
            "MinimumLength": Object {
              "Ref": "passwordPolicyMinLength",
            },
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
          },
        },
        "Schema": Array [
          Object {
            "Mutable": true,
            "Name": "address",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "birthdate",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "email",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "family_name",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "middle_name",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "gender",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "locale",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "given_name",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "name",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "nickname",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "phone_number",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "preferred_username",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "picture",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "profile",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "updated_at",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "website",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "zoneinfo",
            "Required": true,
          },
        ],
        "SmsAuthenticationMessage": Object {
          "Ref": "smsAuthenticationMessage",
        },
        "SmsConfiguration": Object {
          "ExternalId": "extaut87063394_role_external_id",
          "SnsCallerArn": Object {
            "Fn::GetAtt": Array [
              "SNSRole",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": Object {
          "Ref": "smsVerificationMessage",
        },
        "UserAttributeUpdateSettings": Object {
          "AttributesRequireVerificationBeforeUpdate": Array [
            "email",
          ],
        },
        "UserPoolName": Object {
          "Fn::If": Array [
            "ShouldNotCreateEnvResources",
            Object {
              "Ref": "userPoolName",
            },
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "userPoolName",
                  },
                  "-",
                  Object {
                    "Ref": "env",
                  },
                ],
              ],
            },
          ],
        },
        "UsernameConfiguration": Object {
          "CaseSensitive": false,
        },
      },
      "Type": "AWS::Cognito::UserPool",
    },
    "UserPoolClient": Object {
      "DependsOn": Array [
        "UserPool",
      ],
      "Properties": Object {
        "ClientName": "extaut87063394_app_client",
        "GenerateSecret": Object {
          "Ref": "userpoolClientGenerateSecret",
        },
        "ReadAttributes": Object {
          "Ref": "userpoolClientReadAttributes",
        },
        "RefreshTokenValidity": Object {
          "Ref": "userpoolClientRefreshTokenValidity",
        },
        "TokenValidityUnits": Object {
          "RefreshToken": "days",
        },
        "UserPoolId": Object {
          "Ref": "UserPool",
        },
        "WriteAttributes": Object {
          "Ref": "userpoolClientWriteAttributes",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "UserPoolClientWeb": Object {
      "DependsOn": Array [
        "UserPool",
      ],
      "Properties": Object {
        "ClientName": "extaut87063394_app_clientWeb",
        "ReadAttributes": Object {
          "Ref": "userpoolClientReadAttributes",
        },
        "RefreshTokenValidity": Object {
          "Ref": "userpoolClientRefreshTokenValidity",
        },
        "TokenValidityUnits": Object {
          "RefreshToken": "days",
        },
        "UserPoolId": Object {
          "Ref": "UserPool",
        },
        "WriteAttributes": Object {
          "Ref": "userpoolClientWriteAttributes",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
  },
}
`;
