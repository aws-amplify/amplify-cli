{"version":3,"file":"enable.js","sourceRoot":"","sources":["../../../src/commands/auth/enable.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,kEAAuD;AACvD,2CAA6B;AAC7B,sHAAgH;AAChH,oGAA+F;AAC/F,gFAA+E;AAElE,QAAA,IAAI,GAAG,QAAQ,CAAC;AAChB,QAAA,QAAQ,GAAG,MAAM,CAAC;AAClB,QAAA,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAEtB,MAAM,GAAG,GAAG,KAAK,EAAE,OAAmB,EAAE,EAAE;;IAC/C,IAAI,IAAA,iCAAc,GAAE,EAAE;QACpB,IAAA,kDAAsB,EAAC,OAAO,CAAC,CAAC;QAChC,OAAO,SAAS,CAAC;KAClB;IACD,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IAC5B,MAAM,4BAA4B,GAAG,MAAM,OAAO,CAAC,sBAAsB,CAAC,OAAO,EAAE,gBAAQ,EAAE,IAAA,yCAAoB,GAAE,CAAC,CAAC;IACrH,MAAM,kBAAkB,GAAG,YAAa,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE,GAAG,4BAA4B,CAAC,YAAY,EAAE,EAAE,OAAO,CAAC,0DAAC,CAAC;IAC1I,IAAI,CAAC,kBAAkB,EAAE;QACvB,yBAAO,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAC3D,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,kBAAkB,CAAC,WAAW,CAAC,OAAO,EAAE,4BAA4B,CAAC,OAAO,CAAC,CAAC;AACvF,CAAC,CAAC;AAbW,QAAA,GAAG,OAad","sourcesContent":["import { $TSContext } from '@aws-amplify/amplify-cli-core';\nimport { printer } from '@aws-amplify/amplify-prompts';\nimport * as path from 'path';\nimport { printAuthExistsWarning } from '../../provider-utils/awscloudformation/utils/print-auth-exists-warning';\nimport { projectHasAuth } from '../../provider-utils/awscloudformation/utils/project-has-auth';\nimport { getSupportedServices } from '../../provider-utils/supported-services';\n\nexport const name = 'enable';\nexport const category = 'auth';\nexport const alias = ['add'];\n\nexport const run = async (context: $TSContext) => {\n  if (projectHasAuth()) {\n    printAuthExistsWarning(context);\n    return undefined;\n  }\n  const { amplify } = context;\n  const serviceSelectionPromptResult = await amplify.serviceSelectionPrompt(context, category, getSupportedServices());\n  const providerController = await import(path.join(`..`, `..`, `provider-utils`, `${serviceSelectionPromptResult.providerName}`, `index`));\n  if (!providerController) {\n    printer.error('Provider not configured for this category');\n    return undefined;\n  }\n  return providerController.addResource(context, serviceSelectionPromptResult.service);\n};\n"]}