{"version":3,"file":"cognito-defaults.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/assets/cognito-defaults.js"],"names":[],"mappings":"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","sourcesContent":["const uuid = require('uuid');\nconst { oAuthScopes } = require('./string-maps');\n\nconst [sharedId] = uuid.v4().split('-');\n\nconst generalDefaults = (projectName) => ({\n  sharedId,\n  resourceName: `${projectName}${sharedId}`,\n  resourceNameTruncated: `${projectName.substring(0, 6)}${sharedId}`,\n  authSelections: 'identityPoolAndUserPool',\n});\n\nconst userPoolDefaults = (projectName) => {\n  const projectNameTruncated = `${projectName.substring(0, 6)}${sharedId}`;\n  return {\n    resourceNameTruncated: `${projectName.substring(0, 6)}${sharedId}`,\n    userPoolName: `${projectName}_userpool_${sharedId}`,\n    autoVerifiedAttributes: ['email'],\n    mfaConfiguration: 'OFF',\n    mfaTypes: ['SMS Text Message'],\n    smsAuthenticationMessage: 'Your authentication code is {####}',\n    smsVerificationMessage: 'Your verification code is {####}',\n    emailVerificationSubject: 'Your verification code',\n    emailVerificationMessage: 'Your verification code is {####}',\n    defaultPasswordPolicy: false,\n    passwordPolicyMinLength: 8,\n    passwordPolicyCharacters: [],\n    requiredAttributes: ['email'],\n    aliasAttributes: [],\n    userpoolClientGenerateSecret: false,\n    userpoolClientRefreshTokenValidity: 30,\n    userpoolClientWriteAttributes: ['email'],\n    userpoolClientReadAttributes: ['email'],\n    userpoolClientLambdaRole: `${projectNameTruncated}_userpoolclient_lambda_role`,\n    userpoolClientSetAttributes: false,\n  };\n};\n\nconst withSocialDefaults = (projectName) => ({\n  hostedUI: true,\n  hostedUIDomainName: `${projectName.replace('_', '')}-${sharedId}`,\n  AllowedOAuthFlows: ['code'],\n  AllowedOAuthScopes: oAuthScopes.map((i) => i.value),\n});\n\nconst identityPoolDefaults = (projectName) => {\n  // eslint-disable-line\n  return {\n    identityPoolName: `${projectName}_identitypool_${sharedId}`,\n    allowUnauthenticatedIdentities: false,\n  };\n};\n\nconst identityAndUserPoolDefaults = (projectName) => ({\n  // replace dashes with underscores for id pool regex constraint\n  ...identityPoolDefaults(projectName),\n  ...userPoolDefaults(projectName),\n});\n\nconst functionMap = {\n  userPoolOnly: userPoolDefaults,\n  identityPoolAndUserPool: identityAndUserPoolDefaults,\n  identityPoolOnly: identityPoolDefaults,\n};\n\nconst entityKeys = {\n  identityPoolKeys: Object.keys(identityPoolDefaults('')),\n  userPoolKeys: Object.keys(userPoolDefaults('')),\n};\n\nconst getAllDefaults = (name) => {\n  const disallowedChars = /[^A-Za-z0-9_]+/g;\n  let projectName = name.projectConfig\n    ? `${name.projectConfig.projectName.toLowerCase().substring(0, 100)}${sharedId}`\n    : name.substring(0, 100);\n  projectName = projectName.replace(disallowedChars, '_');\n  const target = generalDefaults(projectName);\n  const sources = [userPoolDefaults(projectName), identityAndUserPoolDefaults(projectName), withSocialDefaults(projectName)];\n\n  return Object.assign(target, ...sources);\n};\n\nmodule.exports = {\n  getAllDefaults,\n  functionMap,\n  generalDefaults,\n  withSocialDefaults,\n  entityKeys,\n  sharedId,\n};\n"]}