{"version":3,"file":"print-auth-exists-warning.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/utils/print-auth-exists-warning.ts"],"names":[],"mappings":";;;AAAA,oEAAoF;AACpF,kEAAuD;AACvD,uDAAiD;AAE1C,MAAM,sBAAsB,GAAG,CAAC,OAAmB,EAAQ,EAAE;;IAClE,MAAM,IAAI,GAAG,+BAAY,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,CAAC;IACzE,MAAM,qBAAqB,GAA0B,MAAM,CAAC,OAAO,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,KAAI,EAAE,CAAC,CAAC;IACtF,IAAI,mBAAmB,CAAC,qBAAqB,CAAC,EAAE;QAE9C,MAAM,WAAW,GAAG,CAAA,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,0CAAE,OAAO,KAAI,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;QACrH,yBAAO,CAAC,IAAI,CACV,sFAAsF;YACpF,gGAAgG,WAAW,SAAS,CACvH,CAAC;KACH;SAAM;QACL,yBAAO,CAAC,IAAI,CAAC,sBAAQ,CAAC,UAAU,CAAC,CAAC;KACnC;AACH,CAAC,CAAC;AAbW,QAAA,sBAAsB,0BAajC;AAEF,MAAM,mBAAmB,GAAG,CAAC,aAAoC,EAAW,EAAE;IAC5E,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,MAAK,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAClG,CAAC,CAAC","sourcesContent":["import { $TSContext, $TSObject, stateManager } from '@aws-amplify/amplify-cli-core';\nimport { printer } from '@aws-amplify/amplify-prompts';\nimport { messages } from '../assets/string-maps';\n\nexport const printAuthExistsWarning = (context: $TSContext): void => {\n  const meta = stateManager.getMeta(undefined, { throwIfNotExist: false });\n  const existingAuthResources: [string, $TSObject][] = Object.entries(meta?.auth || {});\n  if (checkAuthIsImported(existingAuthResources)) {\n    // determine which command will make the help message useful, defaults to 'import'\n    const commandVerb = context?.input?.command && context.input.command !== 'update' ? context.input.command : 'import';\n    printer.warn(\n      'Auth has already been imported to this project and cannot be modified from the CLI. ' +\n        `To modify, run \"amplify remove auth\" to unlink the imported auth resource. Then run \"amplify ${commandVerb} auth\".`,\n    );\n  } else {\n    printer.warn(messages.authExists);\n  }\n};\n\nconst checkAuthIsImported = (authResources: [string, $TSObject][]): boolean => {\n  return authResources.filter(([_, resource]) => resource?.serviceType === 'imported').length > 0;\n};\n"]}