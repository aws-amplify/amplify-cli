{"version":3,"file":"check-for-auth-migration.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/utils/check-for-auth-migration.ts"],"names":[],"mappings":";;;AAAA,oEAAoH;AACpH,kEAAiE;AACjE,8EAAyE;AACzE,iFAA2E;AAC3E,2EAA+E;AAKxE,MAAM,0BAA0B,GAAG,KAAK,EAAE,OAAmB,EAAE,QAAgB,EAAE,QAAiB,EAAoB,EAAE;;IAE7H,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;IACxE,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,QAAQ,GAAG,IAAI,iCAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,EAAE;YAClC,yBAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;YAE/C,MAAM,eAAe,GAAG,CAAA,MAAA,OAAO,CAAC,KAAK,CAAC,OAAO,0CAAE,GAAG,MAAI,MAAA,OAAO,CAAC,KAAK,CAAC,OAAO,0CAAE,SAAS,CAAA,KAAI,MAAA,OAAO,CAAC,KAAK,CAAC,OAAO,0CAAE,QAAQ,CAAA,CAAC;YAE1H,IACE,eAAe;gBACf,CAAC,MAAM,0BAAQ,CAAC,OAAO,CAAC,IAAA,uDAAoC,EAAC,oCAAiB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,EAChH;gBAEA,MAAM,IAAA,4DAAgC,EAAC,QAAQ,CAAC,CAAC;gBAEjD,MAAM,SAAS,GAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC;gBAChD,MAAM,IAAA,wDAAyB,EAAC,OAAO,EAAE,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;gBAC/E,OAAO,IAAI,CAAC;aACb;YACD,OAAO,KAAK,CAAC;SACd;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAzBW,QAAA,0BAA0B,8BAyBrC","sourcesContent":["import { $TSContext, AmplifyCategories, getMigrateResourceMessageForOverride } from '@aws-amplify/amplify-cli-core';\nimport { printer, prompter } from '@aws-amplify/amplify-prompts';\nimport { AuthInputState } from '../auth-inputs-manager/auth-input-state';\nimport { generateAuthStackTemplate } from './generate-auth-stack-template';\nimport { migrateResourceToSupportOverride } from './migrate-override-resource';\n\n/*\n * returns true if check goes through, false if cancelled\n */\nexport const checkAuthResourceMigration = async (context: $TSContext, authName: string, isUpdate: boolean): Promise<boolean> => {\n  // check if its imported auth\n  const { imported } = context.amplify.getImportedAuthProperties(context);\n  if (!imported) {\n    const cliState = new AuthInputState(context, authName);\n    if (!cliState.cliInputFileExists()) {\n      printer.debug(\"cli-inputs.json doesn't exist\");\n      // put spinner here\n      const headlessMigrate = context.input.options?.yes || context.input.options?.forcePush || context.input.options?.headless;\n\n      if (\n        headlessMigrate ||\n        (await prompter.yesOrNo(getMigrateResourceMessageForOverride(AmplifyCategories.AUTH, authName, isUpdate), true))\n      ) {\n        // generate cli-inputs for migration from parameters.json\n        await migrateResourceToSupportOverride(authName);\n        // fetch cli Inputs again\n        const cliInputs = cliState.getCLIInputPayload();\n        await generateAuthStackTemplate(context, cliInputs.cognitoConfig.resourceName);\n        return true;\n      }\n      return false;\n    }\n  }\n  return true;\n};\n"]}