{"version":3,"file":"stack-synthesizer.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/auth-stack-builder/stack-synthesizer.ts"],"names":[],"mappings":";;;;;;AAAA,oEAA4E;AAC5E,6CAA6E;AAE7E,oDAA4B;AAC5B,6EAAuE;AACvE,6FAAmH;AAKnH,MAAa,oBAAqB,SAAQ,oCAAsB;IAAhE;;QACmB,WAAM,GAAuB,IAAI,GAAG,EAAE,CAAC;QAsExD,aAAQ,GAAG,CAAC,SAAiB,EAAS,EAAE;YACtC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC;aACpC;YACD,MAAM,IAAI,KAAK,CAAC,SAAS,SAAS,iBAAiB,CAAC,CAAC;QACvD,CAAC,CAAC;IACJ,CAAC;IArEW,uBAAuB,CAAC,KAAY;QAC5C,IACE,KAAK,YAAY,oDAAuB;YACxC,KAAK,YAAY,8DAAyB;YAC1C,KAAK,YAAY,qEAAgC,EACjD;YACA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,QAAQ,GAAG,KAAK,CAAC,4BAA4B,EAAY,CAAC;YAChE,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;YACnC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;SAC5C;aAAM;YACL,MAAM,IAAI,+BAAY,CAAC,cAAc,EAAE;gBACrC,OAAO,EACL,+HAA+H;aAClI,CAAC,CAAC;SACJ;IACH,CAAC;IAES,kBAAkB;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QAC9B,IACE,KAAK,YAAY,oDAAuB;YACxC,KAAK,YAAY,8DAAyB;YAC1C,KAAK,YAAY,qEAAgC,EACjD;YACA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,QAAQ,GAAG,KAAK,CAAC,4BAA4B,EAAY,CAAC;YAChE,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;YACnC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;YAC3C,MAAM,WAAW,GAAG,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/E,OAAO;gBACL,UAAU,EAAE,WAAW;aACxB,CAAC;SACH;QACD,MAAM,IAAI,+BAAY,CAAC,cAAc,EAAE;YACrC,OAAO,EACL,+HAA+H;SAClI,CAAC,CAAC;IACL,CAAC;IAMD,aAAa,CAAC,YAAoB,EAAE,QAAgB;QAClD,oBAAoB,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,gCAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpF,CAAC;IAMD,aAAa;QACX,OAAO,IAAI,GAAG,CAAC,oBAAoB,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAKD,QAAQ,CAAC,KAAY;QACnB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;;AArEH,oDA6EC;AA3EyB,gCAAW,GAA0B,IAAI,GAAG,EAAE,CAAC","sourcesContent":["import { AmplifyFault, JSONUtilities } from '@aws-amplify/amplify-cli-core';\nimport { FileAssetSource, Stack, LegacyStackSynthesizer } from 'aws-cdk-lib';\nimport { Template } from 'cloudform-types';\nimport crypto from 'crypto';\nimport { AmplifyAuthCognitoStack } from './auth-cognito-stack-builder';\nimport { AmplifyUserPoolGroupStack, AmplifyUserPoolGroupStackOutputs } from './auth-user-pool-group-stack-builder';\n\n/**\n * Amplify Stack Synthesizer for Auth Category\n */\nexport class AuthStackSynthesizer extends LegacyStackSynthesizer {\n  private readonly stacks: Map<string, Stack> = new Map();\n  private static readonly stackAssets: Map<string, Template> = new Map();\n\n  /**\n   * This method has been deprecated by cdk and is not used in runtime.\n   * @deprecated Replaced by synthesizeTemplate.\n   */\n  protected synthesizeStackTemplate(stack: Stack): void {\n    if (\n      stack instanceof AmplifyAuthCognitoStack ||\n      stack instanceof AmplifyUserPoolGroupStack ||\n      stack instanceof AmplifyUserPoolGroupStackOutputs\n    ) {\n      this.addStack(stack);\n      const template = stack.renderCloudFormationTemplate() as string;\n      const templateName = stack.node.id;\n      this.setStackAsset(templateName, template);\n    } else {\n      throw new AmplifyFault('UnknownFault', {\n        message:\n          'Error synthesizing the template. Expected Stack to be either instance of AmplifyAuthCognitoStack or AmplifyUserPoolGroupStack',\n      });\n    }\n  }\n\n  protected synthesizeTemplate(): FileAssetSource {\n    const stack = this.boundStack;\n    if (\n      stack instanceof AmplifyAuthCognitoStack ||\n      stack instanceof AmplifyUserPoolGroupStack ||\n      stack instanceof AmplifyUserPoolGroupStackOutputs\n    ) {\n      this.addStack(stack);\n      const template = stack.renderCloudFormationTemplate() as string;\n      const templateName = stack.node.id;\n      this.setStackAsset(templateName, template);\n      const contentHash = crypto.createHash('sha256').update(template).digest('hex');\n      return {\n        sourceHash: contentHash,\n      };\n    }\n    throw new AmplifyFault('UnknownFault', {\n      message:\n        'Error synthesizing the template. Expected Stack to be either instance of AmplifyAuthCognitoStack or AmplifyUserPoolGroupStack',\n    });\n  }\n\n  /**\n   * Set the Stack Value in memory\n   */\n  // eslint-disable-next-line class-methods-use-this\n  setStackAsset(templateName: string, template: string): void {\n    AuthStackSynthesizer.stackAssets.set(templateName, JSONUtilities.parse(template));\n  }\n\n  /**\n   *  return all stacks\n   */\n  // eslint-disable-next-line class-methods-use-this\n  collectStacks(): Map<string, Template> {\n    return new Map(AuthStackSynthesizer.stackAssets.entries());\n  }\n\n  /**\n   * add stack to memory\n   */\n  addStack(stack: Stack): void {\n    this.stacks.set(stack.node.id, stack);\n  }\n\n  getStack = (stackName: string): Stack => {\n    if (this.stacks.has(stackName)) {\n      return this.stacks.get(stackName)!;\n    }\n    throw new Error(`Stack ${stackName} is not created`);\n  };\n}\n"]}