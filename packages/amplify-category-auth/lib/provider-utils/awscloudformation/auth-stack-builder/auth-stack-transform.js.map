{"version":3,"file":"auth-stack-transform.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/auth-stack-builder/auth-stack-transform.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oEAgBuC;AACvC,kEAAyD;AACzD,iDAAmC;AACnC,6CAA+B;AAC/B,oDAAuB;AACvB,2CAA6B;AAC7B,wCAA0B;AAC1B,8EAAyE;AAGzE,0DAA4D;AAC5D,4FAA4F;AAC5F,wEAA2F;AAC3F,6EAAuE;AACvE,2DAA2D;AAC3D,oFAAuE;AAKvE,MAAa,oBAAqB,SAAQ,2CAAwB;IAShE,YAAY,YAAoB;QAC9B,KAAK,CAAC,YAAY,CAAC,CAAC;QA4Df,kBAAa,GAAG,KAAK,IAAmB,EAAE;YAC/C,MAAM,UAAU,GAAG,8BAAW,CAAC,iBAAiB,EAAE,CAAC;YACnD,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YAC7E,MAAM,OAAO,GAAG,MAAM,IAAA,mCAAgB,EAAC,UAAU,EAAE,WAAW,CAAC,CAAC;YAChE,IAAI,OAAO,EAAE;gBACX,MAAM,YAAY,GAAW,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;oBACjH,2BAAS,CAAC,IAAI,CAAC,CAAC,wBAAwB,EAAE,eAAe,IAAI,CAAC,YAAY,4BAA4B,CAAC,CAAC,CAAC;oBACzG,OAAO,EAAE,CAAC;gBACZ,CAAC,CAAC,CAAC;gBAEH,MAAM,WAAW,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,SAAS;oBAClB,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE;wBACP,OAAO,EAAE,SAAS;wBAClB,OAAO,EAAE,CAAC,MAAM,CAAC;wBACjB,QAAQ,EAAE,IAAI;qBACf;iBACF,CAAC,CAAC;gBACH,MAAM,WAAW,GAAG,IAAA,yCAAc,GAAE,CAAC;gBACrC,IAAI;oBACF,MAAM,WAAW;yBACd,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;yBACjE,QAAQ,CAAC,IAAI,CAAC,gBAAkE,EAAE,WAAW,CAAC,CAAC;iBACnG;gBAAC,OAAO,GAAG,EAAE;oBACZ,MAAM,IAAI,+BAAY,CACpB,sBAAsB,EACtB;wBACE,OAAO,EAAE,6BAA6B;wBACtC,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,UAAU,EAAE,0FAA0F;qBACvG,EACD,GAAG,CACJ,CAAC;iBACH;aACF;QACH,CAAC,CAAC;QAKM,uBAAkB,GAAG,KAAK,EAAE,OAAmB,EAAgC,EAAE;;YAEvF,MAAM,KAAK,GAAG;gBACZ,WAAW,EAAE;oBACX,YAAY,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC;iBAClC;gBACD,aAAa,EAAE;oBACb,YAAY,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC;iBACpC;aACF,CAAC;YAEF,IAAI,iBAAiB,GAAwB;gBAC3C,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa;gBAChC,GAAG,KAAK;gBACR,uBAAuB,EAAE,+BAAY,CAAC,UAAU,CAAC,8BAA8B,CAAC;gBAEhF,cAAc,EAAE,+BAAY,CAAC,UAAU,CAAC,qBAAqB,CAAC;gBAC9D,SAAS,EAAE,EAAE;aACd,CAAC;YAGF,MAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YAC9G,IAAI,CAAC,gBAAC,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;gBAC/B,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;aACvE;YAED,IAAI,CAAC,gBAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;gBACtD,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAC7D,OAAO,EACP,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,EACtC,oCAAiB,CAAC,IAAI,EACtB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAC3C,CAAC;gBAEF,MAAM,kBAAkB,GAA6B,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAGpG,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,MAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,mCAAI,EAAE,CAAC,CAAC,GAAG,CACjF,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,EAAE,CAC3D,CAAC;gBACF,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;gBAEpF,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAkB,CAAC,CAAC;gBAE3E,MAAM,sBAAsB,GAA4B,EAAE,CAAC;gBAC3D,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;oBACnB,MAAM,MAAM,GAA0B;wBACpC,WAAW,EAAE,GAAG,KAAK,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG;wBACpD,kBAAkB,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,EAAE;qBACjD,CAAC;oBACF,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACtC,CAAC,CAAC,CAAC;gBACH,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE,WAAW,EAAE,kBAAkB,EAAE,SAAS,EAAE,sBAAsB,EAAE,CAAC,CAAC;aAC9H;YACD,OAAO,iBAAiB,CAAC;QAC3B,CAAC,CAAC;QAKM,wBAAmB,GAAG,KAAK,IAAuB,EAAE;YAC1D,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;YAEpD,OAAO,SAAS,CAAC,GAAG,CAAC,yBAAyB,CAAE,CAAC;QACnD,CAAC,CAAC;QAEK,mBAAc,GAAG,KAAK,EAAE,OAAmB,EAAE,QAAkB,EAAiB,EAAE;YACvF,MAAM,oBAAoB,GAAG,GAAG,IAAI,CAAC,YAAY,+BAA+B,CAAC;YACjF,MAAM,oBAAoB,GAAG,IAAI,CAAC,IAAI,CACpC,8BAAW,CAAC,iBAAiB,EAAE,EAC/B,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,YAAY,EACjB,OAAO,EACP,oBAAoB,CACrB,CAAC;YAEF,MAAM,IAAA,mCAAgB,EAAC,QAAQ,EAAE,oBAAoB,EAAE;gBACrD,cAAc,EAAE,oCAAiB,CAAC,IAAI;aACvC,CAAC,CAAC;YAEH,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC,CAAC;QAEM,oBAAe,GAAG,KAAK,EAAE,OAAmB,EAAiB,EAAE;YACrE,MAAM,sBAAsB,GAAG,IAAI,CAAC,IAAI,CACtC,8BAAW,CAAC,iBAAiB,EAAE,EAC/B,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,YAAY,EACjB,OAAO,EACP,iBAAiB,CAClB,CAAC;YAEF,MAAM,aAAa,GAAG,EAAE,CAAC,YAAY,CAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;YAEjF,MAAM,KAAK,GAAG;gBACZ,WAAW,EAAE;oBACX,YAAY,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC;iBAClC;gBACD,aAAa,EAAE;oBACb,YAAY,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC;iBACpC;aACF,CAAC;YAGF,IAAI,UAAU,GAAwB;gBACpC,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa;gBAChC,GAAG,KAAK;gBACR,uBAAuB,EAAE,IAAI,CAAC,kBAAkB,CAAC,uBAAuB;gBACxE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,cAAc;gBACtD,SAAS,EAAE,EAAE;aACd,CAAC;YAGF,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,IAAI,CAAC,gBAAC,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;gBACpF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;gBAEpF,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE9F,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBAE9C,MAAM,sBAAsB,GAAG,IAAI,CAAC,kBAAkB,CAAC,sBAAuB,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;oBACzF,MAAM,WAAW,GAAG,gBAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;oBACvD,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;gBACH,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;oBACrC,WAAW,EAAE,kBAAkB;oBAC/B,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ;oBAC1C,SAAS;oBACT,sBAAsB;iBACvB,CAAC,CAAC;aACJ;iBAAM,IAAI,gBAAC,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;gBACtD,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACxG;YAED,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;YAG/D,gCAAa,CAAC,SAAS,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;QAC9D,CAAC,CAAC;QAgCM,uBAAkB,GAAG,CAAC,KAA0B,EAAQ,EAAE;YAChE,MAAM,YAAY,GAAG,IAAA,kCAAkB,EAAC,KAAK,CAAC,CAAC;YAE/C,IAAI,KAAK,CAAC,cAAc,KAAK,yBAAyB,IAAI,KAAK,CAAC,cAAc,KAAK,kBAAkB,EAAE;gBACrG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC;oBACjC,WAAW,EAAE,0BAA0B;iBACxC,EACD,gBAAgB,CACjB,CAAC;gBAEF,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE;iBACxD,EACD,kBAAkB,CACnB,CAAC;aACH;YAED,IAAI,KAAK,CAAC,kBAAkB,EAAE;gBAC5B,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,WAAW,CACvB,6BAA6B,EAC7B,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAChC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CACxE,CAAC,QAAQ,EAAE;iBACb,EACD,gBAAgB,CACjB,CAAC;aACH;YAED,IAAI,KAAK,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC;iBACnC,EACD,eAAe,CAChB,CAAC;aACH;YAED,IAAI,KAAK,CAAC,cAAc,KAAK,kBAAkB,EAAE;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC;oBAC7B,WAAW,EAAE,sBAAsB;iBACpC,EACD,YAAY,CACb,CAAC;gBAEF,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,QAAQ,EAAE;oBAClD,WAAW,EAAE,uBAAuB;iBACrC,EACD,aAAa,CACd,CAAC;gBAEF,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC;iBAClC,EACD,cAAc,CACf,CAAC;gBAEF,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,mBAAmB,CAAC;oBACtC,WAAW,EAAE,qCAAqC;iBACnD,EACD,gBAAgB,CACjB,CAAC;gBAEF,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC;oBACnC,WAAW,EAAE,6BAA6B;iBAC3C,EACD,aAAa,CACd,CAAC;gBAEF,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;oBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,sBAAsB,EAAE,WAAW,CAAC,CAAC,QAAQ,EAAE;oBACpE,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,8BAA8B,CAAC;iBACjF,EACD,iBAAiB,CAClB,CAAC;gBAEF,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,YAAY,EAAE;oBACzC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;wBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,QAAQ,EAAE;wBACjD,WAAW,EAAE,UAAU;qBACxB,EACD,gBAAgB,CACjB,CAAC;iBACH;gBAED,IAAI,KAAK,CAAC,cAAc,EAAE;oBACxB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;wBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC;qBACpC,EACD,iBAAiB,CAClB,CAAC;iBACH;gBAED,IAAI,KAAK,CAAC,SAAS,EAAE;oBACnB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;wBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC;qBAC/B,EACD,iBAAiB,CAClB,CAAC;iBACH;gBAED,IAAI,KAAK,CAAC,aAAa,EAAE;oBACvB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;wBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC;qBACnC,EACD,qBAAqB,CACtB,CAAC;iBACH;gBAED,IAAI,KAAK,CAAC,aAAa,EAAE;oBACvB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;wBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC;qBACnC,EACD,mBAAmB,CACpB,CAAC;iBACH;gBAED,IAAI,KAAK,CAAC,WAAW,EAAE;oBACrB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;wBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC;qBACjC,EACD,iBAAiB,CAClB,CAAC;iBACH;gBAED,IAAI,KAAK,CAAC,UAAU,EAAE;oBACpB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAChC;wBACE,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC;qBAChC,EACD,gBAAgB,CACjB,CAAC;iBACH;aACF;QACH,CAAC,CAAC;QAKM,qBAAgB,GAAG,CAAC,KAA0B,EAAQ,EAAE;YAC9D,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;gBACE,IAAI,EAAE,QAAQ;aACf,EACD,KAAK,CACN,CAAC;YAEF,IAAI,CAAC,gBAAC,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;gBAC/B,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;gBAC5B,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC3B,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAiB,EAAE,EAAE;wBAC7C,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;4BACE,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,YAAY,GAAG,SAAS,EAAE;yBAC9D,EACD,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,YAAY,GAAG,SAAS,EAAE,CACrD,CAAC;oBACJ,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACJ;YAED,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAChD,IAAI,GAAG,KAAK,uBAAuB,EAAE;oBACnC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;wBACE,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,IAAI;qBACb,EACD,GAAG,CACJ,CAAC;oBACF,SAAS;iBACV;gBACD,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;oBACrF,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;wBACE,IAAI,EAAE,QAAQ;qBACf,EACD,GAAG,CACJ,CAAC;iBACH;gBAED,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;oBAC9B,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;wBACE,IAAI,EAAE,QAAQ;qBACf,EACD,GAAG,CACJ,CAAC;iBACH;gBACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC7B,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;wBACE,IAAI,EAAE,QAAQ;qBACf,EACD,GAAG,CACJ,CAAC;iBACH;gBACD,IAAI,KAAK,KAAK,aAAa,EAAE;oBAC3B,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;wBACE,IAAI,EAAE,QAAQ;qBACf,EACD,GAAG,CACJ,CAAC;iBACH;gBACD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACxB,IAAI,GAAG,KAAK,yCAAyC,EAAE;wBACrD,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;4BACE,IAAI,EAAE,oBAAoB;yBAC3B,EACD,GAAG,CACJ,CAAC;qBACH;iBACF;aACF;YAED,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;gBAChH,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;oBACE,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,IAAI;iBACd,EACD,uBAAuB,CACxB,CAAC;aACH;QACH,CAAC,CAAC;QAKM,qBAAgB,GAAG,CAAC,KAA0B,EAAQ,EAAE;YAC9D,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;gBACE,UAAU,EAAE,GAAG,CAAC,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC;aAC9D,EACD,6BAA6B,CAC9B,CAAC;YAEF,IAAI,KAAK,CAAC,cAAc,KAAK,kBAAkB,EAAE;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACnC;oBACE,UAAU,EAAE,GAAG,CAAC,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,8BAA8B,CAAC,EAAE,IAAI,CAAC;iBACrF,EACD,8BAA8B,CAC/B,CAAC;aACH;QACH,CAAC,CAAC;QA5hBA,IAAI,CAAC,YAAY,GAAG,IAAI,wCAAoB,EAAE,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,oCAAiB,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,0CAAuB,CAAC,OAAO,CAAC;QAEhD,IAAI,CAAC,gBAAgB,GAAG,IAAI,oDAAuB,CAAC,IAAI,CAAC,IAAI,EAAE,yBAAyB,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAChI,CAAC;IAKM,KAAK,CAAC,SAAS,CAAC,OAAmB;;QAGxC,MAAM,QAAQ,GAAG,IAAI,iCAAc,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC;QAChD,IAAI,CAAC,kBAAkB,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAEjE,MAAM,SAAS,GAAG,+BAAY,CAAC,OAAO,EAAE,CAAC;QACzC,IAAI,MAAA,SAAS,CAAC,IAAI,0CAAE,cAAc,EAAE;YAClC,MAAM,IAAA,2CAAoB,EAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvH;aAAM;YACL,MAAM,IAAA,2CAAoB,EAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvH;QAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE;YACnD,MAAM,IAAA,kEAAiC,EAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACrG;QAED,MAAM,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAG3D,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAG3B,MAAM,QAAQ,GAAa,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAG5D,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC7C,OAAO,QAAQ,CAAC;IAClB,CAAC;IAKO,KAAK,CAAC,sBAAsB,CAAC,KAA0B;QAE7D,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAG7B,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAG7B,MAAM,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,KAAK,CAAC,CAAC;QAGjE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IA4LM,qBAAqB,CAAC,OAAmB,EAAE,aAAqB,EAAE,cAAsB;;QAI7F,IAAI,CAAC,CAAA,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,kBAAkB,0CAAE,MAAM,CAAA,EAAE;YAC9C,OAAO,IAAI,CAAC;SACb;QAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,8BAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;QAC3H,MAAM,WAAW,GAAG,CAAC,IAAc,EAAE,IAAc,EAAW,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnH,MAAM,WAAW,GAAG,CAAC,IAAc,EAAE,IAAc,EAAW,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACxH,IAAI,CAAC,WAAW,CAAC,MAAA,aAAa,CAAC,kBAAkB,mCAAI,EAAE,EAAE,MAAA,cAAc,CAAC,kBAAkB,mCAAI,EAAE,CAAC,EAAE;YACjG,OAAO,CAAC,KAAK,CAAC,KAAK,CACjB,uKAAuK,IAAI,CAAC,SAAS,CACnL,cAAc,CAAC,kBAAkB,CAClC,SAAS,IAAI,CAAC,SAAS,CACtB,aAAa,CAAC,kBAAkB,CACjC,iDAAiD,iBAAiB,eAAe,CACnF,CAAC;YACF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CAkRF;AAxiBD,oDAwiBC","sourcesContent":["import {\n  $TSAny,\n  $TSContext,\n  AmplifyCategories,\n  AmplifyCategoryTransform,\n  AmplifyError,\n  AmplifyStackTemplate,\n  AmplifySupportedService,\n  buildOverrideDir,\n  CFNTemplateFormat,\n  FeatureFlags,\n  JSONUtilities,\n  pathManager,\n  stateManager,\n  Template,\n  writeCFNTemplate,\n} from '@aws-amplify/amplify-cli-core';\nimport { formatter } from '@aws-amplify/amplify-prompts';\nimport * as cdk from 'aws-cdk-lib';\nimport * as fs from 'fs-extra';\nimport _ from 'lodash';\nimport * as path from 'path';\nimport * as vm from 'vm2';\nimport { AuthInputState } from '../auth-inputs-manager/auth-input-state';\nimport { CognitoCLIInputs } from '../service-walkthrough-types/awsCognito-user-input-types';\nimport { AuthTriggerConnection, AuthTriggerPermissions, CognitoStackOptions } from '../service-walkthrough-types/cognito-user-input-types';\nimport { configureSmsOption } from '../utils/configure-sms';\nimport { generateNestedAuthTriggerTemplate } from '../utils/generate-auth-trigger-template';\nimport { createUserPoolGroups, updateUserPoolGroups } from '../utils/synthesize-resources';\nimport { AmplifyAuthCognitoStack } from './auth-cognito-stack-builder';\nimport { AuthStackSynthesizer } from './stack-synthesizer';\nimport { getProjectInfo } from '@aws-amplify/cli-extensibility-helper';\n\n/**\n *  Class to handle Auth cdk generation / override functionality\n */\nexport class AmplifyAuthTransform extends AmplifyCategoryTransform {\n  private _app: cdk.App;\n  private _category: string;\n  private _service: string;\n  private _authTemplateObj: AmplifyAuthCognitoStack; // Props to modify Root stack data\n  private _synthesizer: AuthStackSynthesizer;\n  private _cliInputs: CognitoCLIInputs;\n  private _cognitoStackProps: CognitoStackOptions;\n\n  constructor(resourceName: string) {\n    super(resourceName);\n    this._synthesizer = new AuthStackSynthesizer();\n    this._app = new cdk.App();\n    this._category = AmplifyCategories.AUTH;\n    this._service = AmplifySupportedService.COGNITO;\n    // eslint-disable-next-line spellcheck/spell-checker\n    this._authTemplateObj = new AmplifyAuthCognitoStack(this._app, 'AmplifyAuthCongitoStack', { synthesizer: this._synthesizer });\n  }\n\n  /**\n   * Entry point to generate CFN template w/o overrides\n   */\n  public async transform(context: $TSContext): Promise<Template> {\n    // parse Input data\n    // validating cli-inputs\n    const cliState = new AuthInputState(context, this.resourceName);\n    this._cliInputs = cliState.getCLIInputPayload();\n    this._cognitoStackProps = await this.generateStackProps(context);\n\n    const resources = stateManager.getMeta();\n    if (resources.auth?.userPoolGroups) {\n      await updateUserPoolGroups(context, this._cognitoStackProps.resourceName!, this._cognitoStackProps.userPoolGroupList);\n    } else {\n      await createUserPoolGroups(context, this._cognitoStackProps.resourceName!, this._cognitoStackProps.userPoolGroupList);\n    }\n    // generate custom Auth Trigger for Cognito\n    if (this._cognitoStackProps.breakCircularDependency) {\n      await generateNestedAuthTriggerTemplate(this._category, this.resourceName, this._cognitoStackProps);\n    }\n    // this will also include lambda triggers and adminQueries once api and function transform are done\n    await this.generateStackResources(this._cognitoStackProps);\n\n    // apply override on Amplify Object having CDK Constructs for Auth Stack\n    await this.applyOverride();\n\n    // generate CFN template\n    const template: Template = await this.synthesizeTemplates();\n\n    // save stack and parameters.json\n    await this.saveBuildFiles(context, template);\n    return template;\n  }\n\n  /**\n   * Generates CFN Resources for Auth\n   */\n  private async generateStackResources(props: CognitoStackOptions): Promise<void> {\n    // add CFN parameter\n    this.addCfnParameters(props);\n\n    // add CFN condition\n    this.addCfnConditions(props);\n    // generate Resources\n\n    await this._authTemplateObj.generateCognitoStackResources(props);\n\n    // generate Output\n    this.generateCfnOutputs(props);\n  }\n\n  public applyOverride = async (): Promise<void> => {\n    const backendDir = pathManager.getBackendDirPath();\n    const overrideDir = path.join(backendDir, this._category, this.resourceName);\n    const isBuild = await buildOverrideDir(backendDir, overrideDir);\n    if (isBuild) {\n      const overrideCode: string = await fs.readFile(path.join(overrideDir, 'build', 'override.js'), 'utf-8').catch(() => {\n        formatter.list(['No override File Found', `To override ${this.resourceName} run amplify override auth`]);\n        return '';\n      });\n\n      const sandboxNode = new vm.NodeVM({\n        console: 'inherit',\n        timeout: 5000,\n        sandbox: {},\n        require: {\n          context: 'sandbox',\n          builtin: ['path'],\n          external: true,\n        },\n      });\n      const projectInfo = getProjectInfo();\n      try {\n        await sandboxNode\n          .run(overrideCode, path.join(overrideDir, 'build', 'override.js'))\n          .override(this._authTemplateObj as AmplifyAuthCognitoStack & AmplifyStackTemplate, projectInfo);\n      } catch (err) {\n        throw new AmplifyError(\n          'InvalidOverrideError',\n          {\n            message: `Executing overrides failed.`,\n            details: err.message,\n            resolution: 'There may be runtime errors in your overrides file. If so, fix the errors and try again.',\n          },\n          err,\n        );\n      }\n    }\n  };\n\n  /**\n   * Generate Object required by cdk to generate Auth cfn template\n   */\n  private generateStackProps = async (context: $TSContext): Promise<CognitoStackOptions> => {\n    // roles to append to cognito stacks\n    const roles = {\n      authRoleArn: {\n        'Fn::GetAtt': ['AuthRole', 'Arn'],\n      },\n      unauthRoleArn: {\n        'Fn::GetAtt': ['UnauthRole', 'Arn'],\n      },\n    };\n\n    let cognitoStackProps: CognitoStackOptions = {\n      ...this._cliInputs.cognitoConfig,\n      ...roles,\n      breakCircularDependency: FeatureFlags.getBoolean('auth.breakcirculardependency'),\n      // eslint-disable-next-line spellcheck/spell-checker\n      useEnabledMfas: FeatureFlags.getBoolean('auth.useenabledmfas'),\n      dependsOn: [],\n    };\n\n    // get env secrets\n    const teamProviderObj = context.amplify.loadEnvResourceParameters(context, this._category, this.resourceName);\n    if (!_.isEmpty(teamProviderObj)) {\n      cognitoStackProps = Object.assign(cognitoStackProps, teamProviderObj);\n    }\n    // determine permissions needed for each trigger module\n    if (!_.isEmpty(this._cliInputs.cognitoConfig.triggers)) {\n      const permissions = await context.amplify.getTriggerPermissions(\n        context,\n        this._cliInputs.cognitoConfig.triggers,\n        AmplifyCategories.AUTH,\n        this._cliInputs.cognitoConfig.resourceName,\n      );\n\n      const triggerPermissions: AuthTriggerPermissions[] = permissions?.map((i: string) => JSON.parse(i));\n\n      // handle dependsOn data\n      const dependsOnKeys = Object.keys(this._cliInputs.cognitoConfig.triggers ?? {}).map(\n        (i) => `${this._cliInputs.cognitoConfig.resourceName}${i}`,\n      );\n      const dependsOn = context.amplify.dependsOnBlock(context, dependsOnKeys, 'Cognito');\n      // generate trigger config\n      const keys = Object.keys(this._cliInputs.cognitoConfig.triggers as string);\n      // Auth lambda config for Triggers\n      const authTriggerConnections: AuthTriggerConnection[] = [];\n      keys.forEach((key) => {\n        const config: AuthTriggerConnection = {\n          triggerType: key === 'PreSignup' ? 'PreSignUp' : key,\n          lambdaFunctionName: `${this.resourceName}${key}`,\n        };\n        authTriggerConnections.push(config);\n      });\n      cognitoStackProps = Object.assign(cognitoStackProps, { permissions: triggerPermissions, dependsOn, authTriggerConnections });\n    }\n    return cognitoStackProps;\n  };\n\n  /**\n   * return CFN templates synthesized by cdk app\n   */\n  private synthesizeTemplates = async (): Promise<Template> => {\n    this._app.synth();\n    const templates = this._synthesizer.collectStacks();\n    // eslint-disable-next-line spellcheck/spell-checker\n    return templates.get('AmplifyAuthCongitoStack')!;\n  };\n\n  public saveBuildFiles = async (context: $TSContext, template: Template): Promise<void> => {\n    const cognitoStackFileName = `${this.resourceName}-cloudformation-template.json`;\n    const cognitoStackFilePath = path.join(\n      pathManager.getBackendDirPath(),\n      this._category,\n      this.resourceName,\n      'build',\n      cognitoStackFileName,\n    );\n    // write CFN template\n    await writeCFNTemplate(template, cognitoStackFilePath, {\n      templateFormat: CFNTemplateFormat.JSON,\n    });\n    // write parameters.json\n    await this.writeBuildFiles(context);\n  };\n\n  private writeBuildFiles = async (context: $TSContext): Promise<void> => {\n    const parametersJSONFilePath = path.join(\n      pathManager.getBackendDirPath(),\n      this._category,\n      this.resourceName,\n      'build',\n      'parameters.json',\n    );\n\n    const oldParameters = fs.readJSONSync(parametersJSONFilePath, { throws: false });\n\n    const roles = {\n      authRoleArn: {\n        'Fn::GetAtt': ['AuthRole', 'Arn'],\n      },\n      unauthRoleArn: {\n        'Fn::GetAtt': ['UnauthRole', 'Arn'],\n      },\n    };\n\n    // save parameters\n    let parameters: CognitoStackOptions = {\n      ...this._cliInputs.cognitoConfig,\n      ...roles,\n      breakCircularDependency: this._cognitoStackProps.breakCircularDependency,\n      useEnabledMfas: this._cognitoStackProps.useEnabledMfas,\n      dependsOn: [], // to support undefined meta in update,\n    };\n\n    // convert triggers to JSON\n    if (this._cognitoStackProps.triggers && !_.isEmpty(this._cognitoStackProps.triggers)) {\n      this._cognitoStackProps.triggers = JSON.stringify(this._cognitoStackProps.triggers);\n      // convert permissions\n      const triggerPermissions = this._cognitoStackProps.permissions!.map((i) => JSON.stringify(i));\n      // convert dependsOn\n      const { dependsOn } = this._cognitoStackProps;\n      // convert auth trigger connections\n      const authTriggerConnections = this._cognitoStackProps.authTriggerConnections!.map((obj) => {\n        const modifiedObj = _.omit(obj, ['lambdaFunctionArn']);\n        return JSON.stringify(modifiedObj);\n      });\n      parameters = Object.assign(parameters, {\n        permissions: triggerPermissions,\n        triggers: this._cognitoStackProps.triggers,\n        dependsOn,\n        authTriggerConnections,\n      });\n    } else if (_.isEmpty(this._cognitoStackProps.triggers)) {\n      parameters = Object.assign(parameters, { triggers: JSON.stringify(this._cognitoStackProps.triggers) });\n    }\n\n    this.validateCfnParameters(context, oldParameters, parameters);\n\n    // save parameters\n    JSONUtilities.writeJson(parametersJSONFilePath, parameters);\n  };\n\n  /**\n   * validate cfn Parameters for the bug mentioned below\n   */\n  public validateCfnParameters(context: $TSContext, oldParameters: $TSAny, parametersJson: $TSAny): boolean {\n    // There was a bug between v7.3.0 and v7.6.9 where Cognito resources were being created with incorrect `requiredAttributes` parameter\n    // Since `requiredAttributes` is immutable, we must adjust this or CloudFormation step will fail\n    // More info: https://github.com/aws-amplify/amplify-cli/issues/9525\n    if (!oldParameters?.requiredAttributes?.length) {\n      return true;\n    }\n\n    const cliInputsFilePath = path.join(pathManager.getBackendDirPath(), this._category, this.resourceName, 'cli-inputs.json');\n    const containsAll = (arr1: string[], arr2: string[]): boolean => arr2.every((arr2Item) => arr1.includes(arr2Item));\n    const sameMembers = (arr1: string[], arr2: string[]): boolean => arr1.length === arr2.length && containsAll(arr2, arr1);\n    if (!sameMembers(oldParameters.requiredAttributes ?? [], parametersJson.requiredAttributes ?? [])) {\n      context.print.error(\n        `Cognito configuration in the cloud has drifted from local configuration. Present changes cannot be pushed until drift is fixed. \\`requiredAttributes\\` requested is ${JSON.stringify(\n          parametersJson.requiredAttributes,\n        )}, but ${JSON.stringify(\n          oldParameters.requiredAttributes,\n        )} is required by Cognito configuration. Update ${cliInputsFilePath} to continue.`,\n      );\n      process.exit(1);\n    }\n    return true;\n  }\n\n  /**\n   * generate cfn outputs\n   */\n  private generateCfnOutputs = (props: CognitoStackOptions): void => {\n    const configureSMS = configureSmsOption(props);\n\n    if (props.authSelections === 'identityPoolAndUserPool' || props.authSelections === 'identityPoolOnly') {\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.ref('IdentityPool'),\n          description: 'Id for the identity pool',\n        },\n        'IdentityPoolId',\n      );\n\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.getAtt('IdentityPool', 'Name').toString(),\n        },\n        'IdentityPoolName',\n      );\n    }\n\n    if (props.hostedUIDomainName) {\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.conditionIf(\n            'ShouldNotCreateEnvResources',\n            cdk.Fn.ref('hostedUIDomainName'),\n            cdk.Fn.join('-', [cdk.Fn.ref('hostedUIDomainName'), cdk.Fn.ref('env')]),\n          ).toString(),\n        },\n        'HostedUIDomain',\n      );\n    }\n\n    if (props.oAuthMetadata) {\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.ref('oAuthMetadata'),\n        },\n        'OAuthMetadata',\n      );\n    }\n\n    if (props.authSelections !== 'identityPoolOnly') {\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.ref('UserPool'),\n          description: 'Id for the user pool',\n        },\n        'UserPoolId',\n      );\n\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.getAtt('UserPool', 'Arn').toString(),\n          description: 'Arn for the user pool',\n        },\n        'UserPoolArn',\n      );\n\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.ref('userPoolName'),\n        },\n        'UserPoolName',\n      );\n\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.ref('UserPoolClientWeb'),\n          description: 'The user pool app client id for web',\n        },\n        'AppClientIDWeb',\n      );\n\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.ref('UserPoolClient'),\n          description: 'The user pool app client id',\n        },\n        'AppClientID',\n      );\n\n      this._authTemplateObj.addCfnOutput(\n        {\n          value: cdk.Fn.getAtt('UserPoolClientInputs', 'appSecret').toString(),\n          condition: this._authTemplateObj.getCfnCondition('ShouldOutputAppClientSecrets'),\n        },\n        'AppClientSecret',\n      );\n\n      if (!props.useEnabledMfas || configureSMS) {\n        this._authTemplateObj.addCfnOutput(\n          {\n            value: cdk.Fn.getAtt('SNSRole', 'Arn').toString(),\n            description: 'role arn',\n          },\n          'CreatedSNSRole',\n        );\n      }\n\n      if (props.googleClientId) {\n        this._authTemplateObj.addCfnOutput(\n          {\n            value: cdk.Fn.ref('googleClientId'),\n          },\n          'GoogleWebClient',\n        );\n      }\n\n      if (props.googleIos) {\n        this._authTemplateObj.addCfnOutput(\n          {\n            value: cdk.Fn.ref('googleIos'),\n          },\n          'GoogleIOSClient',\n        );\n      }\n\n      if (props.googleAndroid) {\n        this._authTemplateObj.addCfnOutput(\n          {\n            value: cdk.Fn.ref('googleAndroid'),\n          },\n          'GoogleAndroidClient',\n        );\n      }\n\n      if (props.facebookAppId) {\n        this._authTemplateObj.addCfnOutput(\n          {\n            value: cdk.Fn.ref('facebookAppId'),\n          },\n          'FacebookWebClient',\n        );\n      }\n\n      if (props.amazonAppId) {\n        this._authTemplateObj.addCfnOutput(\n          {\n            value: cdk.Fn.ref('amazonAppId'),\n          },\n          'AmazonWebClient',\n        );\n      }\n\n      if (props.appleAppId) {\n        this._authTemplateObj.addCfnOutput(\n          {\n            value: cdk.Fn.ref('appleAppId'),\n          },\n          'AppleWebClient',\n        );\n      }\n    }\n  };\n\n  /**\n   *  adds cfn parameters\n   */\n  private addCfnParameters = (props: CognitoStackOptions): void => {\n    this._authTemplateObj.addCfnParameter(\n      {\n        type: 'String',\n      },\n      'env',\n    );\n\n    if (!_.isEmpty(props.dependsOn)) {\n      const { dependsOn } = props;\n      dependsOn?.forEach((param) => {\n        param.attributes.forEach((attribute: $TSAny) => {\n          this._authTemplateObj.addCfnParameter(\n            {\n              type: 'String',\n              default: `${param.category}${param.resourceName}${attribute}`,\n            },\n            `${param.category}${param.resourceName}${attribute}`,\n          );\n        });\n      });\n    }\n\n    for (const [key, value] of Object.entries(props)) {\n      if (key === 'hostedUIProviderCreds') {\n        this._authTemplateObj.addCfnParameter(\n          {\n            type: 'String',\n            noEcho: true,\n          },\n          key,\n        );\n        continue;\n      }\n      if (typeof value === 'string' || (typeof value === 'object' && !Array.isArray(value))) {\n        this._authTemplateObj.addCfnParameter(\n          {\n            type: 'String',\n          },\n          key,\n        );\n      }\n\n      if (typeof value === 'boolean') {\n        this._authTemplateObj.addCfnParameter(\n          {\n            type: 'String',\n          },\n          key,\n        );\n      }\n      if (typeof value === 'number') {\n        this._authTemplateObj.addCfnParameter(\n          {\n            type: 'String',\n          },\n          key,\n        );\n      }\n      if (value === 'parentStack') {\n        this._authTemplateObj.addCfnParameter(\n          {\n            type: 'String',\n          },\n          key,\n        );\n      }\n      if (Array.isArray(value)) {\n        if (key !== 'userAutoVerifiedAttributeUpdateSettings') {\n          this._authTemplateObj.addCfnParameter(\n            {\n              type: 'CommaDelimitedList',\n            },\n            key,\n          );\n        }\n      }\n    }\n\n    if (Object.keys(props).includes('hostedUIProviderMeta') && !Object.keys(props).includes('hostedUIProviderCreds')) {\n      this._authTemplateObj.addCfnParameter(\n        {\n          type: 'String',\n          default: '[]',\n        },\n        'hostedUIProviderCreds',\n      );\n    }\n  };\n\n  /**\n   *  adds cfn conditions\n   */\n  private addCfnConditions = (props: CognitoStackOptions): void => {\n    this._authTemplateObj.addCfnCondition(\n      {\n        expression: cdk.Fn.conditionEquals(cdk.Fn.ref('env'), 'NONE'),\n      },\n      'ShouldNotCreateEnvResources',\n    );\n\n    if (props.authSelections !== 'identityPoolOnly') {\n      this._authTemplateObj.addCfnCondition(\n        {\n          expression: cdk.Fn.conditionEquals(cdk.Fn.ref('userpoolClientGenerateSecret'), true),\n        },\n        'ShouldOutputAppClientSecrets',\n      );\n    }\n  };\n}\n"]}