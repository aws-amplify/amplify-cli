{"version":3,"file":"auth-cognito-stack-builder.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/auth-stack-builder/auth-cognito-stack-builder.ts"],"names":[],"mappings":"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","sourcesContent":["import * as cdk from 'aws-cdk-lib';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cognito from 'aws-cdk-lib/aws-cognito';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport { AmplifyAuthCognitoStackTemplate } from '@aws-amplify/cli-extensibility-helper';\nimport { $TSAny, JSONUtilities } from '@aws-amplify/amplify-cli-core';\nimport * as fs from 'fs-extra';\nimport _ from 'lodash';\nimport { Construct } from 'constructs';\nimport {\n  hostedUILambdaFilePath,\n  hostedUIProviderLambdaFilePath,\n  mfaLambdaFilePath,\n  oauthLambdaFilePath,\n  openIdLambdaFilePath,\n  userPoolClientLambdaFilePath,\n} from '../constants';\nimport { CognitoStackOptions } from '../service-walkthrough-types/cognito-user-input-types';\nimport { configureSmsOption } from '../utils/configure-sms';\n\nconst CFN_TEMPLATE_FORMAT_VERSION = '2010-09-09';\nconst ROOT_CFN_DESCRIPTION = 'Amplify Cognito Stack for AWS Amplify CLI';\n\nconst LambdaTriggersKeys = [\n  'CreateAuthChallenge',\n  'CustomMessage',\n  'DefineAuthChallenge',\n  'PostAuthentication',\n  'PostConfirmation',\n  'PreAuthentication',\n  'PreSignup',\n  'PreTokenGeneration',\n  'VerifyAuthChallengeResponse',\n];\n\nconst authProvidersList: Record<string, string> = {\n  'graph.facebook.com': 'facebookAppId',\n  'accounts.google.com': 'googleClientId',\n  'www.amazon.com': 'amazonAppId',\n  // eslint-disable-next-line spellcheck/spell-checker\n  'appleid.apple.com': 'appleAppId',\n};\n\n/**\n *  default props for Auth Stack\n */\nexport type AmplifyAuthCognitoStackProps = {\n  synthesizer: cdk.IStackSynthesizer;\n};\n\n/**\n * L2 construct for amplify auth cognito stack\n */\nexport class AmplifyAuthCognitoStack extends cdk.Stack implements AmplifyAuthCognitoStackTemplate {\n  private _scope: Construct;\n  private _cfnParameterMap: Map<string, cdk.CfnParameter> = new Map();\n  private _cfnConditionMap: Map<string, cdk.CfnCondition> = new Map();\n  private _cfnOutputMap: Map<string, cdk.CfnOutput> = new Map();\n  private _cfnMappingMap: Map<string, cdk.CfnMapping> = new Map();\n  private _cfnResourceMap: Map<string, cdk.CfnResource> = new Map();\n  customMessageConfirmationBucket?: s3.CfnBucket | undefined;\n  snsRole: iam.CfnRole | undefined;\n  userPool: cognito.CfnUserPool | undefined;\n  userPoolClientWeb: cognito.CfnUserPoolClient | undefined;\n  userPoolClient: cognito.CfnUserPoolClient | undefined;\n  identityPool: cognito.CfnIdentityPool | undefined;\n  identityPoolRoleMap: cognito.CfnIdentityPoolRoleAttachment | undefined;\n  lambdaConfigPermissions?: Record<string, lambda.CfnPermission>;\n  lambdaTriggerPermissions?: Record<string, iam.CfnPolicy>;\n  // custom resources userPoolClient\n  userPoolClientLambda?: lambda.CfnFunction;\n  userPoolClientRole?: iam.CfnRole;\n  userPoolClientLambdaPolicy?: iam.CfnPolicy;\n  userPoolClientLogPolicy?: iam.CfnPolicy;\n  userPoolClientInputs?: cdk.CustomResource;\n  // custom resources HostedUI\n  hostedUICustomResource?: lambda.CfnFunction;\n  hostedUICustomResourcePolicy?: iam.CfnPolicy;\n  hostedUICustomResourceLogPolicy?: iam.CfnPolicy;\n  hostedUICustomResourceInputs?: cdk.CustomResource;\n  // custom resource HostedUI Provider\n  hostedUIProvidersCustomResource?: lambda.CfnFunction;\n  hostedUIProvidersCustomResourcePolicy?: iam.CfnPolicy;\n  hostedUIProvidersCustomResourceLogPolicy?: iam.CfnPolicy;\n  hostedUIProvidersCustomResourceInputs?: cdk.CustomResource;\n  // custom resource OAUTH Provider\n  oAuthCustomResource?: lambda.CfnFunction;\n  oAuthCustomResourcePolicy?: iam.CfnPolicy;\n  oAuthCustomResourceLogPolicy?: iam.CfnPolicy;\n  oAuthCustomResourceInputs?: cdk.CustomResource;\n  // custom resource MFA\n  mfaLambda?: lambda.CfnFunction;\n  mfaLogPolicy?: iam.CfnPolicy;\n  mfaLambdaPolicy?: iam.CfnPolicy;\n  mfaLambdaInputs?: cdk.CustomResource;\n  mfaLambdaRole?: iam.CfnRole;\n\n  // custom resource identity pool - OPenId Lambda Role\n  openIdLambda?: lambda.CfnFunction;\n  openIdLogPolicy?: iam.CfnPolicy;\n  openIdLambdaIAMPolicy?: iam.CfnPolicy;\n  openIdLambdaInputs?: cdk.CustomResource;\n  openIdLambdaRole?: iam.CfnRole;\n\n  constructor(scope: Construct, id: string, props: AmplifyAuthCognitoStackProps) {\n    super(scope, id, props);\n    this._scope = scope;\n    this.templateOptions.templateFormatVersion = CFN_TEMPLATE_FORMAT_VERSION;\n    this.templateOptions.description = ROOT_CFN_DESCRIPTION;\n    this.lambdaConfigPermissions = {};\n    this.lambdaTriggerPermissions = {};\n  }\n\n  /**\n   * adds a cfn resource\n   */\n  addCfnResource(props: cdk.CfnResourceProps, logicalId: string): void {\n    if (!this._cfnResourceMap.has(logicalId)) {\n      this._cfnResourceMap.set(logicalId, new cdk.CfnResource(this, logicalId, props));\n    } else {\n      throw new Error(`Cfn Resource with LogicalId ${logicalId} already exists`);\n    }\n  }\n\n  /**\n   * get cfn output from logical id\n   */\n  getCfnOutput(logicalId: string): cdk.CfnOutput {\n    if (this._cfnOutputMap.has(logicalId)) {\n      return this._cfnOutputMap.get(logicalId)!;\n    }\n    throw new Error(`Cfn Output with LogicalId ${logicalId} doesn't exist`);\n  }\n\n  /**\n   * get cfn mapping from logical id\n   */\n  getCfnMapping(logicalId: string): cdk.CfnMapping {\n    if (this._cfnMappingMap.has(logicalId)) {\n      return this._cfnMappingMap.get(logicalId)!;\n    }\n    throw new Error(`Cfn Mapping with LogicalId ${logicalId} doesn't exist`);\n  }\n\n  /**\n   * adds cfn output to stack\n   */\n  addCfnOutput(props: cdk.CfnOutputProps, logicalId: string): void {\n    if (!this._cfnOutputMap.has(logicalId)) {\n      this._cfnOutputMap.set(logicalId, new cdk.CfnOutput(this, logicalId, props));\n    } else {\n      throw new Error(`Cfn Parameter with LogicalId ${logicalId} already exists`);\n    }\n  }\n\n  /**\n   * adds cfn mapping to stack\n   */\n  addCfnMapping(props: cdk.CfnMappingProps, logicalId: string): void {\n    if (!this._cfnMappingMap.has(logicalId)) {\n      this._cfnMappingMap.set(logicalId, new cdk.CfnMapping(this, logicalId, props));\n    } else {\n      throw new Error(`Cfn Parameter with LogicalId ${logicalId} already exists`);\n    }\n  }\n\n  /**\n   * adds cfn condition to stack\n   */\n  addCfnCondition(props: cdk.CfnConditionProps, logicalId: string): void {\n    if (!this._cfnConditionMap.has(logicalId)) {\n      this._cfnConditionMap.set(logicalId, new cdk.CfnCondition(this, logicalId, props));\n    } else {\n      throw new Error(`Cfn Parameter with LogicalId ${logicalId} already exists`);\n    }\n  }\n\n  /**\n   * adds cfn parameter to stack\n   */\n  addCfnParameter(props: cdk.CfnParameterProps, logicalId: string): void {\n    if (!this._cfnParameterMap.has(logicalId)) {\n      this._cfnParameterMap.set(logicalId, new cdk.CfnParameter(this, logicalId, props));\n    } else {\n      throw new Error(`Cfn Parameter with LogicalId ${logicalId} already exists`);\n    }\n  }\n\n  /**\n   * get cfn parameter from logical id\n   */\n  getCfnParameter(logicalId: string): cdk.CfnParameter {\n    if (this._cfnParameterMap.has(logicalId)) {\n      return this._cfnParameterMap.get(logicalId)!;\n    }\n    throw new Error(`Cfn Parameter with LogicalId ${logicalId} doesn't exist`);\n  }\n\n  /**\n   * get cfn condition from logical id\n   */\n  getCfnCondition(logicalId: string): cdk.CfnCondition {\n    if (this._cfnConditionMap.has(logicalId)) {\n      return this._cfnConditionMap.get(logicalId)!;\n    }\n    throw new Error(`Cfn Condition with LogicalId ${logicalId} doesn't exist`);\n  }\n\n  generateCognitoStackResources = async (props: CognitoStackOptions): Promise<void> => {\n    const autoVerifiedAttributes = props.autoVerifiedAttributes\n      ? props.autoVerifiedAttributes\n          .concat(props.aliasAttributes ? props.aliasAttributes : [])\n          .filter((attr, i, aliasAttributeArray) => ['email', 'phone_number'].includes(attr) && aliasAttributeArray.indexOf(attr) === i)\n      : [];\n    const configureSMS = configureSmsOption(props);\n\n    if (props.verificationBucketName) {\n      this.customMessageConfirmationBucket = new s3.CfnBucket(this, 'CustomMessageConfirmationBucket', {\n        bucketName: cdk.Fn.conditionIf(\n          'ShouldNotCreateEnvResources',\n          cdk.Fn.ref('verificationBucketName'),\n          cdk.Fn.join('-', [cdk.Fn.ref('verificationBucketName'), cdk.Fn.ref('env')]),\n        ).toString(),\n        accessControl: s3.BucketAccessControl.PRIVATE,\n        corsConfiguration: {\n          corsRules: [\n            {\n              allowedHeaders: ['Authorization', 'Content-length'],\n              allowedMethods: ['GET'],\n              allowedOrigins: ['*'],\n              maxAge: 3000,\n            },\n          ],\n        },\n      });\n      this.customMessageConfirmationBucket.applyRemovalPolicy(cdk.RemovalPolicy.RETAIN);\n    }\n\n    if (props.authSelections !== 'identityPoolOnly') {\n      if (!props.useEnabledMfas || configureSMS) {\n        this.snsRole = new iam.CfnRole(this, 'SNSRole', {\n          roleName: cdk.Fn.conditionIf(\n            'ShouldNotCreateEnvResources',\n            `${props.resourceNameTruncated}_sns-role`,\n            cdk.Fn.join('', [\n              'sns',\n              `${props.sharedId}`,\n              cdk.Fn.select(3, cdk.Fn.split('-', cdk.Fn.ref('AWS::StackName'))),\n              '-',\n              cdk.Fn.ref('env'),\n            ]),\n          ).toString(),\n          assumeRolePolicyDocument: {\n            Version: '2012-10-17',\n            Statement: [\n              {\n                Sid: '',\n                Effect: 'Allow',\n                Principal: {\n                  Service: 'cognito-idp.amazonaws.com',\n                },\n                Action: ['sts:AssumeRole'],\n                Condition: {\n                  StringEquals: {\n                    'sts:ExternalId': `${props.resourceNameTruncated}_role_external_id`,\n                  },\n                },\n              },\n            ],\n          },\n          policies: [\n            {\n              policyName: `${props.resourceNameTruncated}-sns-policy`,\n              policyDocument: {\n                Version: '2012-10-17',\n                Statement: [\n                  {\n                    Effect: 'Allow',\n                    Action: ['sns:Publish'],\n                    Resource: '*',\n                  },\n                ],\n              },\n            },\n          ],\n        });\n      }\n\n      this.userPool = new cognito.CfnUserPool(this, 'UserPool', {\n        userPoolName: cdk.Fn.conditionIf(\n          'ShouldNotCreateEnvResources',\n          cdk.Fn.ref('userPoolName'),\n          cdk.Fn.join('', [cdk.Fn.ref('userPoolName'), '-', cdk.Fn.ref('env')]),\n        ).toString(),\n        policies: {\n          passwordPolicy: {\n            minimumLength: cdk.Fn.ref('passwordPolicyMinLength') as unknown as number,\n            requireLowercase: props.passwordPolicyCharacters!.includes('Requires Lowercase'),\n            requireNumbers: props.passwordPolicyCharacters!.includes('Requires Numbers'),\n            requireSymbols: props.passwordPolicyCharacters!.includes('Requires Symbols'),\n            requireUppercase: props.passwordPolicyCharacters!.includes('Requires Uppercase'),\n          },\n        },\n      });\n\n      if (props.usernameCaseSensitive !== undefined) {\n        this.userPool.usernameConfiguration = {\n          caseSensitive: props.usernameCaseSensitive,\n        };\n      }\n\n      if (props.requiredAttributes && props.requiredAttributes.length > 0) {\n        const schemaAttributes: cognito.CfnUserPool.SchemaAttributeProperty[] = [];\n        props.requiredAttributes.forEach((attr) => {\n          schemaAttributes.push({\n            name: attr,\n            required: true,\n            mutable: true,\n          });\n        });\n        this.userPool!.schema = schemaAttributes;\n      }\n\n      if (!props.breakCircularDependency && props.triggers && props.dependsOn) {\n        props.dependsOn!.forEach((trigger) => {\n          if (trigger.resourceName.includes('CreateAuthChallenge')) {\n            this.userPool!.lambdaConfig = {\n              createAuthChallenge: cdk.Fn.ref(`function${props.resourceName}${'CreateAuthChallenge'}Arn`),\n            };\n          }\n          if (trigger.resourceName.includes('CustomMessage')) {\n            this.userPool!.lambdaConfig = {\n              ...this.userPool!.lambdaConfig,\n              customMessage: cdk.Fn.ref(`function${props.resourceName}${'CustomMessage'}Arn`),\n            };\n          }\n          if (trigger.resourceName.includes('DefineAuthChallenge')) {\n            this.userPool!.lambdaConfig = {\n              ...this.userPool!.lambdaConfig,\n              defineAuthChallenge: cdk.Fn.ref(`function${props.resourceName}${'DefineAuthChallenge'}Arn`),\n            };\n          }\n          if (trigger.resourceName.includes('PostAuthentication')) {\n            this.userPool!.lambdaConfig = {\n              ...this.userPool!.lambdaConfig,\n              postAuthentication: cdk.Fn.ref(`function${props.resourceName}${'PostAuthentication'}Arn`),\n            };\n          }\n          if (trigger.resourceName.includes('PostConfirmation')) {\n            this.userPool!.lambdaConfig = {\n              ...this.userPool!.lambdaConfig,\n              postConfirmation: cdk.Fn.ref(`function${props.resourceName}${'PostConfirmation'}Arn`),\n            };\n          }\n          if (trigger.resourceName.includes('PreAuthentication')) {\n            this.userPool!.lambdaConfig = {\n              ...this.userPool!.lambdaConfig,\n              preAuthentication: cdk.Fn.ref(`function${props.resourceName}${'PreAuthentication'}Arn`),\n            };\n          }\n          if (trigger.resourceName.includes('PreSignup')) {\n            this.userPool!.lambdaConfig = {\n              ...this.userPool!.lambdaConfig,\n              preSignUp: cdk.Fn.ref(`function${props.resourceName}${'PreSignup'}Arn`),\n            };\n          }\n          if (trigger.resourceName.includes('PreTokenGeneration')) {\n            this.userPool!.lambdaConfig = {\n              ...this.userPool!.lambdaConfig,\n              preTokenGeneration: cdk.Fn.ref(`function${props.resourceName}${'PreTokenGeneration'}Arn`),\n            };\n          }\n          if (trigger.resourceName.includes('VerifyAuthChallengeResponse')) {\n            this.userPool!.lambdaConfig = {\n              ...this.userPool!.lambdaConfig,\n              verifyAuthChallengeResponse: cdk.Fn.ref(`function${props.resourceName}${'VerifyAuthChallengeResponse'}Arn`),\n            };\n          }\n        });\n      }\n\n      if (autoVerifiedAttributes && autoVerifiedAttributes.length > 0) {\n        this.userPool!.autoVerifiedAttributes = autoVerifiedAttributes;\n        /**\n         * Reason: All attributes in AttributesRequireVerificationBeforeUpdate must exist in AutoVerifiedAttributes\n         */\n        this.userPool!.userAttributeUpdateSettings = {\n          attributesRequireVerificationBeforeUpdate: autoVerifiedAttributes,\n        };\n      }\n\n      if (autoVerifiedAttributes.includes('email')) {\n        this.userPool.emailVerificationMessage = cdk.Fn.ref('emailVerificationMessage');\n        this.userPool.emailVerificationSubject = cdk.Fn.ref('emailVerificationSubject');\n      }\n\n      // TODO: change this\n      if (props.usernameAttributes && (props.usernameAttributes[0] as string) !== 'username') {\n        this.userPool.usernameAttributes = cdk.Fn.ref('usernameAttributes') as unknown as string[];\n      }\n      // alias attributes\n      if (props.aliasAttributes && props.aliasAttributes.length > 0) {\n        this.userPool.aliasAttributes = cdk.Fn.ref('aliasAttributes') as unknown as string[];\n      }\n\n      this.userPool.mfaConfiguration = cdk.Fn.ref('mfaConfiguration');\n      if (props.useEnabledMfas && props.mfaConfiguration !== 'OFF') {\n        if (configureSMS) {\n          this.userPool.enabledMfas = ['SMS_MFA'];\n        }\n        if (!_.isEmpty(props.mfaTypes) && props.mfaTypes!.includes('TOTP')) {\n          this.userPool.enabledMfas = [...(this.userPool.enabledMfas || []), 'SOFTWARE_TOKEN_MFA'];\n        }\n      }\n\n      if (!props.useEnabledMfas || configureSMS) {\n        this.userPool.smsVerificationMessage = cdk.Fn.ref('smsVerificationMessage');\n        this.userPool.smsAuthenticationMessage = cdk.Fn.ref('smsAuthenticationMessage');\n        this.userPool.smsConfiguration = {\n          externalId: `${props.resourceNameTruncated}_role_external_id`,\n          snsCallerArn: cdk.Fn.getAtt('SNSRole', 'Arn').toString(),\n        };\n      }\n\n      if (configureSMS) {\n        this.userPool.addDependency(this.snsRole!);\n      }\n\n      // updating Lambda Config when FF is (break circular dependency : false)\n\n      if (!props.breakCircularDependency && props.triggers && props.dependsOn) {\n        props.dependsOn.forEach((trigger) => {\n          LambdaTriggersKeys.forEach((key) => {\n            if (trigger.resourceName.includes(key)) {\n              const resourceKey = `UserPool${key}LambdaInvokePermission`;\n              this.lambdaConfigPermissions![`${resourceKey}`] = new lambda.CfnPermission(this, `${resourceKey}`, {\n                action: 'lambda:invokeFunction',\n                principal: 'cognito-idp.amazonaws.com',\n                functionName: cdk.Fn.ref(`function${props.resourceName}${key}Name`),\n                sourceArn: cdk.Fn.getAtt('UserPool', 'Arn').toString(),\n              });\n            }\n          });\n        });\n        // Updating lambda role with permissions to Cognito\n        if (!_.isEmpty(props.permissions)) {\n          this.generateIAMPolicies(props);\n        }\n      }\n      /**\n       *   # Created provide application access to user pool\n            # Depends on UserPool for ID reference\n       */\n      this.userPoolClientWeb = new cognito.CfnUserPoolClient(this, 'UserPoolClientWeb', {\n        userPoolId: cdk.Fn.ref('UserPool'),\n        clientName: `${props.resourceNameTruncated}_app_clientWeb`,\n        tokenValidityUnits: {\n          refreshToken: 'days',\n        },\n      });\n      if (props.userpoolClientSetAttributes) {\n        this.userPoolClientWeb.readAttributes = this._cfnParameterMap.get('userpoolClientReadAttributes')?.valueAsList;\n        this.userPoolClientWeb.writeAttributes = this._cfnParameterMap.get('userpoolClientWriteAttributes')?.valueAsList;\n      }\n      this.userPoolClientWeb.refreshTokenValidity = cdk.Fn.ref('userpoolClientRefreshTokenValidity') as unknown as number;\n      this.userPoolClientWeb.addDependency(this.userPool);\n\n      this.userPoolClient = new cognito.CfnUserPoolClient(this, 'UserPoolClient', {\n        userPoolId: cdk.Fn.ref('UserPool'),\n        clientName: `${props.resourceNameTruncated}_app_client`,\n        tokenValidityUnits: {\n          refreshToken: 'days',\n        },\n      });\n      if (props.userpoolClientSetAttributes) {\n        this.userPoolClient.readAttributes = this._cfnParameterMap.get('userpoolClientReadAttributes')?.valueAsList;\n        this.userPoolClient.writeAttributes = this._cfnParameterMap.get('userpoolClientWriteAttributes')?.valueAsList;\n      }\n      this.userPoolClient.refreshTokenValidity = cdk.Fn.ref('userpoolClientRefreshTokenValidity') as unknown as number;\n      this.userPoolClient.generateSecret = cdk.Fn.ref('userpoolClientGenerateSecret') as unknown as boolean;\n      this.userPoolClient.addDependency(this.userPool);\n\n      this.createUserPoolClientCustomResource(props);\n      if (props.hostedUIDomainName) {\n        this.createHostedUICustomResource();\n      }\n      if (props.hostedUIProviderMeta) {\n        this.createHostedUIProviderCustomResource();\n      }\n      if (props.oAuthMetadata) {\n        this.createOAuthCustomResource();\n      }\n      if (!props.useEnabledMfas && props.mfaConfiguration !== 'OFF') {\n        this.createMFACustomResource(props);\n      }\n    }\n    // Begin IdentityPool Resources\n    if (props.authSelections === 'identityPoolAndUserPool' || props.authSelections === 'identityPoolOnly') {\n      if (props.audiences && props.audiences.length > 0) {\n        this.createOpenIdLambdaCustomResource(props);\n      }\n\n      this.identityPool = new cognito.CfnIdentityPool(this, 'IdentityPool', {\n        identityPoolName: cdk.Fn.conditionIf(\n          'ShouldNotCreateEnvResources',\n          props.identityPoolName,\n          cdk.Fn.join('', [`${props.identityPoolName}`, '__', cdk.Fn.ref('env')]),\n        ).toString(),\n        allowUnauthenticatedIdentities: cdk.Fn.ref('allowUnauthenticatedIdentities') as unknown as boolean,\n      });\n      if (props.authSelections !== 'identityPoolOnly') {\n        this.identityPool.cognitoIdentityProviders = [\n          {\n            clientId: cdk.Fn.ref('UserPoolClient'),\n            providerName: cdk.Fn.sub('cognito-idp.${region}.amazonaws.com/${client}', {\n              region: cdk.Fn.ref('AWS::Region'),\n              client: cdk.Fn.ref('UserPool'),\n            }),\n          },\n          {\n            clientId: cdk.Fn.ref('UserPoolClientWeb'),\n            providerName: cdk.Fn.sub('cognito-idp.${region}.amazonaws.com/${client}', {\n              region: cdk.Fn.ref('AWS::Region'),\n              client: cdk.Fn.ref('UserPool'),\n            }),\n          },\n        ];\n      }\n\n      if (\n        props.authProviders &&\n        !_.isEmpty(props.authProviders) &&\n        !(Object.keys(props.authProviders).length === 1 && props.authProviders[0] === 'accounts.google.com' && props.audiences)\n      ) {\n        this.identityPool.supportedLoginProviders = cdk.Lazy.any({\n          produce: () => {\n            const supportedProvider: $TSAny = {};\n            props.authProviders?.forEach((provider) => {\n              if (Object.keys(authProvidersList).includes(provider)) {\n                supportedProvider[provider] = cdk.Fn.ref(authProvidersList[provider]);\n              }\n            });\n            return supportedProvider;\n          },\n        });\n      }\n      if (props.audiences && props.audiences.length > 0) {\n        this.identityPool.openIdConnectProviderArns = [cdk.Fn.getAtt('OpenIdLambdaInputs', 'providerArn').toString()];\n        this.identityPool.node.addDependency(this.openIdLambdaInputs!.node!.defaultChild!);\n      }\n\n      if ((!props.audiences || props.audiences.length === 0) && props.authSelections !== 'identityPoolOnly') {\n        this.identityPool.node.addDependency(this.userPoolClientInputs!.node!.defaultChild!);\n      }\n      /**\n       *  # Created to map Auth and Unauth roles to the identity pool\n          # Depends on Identity Pool for ID ref\n       */\n      this.identityPoolRoleMap = new cognito.CfnIdentityPoolRoleAttachment(this, 'IdentityPoolRoleMap', {\n        identityPoolId: cdk.Fn.ref('IdentityPool'),\n        roles: {\n          unauthenticated: cdk.Fn.ref('unauthRoleArn'),\n          authenticated: cdk.Fn.ref('authRoleArn'),\n        },\n      });\n      this.identityPoolRoleMap.addDependency(this.identityPool);\n    }\n  };\n\n  /**\n   *  add Function for Custom Resource in Root stack\n   */\n  public renderCloudFormationTemplate = (): string => JSONUtilities.stringify(this._toCloudFormation())!;\n\n  /**\n   * creates userpool client custom resource\n   */\n  createUserPoolClientCustomResource(props: CognitoStackOptions): void {\n    // iam role\n    this.userPoolClientRole = new iam.CfnRole(this, 'UserPoolClientRole', {\n      roleName: cdk.Fn.conditionIf(\n        'ShouldNotCreateEnvResources',\n        cdk.Fn.ref('userpoolClientLambdaRole'),\n        cdk.Fn.join('', [\n          'upClientLambdaRole',\n          `${props.sharedId}`,\n          cdk.Fn.select(3, cdk.Fn.split('-', cdk.Fn.ref('AWS::StackName'))),\n          '-',\n          cdk.Fn.ref('env'),\n        ]),\n      ).toString(),\n      assumeRolePolicyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Principal: {\n              Service: 'lambda.amazonaws.com',\n            },\n            Action: 'sts:AssumeRole',\n          },\n        ],\n      },\n    });\n    this.userPoolClientRole.addDependency(this.userPoolClient!);\n\n    // lambda function\n    this.userPoolClientLambda = new lambda.CfnFunction(this, 'UserPoolClientLambda', {\n      code: {\n        zipFile: fs.readFileSync(userPoolClientLambdaFilePath, 'utf-8'),\n      },\n      handler: 'index.handler',\n      role: cdk.Fn.getAtt('UserPoolClientRole', 'Arn').toString(),\n      runtime: 'nodejs16.x',\n      timeout: 300,\n    });\n    this.userPoolClientLambda.addDependency(this.userPoolClientRole);\n\n    // userPool client lambda policy\n    /**\n     *   # Sets userpool policy for the role that executes the Userpool Client Lambda\n        # Depends on UserPool for Arn\n        # Marked as depending on UserPoolClientRole for easier to understand CFN sequencing\n     */\n    this.userPoolClientLambdaPolicy = new iam.CfnPolicy(this, 'UserPoolClientLambdaPolicy', {\n      // eslint-disable-next-line spellcheck/spell-checker\n      policyName: `${props.resourceNameTruncated}_userpoolclient_lambda_iam_policy`,\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['cognito-idp:DescribeUserPoolClient'],\n            Resource: cdk.Fn.getAtt('UserPool', 'Arn'),\n          },\n        ],\n      },\n      roles: [cdk.Fn.ref('UserPoolClientRole')],\n    });\n    this.userPoolClientLambdaPolicy.addDependency(this.userPoolClientLambda);\n\n    // userPool Client Log policy\n\n    this.userPoolClientLogPolicy = new iam.CfnPolicy(this, 'UserPoolClientLogPolicy', {\n      // eslint-disable-next-line spellcheck/spell-checker\n      policyName: `${props.resourceNameTruncated}_userpoolclient_lambda_log_policy`,\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['logs:CreateLogGroup', 'logs:CreateLogStream', 'logs:PutLogEvents'],\n            Resource: cdk.Fn.sub('arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*', {\n              region: cdk.Fn.ref('AWS::Region'),\n              account: cdk.Fn.ref('AWS::AccountId'),\n              lambda: cdk.Fn.ref('UserPoolClientLambda'),\n            }),\n          },\n        ],\n      },\n      roles: [cdk.Fn.ref('UserPoolClientRole')],\n    });\n    this.userPoolClientLogPolicy.addDependency(this.userPoolClientLambdaPolicy);\n\n    // userPoolClient Custom Resource\n    this.userPoolClientInputs = new cdk.CustomResource(this, 'UserPoolClientInputs', {\n      serviceToken: this.userPoolClientLambda.attrArn,\n      resourceType: 'Custom::LambdaCallout',\n      properties: {\n        clientId: cdk.Fn.ref('UserPoolClient'),\n        userpoolId: cdk.Fn.ref('UserPool'),\n      },\n    });\n    this.userPoolClientInputs.node.addDependency(this.userPoolClientLogPolicy);\n  }\n\n  /**\n   * Creates custom lambda to update userPool client on Cognito\n   */\n  createHostedUICustomResource(): void {\n    // lambda function\n    this.hostedUICustomResource = new lambda.CfnFunction(this, 'HostedUICustomResource', {\n      code: {\n        zipFile: fs.readFileSync(hostedUILambdaFilePath, 'utf-8'),\n      },\n      handler: 'index.handler',\n      role: cdk.Fn.getAtt('UserPoolClientRole', 'Arn').toString(),\n      runtime: 'nodejs16.x',\n      timeout: 300,\n    });\n    this.hostedUICustomResource.addDependency(this.userPoolClientRole!);\n\n    // userPool client lambda policy\n    /**\n     *   # Sets userpool policy for the role that executes the Userpool Client Lambda\n        # Depends on UserPool for Arn\n        # Marked as depending on UserPoolClientRole for easier to understand CFN sequencing\n     */\n    this.hostedUICustomResourcePolicy = new iam.CfnPolicy(this, 'HostedUICustomResourcePolicy', {\n      policyName: cdk.Fn.join('-', [cdk.Fn.ref('UserPool'), cdk.Fn.ref('hostedUI')]),\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['cognito-idp:CreateUserPoolDomain', 'cognito-idp:DescribeUserPool', 'cognito-idp:DeleteUserPoolDomain'],\n            Resource: cdk.Fn.getAtt('UserPool', 'Arn'),\n          },\n          {\n            Effect: 'Allow',\n            Action: ['cognito-idp:DescribeUserPoolDomain'],\n            Resource: '*',\n          },\n        ],\n      },\n      roles: [cdk.Fn.ref('UserPoolClientRole')],\n    });\n    this.hostedUICustomResourcePolicy.addDependency(this.hostedUICustomResource);\n\n    // userPool Client Log policy\n\n    this.hostedUICustomResourceLogPolicy = new iam.CfnPolicy(this, 'HostedUICustomResourceLogPolicy', {\n      policyName: cdk.Fn.join('-', [cdk.Fn.ref('UserPool'), 'hostedUILogPolicy']),\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['logs:CreateLogGroup', 'logs:CreateLogStream', 'logs:PutLogEvents'],\n            Resource: cdk.Fn.sub('arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*', {\n              region: cdk.Fn.ref('AWS::Region'),\n              account: cdk.Fn.ref('AWS::AccountId'),\n              lambda: cdk.Fn.ref('HostedUICustomResource'),\n            }),\n          },\n        ],\n      },\n      roles: [cdk.Fn.ref('UserPoolClientRole')],\n    });\n    this.hostedUICustomResourceLogPolicy.addDependency(this.hostedUICustomResourcePolicy);\n\n    // userPoolClient Custom Resource\n    this.hostedUICustomResourceInputs = new cdk.CustomResource(this, 'HostedUICustomResourceInputs', {\n      serviceToken: this.hostedUICustomResource.attrArn,\n      resourceType: 'Custom::LambdaCallout',\n      properties: {\n        hostedUIDomainName: cdk.Fn.conditionIf(\n          'ShouldNotCreateEnvResources',\n          cdk.Fn.ref('hostedUIDomainName'),\n          cdk.Fn.join('-', [cdk.Fn.ref('hostedUIDomainName'), cdk.Fn.ref('env')]),\n        ),\n        userPoolId: cdk.Fn.ref('UserPool'),\n      },\n    });\n    this.hostedUICustomResourceInputs.node.addDependency(this.hostedUICustomResourceLogPolicy);\n  }\n\n  /**\n   * Creates Custom lambda resource to update 3rd party providers on userpool\n   */\n  createHostedUIProviderCustomResource(): void {\n    // lambda function\n    this.hostedUIProvidersCustomResource = new lambda.CfnFunction(this, 'HostedUIProvidersCustomResource', {\n      code: {\n        zipFile: fs.readFileSync(hostedUIProviderLambdaFilePath, 'utf-8'),\n      },\n      handler: 'index.handler',\n      role: cdk.Fn.getAtt('UserPoolClientRole', 'Arn').toString(),\n      runtime: 'nodejs16.x',\n      timeout: 300,\n    });\n    this.hostedUIProvidersCustomResource.addDependency(this.userPoolClientRole!);\n\n    // userPool client lambda policy\n    /**\n     *   # Sets userpool policy for the role that executes the Userpool Client Lambda\n        # Depends on UserPool for Arn\n        # Marked as depending on UserPoolClientRole for easier to understand CFN sequencing\n     */\n    this.hostedUIProvidersCustomResourcePolicy = new iam.CfnPolicy(this, 'HostedUIProvidersCustomResourcePolicy', {\n      policyName: cdk.Fn.join('-', [cdk.Fn.ref('UserPool'), 'hostedUIProvider']),\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: [\n              'cognito-idp:CreateIdentityProvider',\n              'cognito-idp:UpdateIdentityProvider',\n              'cognito-idp:ListIdentityProviders',\n              'cognito-idp:DeleteIdentityProvider',\n            ],\n            Resource: cdk.Fn.getAtt('UserPool', 'Arn'),\n          },\n          {\n            Effect: 'Allow',\n            Action: ['cognito-idp:DescribeUserPoolDomain'],\n            Resource: '*',\n          },\n        ],\n      },\n      roles: [cdk.Fn.ref('UserPoolClientRole')],\n    });\n    this.hostedUIProvidersCustomResourcePolicy.addDependency(this.hostedUIProvidersCustomResource);\n\n    // userPool Client Log policy\n\n    this.hostedUIProvidersCustomResourceLogPolicy = new iam.CfnPolicy(this, 'HostedUIProvidersCustomResourceLogPolicy', {\n      policyName: cdk.Fn.join('-', [cdk.Fn.ref('UserPool'), 'hostedUIProviderLogPolicy']),\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['logs:CreateLogGroup', 'logs:CreateLogStream', 'logs:PutLogEvents'],\n            Resource: cdk.Fn.sub('arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*', {\n              region: cdk.Fn.ref('AWS::Region'),\n              account: cdk.Fn.ref('AWS::AccountId'),\n              lambda: cdk.Fn.ref('HostedUIProvidersCustomResource'),\n            }),\n          },\n        ],\n      },\n      roles: [cdk.Fn.ref('UserPoolClientRole')],\n    });\n    this.hostedUIProvidersCustomResourceLogPolicy.addDependency(this.hostedUIProvidersCustomResourcePolicy);\n\n    // userPoolClient Custom Resource\n    this.hostedUIProvidersCustomResourceInputs = new cdk.CustomResource(this, 'HostedUIProvidersCustomResourceInputs', {\n      serviceToken: this.hostedUIProvidersCustomResource.attrArn,\n      resourceType: 'Custom::LambdaCallout',\n      properties: {\n        hostedUIProviderMeta: cdk.Fn.ref('hostedUIProviderMeta'),\n        hostedUIProviderCreds: cdk.Fn.ref('hostedUIProviderCreds'),\n        userPoolId: cdk.Fn.ref('UserPool'),\n      },\n    });\n    this.hostedUIProvidersCustomResourceInputs.node.addDependency(this.hostedUIProvidersCustomResourceLogPolicy);\n  }\n\n  /**\n   * creates OAuth customResource for Cognito\n   */\n  createOAuthCustomResource(): void {\n    // lambda function\n    this.oAuthCustomResource = new lambda.CfnFunction(this, 'OAuthCustomResource', {\n      code: {\n        zipFile: fs.readFileSync(oauthLambdaFilePath, 'utf-8'),\n      },\n      handler: 'index.handler',\n      role: cdk.Fn.getAtt('UserPoolClientRole', 'Arn').toString(),\n      runtime: 'nodejs16.x',\n      timeout: 300,\n    });\n\n    this.oAuthCustomResource.node.addDependency(this.hostedUICustomResourceInputs!.node!.defaultChild!);\n    this.oAuthCustomResource.node.addDependency(this.hostedUIProvidersCustomResourceInputs!.node!.defaultChild!);\n\n    // userPool client lambda policy\n    /**\n     *   # Sets userpool policy for the role that executes the Userpool Client Lambda\n        # Depends on UserPool for Arn\n        # Marked as depending on UserPoolClientRole for easier to understand CFN sequencing\n     */\n    this.oAuthCustomResourcePolicy = new iam.CfnPolicy(this, 'OAuthCustomResourcePolicy', {\n      policyName: cdk.Fn.join('-', [cdk.Fn.ref('UserPool'), 'OAuth']),\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['cognito-idp:UpdateUserPoolClient'],\n            Resource: cdk.Fn.getAtt('UserPool', 'Arn'),\n          },\n        ],\n      },\n      roles: [cdk.Fn.ref('UserPoolClientRole')],\n    });\n    this.oAuthCustomResourcePolicy.addDependency(this.oAuthCustomResource);\n\n    // Oauth Log policy\n\n    this.oAuthCustomResourceLogPolicy = new iam.CfnPolicy(this, 'OAuthCustomResourceLogPolicy', {\n      policyName: cdk.Fn.join('-', [cdk.Fn.ref('UserPool'), 'OAuthLogPolicy']),\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['logs:CreateLogGroup', 'logs:CreateLogStream', 'logs:PutLogEvents'],\n            Resource: cdk.Fn.sub('arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*', {\n              region: cdk.Fn.ref('AWS::Region'),\n              account: cdk.Fn.ref('AWS::AccountId'),\n              lambda: cdk.Fn.ref('OAuthCustomResource'),\n            }),\n          },\n        ],\n      },\n      roles: [cdk.Fn.ref('UserPoolClientRole')],\n    });\n    this.oAuthCustomResourceLogPolicy.addDependency(this.oAuthCustomResourcePolicy);\n\n    // oAuth Custom Resource\n    this.oAuthCustomResourceInputs = new cdk.CustomResource(this, 'OAuthCustomResourceInputs', {\n      serviceToken: this.oAuthCustomResource.attrArn,\n      resourceType: 'Custom::LambdaCallout',\n      properties: {\n        hostedUIProviderMeta: cdk.Fn.ref('hostedUIProviderMeta'),\n        oAuthMetadata: cdk.Fn.ref('oAuthMetadata'),\n        webClientId: cdk.Fn.ref('UserPoolClientWeb'),\n        nativeClientId: cdk.Fn.ref('UserPoolClient'),\n        userPoolId: cdk.Fn.ref('UserPool'),\n      },\n    });\n    this.oAuthCustomResourceInputs.node.addDependency(this.oAuthCustomResourceLogPolicy);\n  }\n\n  /**\n   * creates MFA customResource for Cognito\n   */\n  createMFACustomResource(props: CognitoStackOptions): void {\n    // iam role\n    this.mfaLambdaRole = new iam.CfnRole(this, 'MFALambdaRole', {\n      roleName: cdk.Fn.conditionIf(\n        'ShouldNotCreateEnvResources',\n        `${props.resourceNameTruncated}_totp_lambda_role`,\n        cdk.Fn.join('', [`${props.resourceNameTruncated}_totp_lambda_role`, '-', cdk.Fn.ref('env')]),\n      ).toString(),\n      assumeRolePolicyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Principal: {\n              Service: 'lambda.amazonaws.com',\n            },\n            Action: 'sts:AssumeRole',\n          },\n        ],\n      },\n      policies: [\n        {\n          policyName: `${props.resourceNameTruncated}_totp_pass_role_policy`,\n          policyDocument: {\n            Version: '2012-10-17',\n            Statement: [\n              {\n                Effect: 'Allow',\n                Action: ['iam:PassRole'],\n                Resource: cdk.Fn.conditionIf(\n                  'ShouldNotCreateEnvResources',\n                  `arn:aws:iam:::role/${props.resourceNameTruncated}_totp_lambda_role`,\n                  cdk.Fn.join('', [`arn:aws:iam:::role/${props.resourceNameTruncated}__totp_lambda_role`, '-', cdk.Fn.ref('env')]),\n                ),\n              },\n            ],\n          },\n        },\n        {\n          policyName: `${props.resourceNameTruncated}_sns_pass_role_policy`,\n          policyDocument: {\n            Version: '2012-10-17',\n            Statement: [\n              {\n                Effect: 'Allow',\n                Action: ['iam:PassRole'],\n                Resource: cdk.Fn.getAtt('SNSRole', 'Arn'),\n              },\n            ],\n          },\n        },\n      ],\n    });\n    this.mfaLambdaRole.addDependency(this.snsRole!);\n    // lambda function\n    /**\n     *   Lambda which sets MFA config values\n         Depends on MFALambdaRole for role ARN\n     */\n    this.mfaLambda = new lambda.CfnFunction(this, 'MFALambda', {\n      code: {\n        zipFile: fs.readFileSync(mfaLambdaFilePath, 'utf-8'),\n      },\n      handler: 'index.handler',\n      role: cdk.Fn.getAtt('MFALambdaRole', 'Arn').toString(),\n      runtime: 'nodejs16.x',\n      timeout: 300,\n    });\n    this.mfaLambda.addDependency(this.mfaLambdaRole);\n\n    // MFA lambda policy\n    /**\n    # Sets policy for the role that executes the MFA Lambda\n    # Depends on Userpool for Arn\n    # Marked as depending on MFALambda for easier to understand CFN sequencing\n     */\n    this.mfaLambdaPolicy = new iam.CfnPolicy(this, 'MFALambdaPolicy', {\n      policyName: `${props.resourceNameTruncated}_totp_lambda_iam_policy`,\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['cognito-idp:SetUserPoolMfaConfig'],\n            Resource: cdk.Fn.getAtt('UserPool', 'Arn'),\n          },\n        ],\n      },\n      roles: [\n        cdk.Fn.conditionIf(\n          'ShouldNotCreateEnvResources',\n          `${props.resourceNameTruncated}_totp_lambda_role`,\n          cdk.Fn.join('', [`${props.resourceNameTruncated}_totp_lambda_role`, '-', cdk.Fn.ref('env')]),\n        ).toString(),\n      ],\n    });\n    this.mfaLambdaPolicy.addDependency(this.mfaLambda);\n\n    // mfa Log policy\n\n    this.mfaLogPolicy = new iam.CfnPolicy(this, 'MFALogPolicy', {\n      policyName: `${props.resourceNameTruncated}_totp_lambda_log_policy`,\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['logs:CreateLogGroup', 'logs:CreateLogStream', 'logs:PutLogEvents'],\n            Resource: cdk.Fn.sub('arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*', {\n              region: cdk.Fn.ref('AWS::Region'),\n              account: cdk.Fn.ref('AWS::AccountId'),\n              lambda: cdk.Fn.ref('MFALambda'),\n            }),\n          },\n        ],\n      },\n      roles: [\n        cdk.Fn.conditionIf(\n          'ShouldNotCreateEnvResources',\n          `${props.resourceNameTruncated}_totp_lambda_role`,\n          cdk.Fn.join('', [`${props.resourceNameTruncated}_totp_lambda_role`, '-', cdk.Fn.ref('env')]),\n        ).toString(),\n      ],\n    });\n    this.mfaLogPolicy.addDependency(this.mfaLambdaPolicy);\n\n    // mfa Custom Resource\n    /**\n      # Values passed to MFA Lambda\n      # Depends on UserPool for Arn\n      # Depends on MFALambda for Arn\n      # Marked as depending on MFALambdaPolicy for easier to understand CFN sequencing\n     */\n    this.mfaLambdaInputs = new cdk.CustomResource(this, 'MFALambdaInputs', {\n      serviceToken: this.mfaLambda.attrArn,\n      resourceType: 'Custom::LambdaCallout',\n      properties: {\n        mfaConfiguration: cdk.Fn.ref('mfaConfiguration'),\n        totpEnabled: props.mfaTypes!.includes('TOTP'),\n        smsConfigCaller: cdk.Fn.getAtt('SNSRole', 'Arn'),\n        smsAuthenticationMessage: cdk.Fn.ref('smsAuthenticationMessage'),\n        smsConfigExternalId: `${props.resourceNameTruncated}_role_external_id`,\n        userPoolId: cdk.Fn.ref('UserPool'),\n      },\n    });\n    this.mfaLambdaInputs.node.addDependency(this.mfaLogPolicy);\n  }\n\n  /**\n   * creates OpenId customResource for Cognito\n   */\n  createOpenIdLambdaCustomResource(props: CognitoStackOptions): void {\n    // iam role\n    /**\n      # Created to execute Lambda which sets MFA config values\n      # Depends on UserPoolClientInputs to prevent further identity pool resources from being created before userpool is ready\n     */\n    this.openIdLambdaRole = new iam.CfnRole(this, 'OpenIdLambdaRole', {\n      roleName: cdk.Fn.conditionIf(\n        'ShouldNotCreateEnvResources',\n        `${props.resourceNameTruncated}_openid_lambda_role`,\n        cdk.Fn.join('', [`${props.resourceNameTruncated}_openid_lambda_role`, '-', cdk.Fn.ref('env')]),\n      ).toString(),\n      assumeRolePolicyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Principal: {\n              Service: 'lambda.amazonaws.com',\n            },\n            Action: 'sts:AssumeRole',\n          },\n        ],\n      },\n      policies: [\n        {\n          policyName: `${props.resourceNameTruncated}_openid_pass_role_policy`,\n          policyDocument: {\n            Version: '2012-10-17',\n            Statement: [\n              {\n                Effect: 'Allow',\n                Action: ['iam:PassRole'],\n                Resource: cdk.Fn.conditionIf(\n                  'ShouldNotCreateEnvResources',\n                  `arn:aws:iam:::role/${props.resourceNameTruncated}_openid_pass_role_policy`,\n                  cdk.Fn.join('', [`arn:aws:iam:::role/${props.resourceNameTruncated}_openid_pass_role_policy`, '-', cdk.Fn.ref('env')]),\n                ),\n              },\n            ],\n          },\n        },\n      ],\n    });\n    // TODO\n    this.openIdLambdaRole!.node.addDependency(this.userPoolClientInputs!.node!.defaultChild!);\n    // lambda function\n    /**\n     *   Lambda which sets MFA config values\n         Depends on MFALambdaRole for role ARN\n     */\n    this.openIdLambda = new lambda.CfnFunction(this, 'OpenIdLambda', {\n      code: {\n        zipFile: fs.readFileSync(openIdLambdaFilePath, 'utf-8'),\n      },\n      handler: 'index.handler',\n      role: cdk.Fn.getAtt('OpenIdLambdaRole', 'Arn').toString(),\n      runtime: 'nodejs16.x',\n      timeout: 300,\n    });\n    this.openIdLambda.addDependency(this.openIdLambdaRole);\n\n    // OPenId lambda policy\n    /**\n    # Sets policy for the role that executes the OpenId Lambda\n    # Depends on OpenIdLambda for Arn\n    # Marked as depending on MFALambda for easier to understand CFN sequencing\n     */\n    this.openIdLambdaIAMPolicy = new iam.CfnPolicy(this, 'OpenIdLambdaIAMPolicy', {\n      policyName: `${props.resourceNameTruncated}_openid_lambda_iam_policy`,\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['iam:CreateOpenIDConnectProvider', 'iam:GetOpenIDConnectProvider', 'iam:AddClientIDToOpenIDConnectProvider'],\n            Resource: cdk.Fn.sub('arn:aws:iam::${account}:oidc-provider/accounts.google.com', {\n              account: cdk.Fn.ref('AWS::AccountId'),\n            }),\n          },\n          {\n            Effect: 'Allow',\n            Action: ['iam:ListOpenIDConnectProviders'],\n            Resource: cdk.Fn.sub('arn:aws:iam::${account}:oidc-provider/${selector}', {\n              account: cdk.Fn.ref('AWS::AccountId'),\n              selector: '*',\n            }),\n          },\n        ],\n      },\n      roles: [\n        cdk.Fn.conditionIf(\n          'ShouldNotCreateEnvResources',\n          `${props.resourceNameTruncated}_openid_lambda_role`,\n          cdk.Fn.join('', [`${props.resourceNameTruncated}_openid_lambda_role`, '-', cdk.Fn.ref('env')]),\n        ).toString(),\n      ],\n    });\n    this.openIdLambdaIAMPolicy.addDependency(this.openIdLambda);\n\n    // openId Log policy\n    /**\n    # Sets log policy for the role that executes the OpenId  Lambda\n    # Depends on OpenIdLambda for Arn\n    # Marked as depending on UserPoolClientLambdaPolicy for easier to understand CFN sequencing\n     */\n\n    this.openIdLogPolicy = new iam.CfnPolicy(this, 'OpenIdLogPolicy', {\n      policyName: `${props.resourceNameTruncated}_openid_lambda_log_policy`,\n      policyDocument: {\n        Version: '2012-10-17',\n        Statement: [\n          {\n            Effect: 'Allow',\n            Action: ['logs:CreateLogGroup', 'logs:CreateLogStream', 'logs:PutLogEvents'],\n            Resource: cdk.Fn.sub('arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*', {\n              region: cdk.Fn.ref('AWS::Region'),\n              account: cdk.Fn.ref('AWS::AccountId'),\n              lambda: cdk.Fn.ref('OpenIdLambda'),\n            }),\n          },\n        ],\n      },\n      roles: [\n        cdk.Fn.conditionIf(\n          'ShouldNotCreateEnvResources',\n          `${props.resourceNameTruncated}_openid_lambda_role`,\n          cdk.Fn.join('', [`${props.resourceNameTruncated}_openid_lambda_role`, '-', cdk.Fn.ref('env')]),\n        ).toString(),\n      ],\n    });\n    this.openIdLogPolicy.addDependency(this.openIdLambdaIAMPolicy);\n\n    // openId Custom Resource\n    /**\n      # Values passed to OpenId Lambda\n      # Depends on OpenId for Arn\n      # Marked as depending on OpenIdLogPolicy for easier to understand CFN sequencing\n     */\n    this.openIdLambdaInputs = new cdk.CustomResource(this, 'OpenIdLambdaInputs', {\n      serviceToken: this.openIdLambda.attrArn,\n      resourceType: 'Custom::LambdaCallout',\n      properties: {\n        clientIdList: props.audiences?.join(),\n        url: 'https://accounts.google.com',\n      },\n    });\n    this.openIdLambdaInputs.node.addDependency(this.openIdLogPolicy);\n  }\n\n  generateIAMPolicies = (props: CognitoStackOptions): void => {\n    let resource: string;\n    props.permissions?.forEach((permission) => {\n      if (permission.resource.paramType === 'string') {\n        resource = permission.resource.keys as string;\n      }\n      if (permission.resource.paramType === '!GetAtt') {\n        resource = cdk.Fn.getAtt(permission.resource.keys[0], permission.resource.keys[1]).toString();\n      }\n      if (permission.resource.paramType === '!Ref') {\n        resource = cdk.Fn.ref(permission.resource.keys as string);\n      }\n      const resourceKey = `${props.resourceName}${permission.trigger}${permission.policyName}`;\n      this.lambdaTriggerPermissions![resourceKey] = new iam.CfnPolicy(this, resourceKey, {\n        policyName: resourceKey,\n        policyDocument: {\n          Version: '2012-10-17',\n          Statement: [\n            {\n              Effect: permission.effect,\n              Action: permission.actions,\n              Resource: resource,\n            },\n          ],\n        },\n        roles: [cdk.Fn.join('', [`${props.resourceName}${permission.trigger}`, '-', cdk.Fn.ref('env')])],\n      });\n    });\n  };\n}\n"]}