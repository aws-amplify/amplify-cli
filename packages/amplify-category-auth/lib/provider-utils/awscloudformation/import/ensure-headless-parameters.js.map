{"version":3,"file":"ensure-headless-parameters.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/import/ensure-headless-parameters.ts"],"names":[],"mappings":";;;AAAA,oEAA6D;AAGtD,MAAM,wBAAwB,GAAG,CACtC,kBAAsC,EACtC,cAA4C,EACb,EAAE;IAKjC,MAAM,aAAa,GAAG,EAAE,CAAC;IAEzB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;QAC9B,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAClC;IAED,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;QAC/B,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACnC;IAED,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;QAClC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KACtC;IAED,IAAI,kBAAkB,CAAC,cAAc,KAAK,yBAAyB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;QACrG,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KACtC;IAED,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;QAC5B,MAAM,IAAI,+BAAY,CAAC,sBAAsB,EAAE;YAC7C,OAAO,EAAE,0DAA0D,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC7F,IAAI,EAAE,2DAA2D;SAClE,CAAC,CAAC;KACJ;IAED,MAAM,qBAAqB,GAAkC;QAC3D,UAAU,EAAE,cAAc,CAAC,UAAU;QACrC,YAAY,EAAE,EAAE;QAChB,WAAW,EAAE,cAAc,CAAC,WAAW;QACvC,cAAc,EAAE,cAAc,CAAC,cAAc;KAC9C,CAAC;IAEF,IAAI,kBAAkB,CAAC,cAAc,KAAK,yBAAyB,EAAE;QACnE,qBAAqB,CAAC,cAAc,GAAG,cAAc,CAAC,cAAc,CAAC;KACtE;IAED,OAAO,qBAAqB,CAAC;AAC/B,CAAC,CAAC;AA7CW,QAAA,wBAAwB,4BA6CnC","sourcesContent":["import { AmplifyError } from '@aws-amplify/amplify-cli-core';\nimport { ResourceParameters, ImportAuthHeadlessParameters, EnvSpecificResourceParameters } from './types';\n\nexport const ensureHeadlessParameters = (\n  resourceParameters: ResourceParameters,\n  headlessParams: ImportAuthHeadlessParameters,\n): EnvSpecificResourceParameters => {\n  // If we are doing headless mode, validate parameter presence and overwrite the input values from env specific params since they can be\n  // different for the current env operation (eg region can mismatch)\n\n  // Validate required arguments to be present\n  const missingParams = [];\n\n  if (!headlessParams.userPoolId) {\n    missingParams.push('userPoolId');\n  }\n\n  if (!headlessParams.webClientId) {\n    missingParams.push('webClientId');\n  }\n\n  if (!headlessParams.nativeClientId) {\n    missingParams.push('nativeClientId');\n  }\n\n  if (resourceParameters.authSelections === 'identityPoolAndUserPool' && !headlessParams.identityPoolId) {\n    missingParams.push('identityPoolId');\n  }\n\n  if (missingParams.length > 0) {\n    throw new AmplifyError('InputValidationError', {\n      message: `auth headless is missing the following inputParameters ${missingParams.join(', ')}`,\n      link: 'https://docs.amplify.aws/cli/usage/headless/#--categories',\n    });\n  }\n\n  const envSpecificParameters: EnvSpecificResourceParameters = {\n    userPoolId: headlessParams.userPoolId,\n    userPoolName: '', // Will be filled out later\n    webClientId: headlessParams.webClientId,\n    nativeClientId: headlessParams.nativeClientId,\n  };\n\n  if (resourceParameters.authSelections === 'identityPoolAndUserPool') {\n    envSpecificParameters.identityPoolId = headlessParams.identityPoolId;\n  }\n\n  return envSpecificParameters;\n};\n"]}