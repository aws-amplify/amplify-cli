{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.js"],"names":[],"mappings":"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","sourcesContent":["// TODO disabling until this file is converted to TS\n/* eslint-disable */\n\nconst category = 'auth';\n\nconst _ = require('lodash');\nconst path = require('path');\nconst sequential = require('promise-sequential');\n\nconst { validateAddAuthRequest, validateUpdateAuthRequest, validateImportAuthRequest } = require('amplify-util-headless-input');\nconst { stateManager, AmplifySupportedService, JSONUtilities } = require('amplify-cli-core');\nconst { printer } = require('@aws-amplify/amplify-prompts');\nconst { ensureEnvParamManager } = require('@aws-amplify/amplify-environment-parameters');\nconst defaults = require('./provider-utils/awscloudformation/assets/cognito-defaults');\nconst { getAuthResourceName } = require('./utils/getAuthResourceName');\nconst { updateConfigOnEnvInit, migrate } = require('./provider-utils/awscloudformation');\nconst { removeDeprecatedProps } = require('./provider-utils/awscloudformation/utils/synthesize-resources');\nconst { ENV_SPECIFIC_PARAMS } = require('./provider-utils/awscloudformation/constants');\n\nconst { transformUserPoolGroupSchema } = require('./provider-utils/awscloudformation/utils/transform-user-pool-group');\nconst { uploadFiles } = require('./provider-utils/awscloudformation/utils/trigger-file-uploader');\nconst { getAddAuthRequestAdaptor, getUpdateAuthRequestAdaptor } = require('./provider-utils/awscloudformation/utils/auth-request-adaptors');\nconst { getAddAuthHandler, getUpdateAuthHandler } = require('./provider-utils/awscloudformation/handlers/resource-handlers');\nconst { projectHasAuth } = require('./provider-utils/awscloudformation/utils/project-has-auth');\nconst { printAuthExistsWarning } = require('./provider-utils/awscloudformation/utils/print-auth-exists-warning');\nconst { attachPrevParamsToContext } = require('./provider-utils/awscloudformation/utils/attach-prev-params-to-context');\nconst { headlessImport } = require('./provider-utils/awscloudformation/import');\nconst { getFrontendConfig } = require('./provider-utils/awscloudformation/utils/amplify-meta-updaters');\nconst { AuthParameters } = require('./provider-utils/awscloudformation/import/types');\nconst { getSupportedServices } = require('./provider-utils/supported-services');\nconst { generateAuthStackTemplate } = require('./provider-utils/awscloudformation/utils/generate-auth-stack-template');\nconst { AmplifyAuthTransform, AmplifyUserPoolGroupTransform } = require('./provider-utils/awscloudformation/auth-stack-builder');\nconst {\n  doesConfigurationIncludeSMS,\n  loadResourceParameters,\n  loadImportedAuthParameters,\n} = require('./provider-utils/awscloudformation/utils/auth-sms-workflow-helper');\nconst { AuthInputState } = require('./provider-utils/awscloudformation/auth-inputs-manager/auth-input-state');\nconst { privateKeys } = require('./provider-utils/awscloudformation/constants');\nconst { checkAuthResourceMigration } = require('./provider-utils/awscloudformation/utils/check-for-auth-migration');\nconst { run: authRunPush } = require('./commands/auth/push');\nconst { getAuthTriggerStackCfnParameters } = require('./provider-utils/awscloudformation/utils/get-auth-trigger-stack-cfn-parameters');\n\n// this function is being kept for temporary compatability.\nasync function add(context, skipNextSteps = false) {\n  const { amplify } = context;\n  const servicesMetadata = getSupportedServices();\n  const existingAuth = amplify.getProjectDetails().amplifyMeta.auth || {};\n\n  if (Object.keys(existingAuth).length > 0) {\n    return context.print.warning('Auth has already been added to this project.');\n  }\n\n  let resultMetadata;\n\n  return amplify\n    .serviceSelectionPrompt(context, category, servicesMetadata)\n    .then((result) => {\n      resultMetadata = result;\n      const providerController = require(`${__dirname}/provider-utils/${result.providerName}/index`);\n      if (!providerController) {\n        context.print.error('Provider not configured for this category');\n        return;\n      }\n      return providerController.addResource(context, result.service, skipNextSteps);\n    })\n    .catch((err) => {\n      context.print.info(err.stack);\n      context.print.error('There was an error adding the auth resource');\n      context.usageData.emitError(err);\n      process.exitCode = 1;\n    });\n}\n\nasync function transformCategoryStack(context, resource) {\n  if (resource.service === AmplifySupportedService.COGNITO) {\n    if (canResourceBeTransformed(context, resource.resourceName)) {\n      await generateAuthStackTemplate(context, resource.resourceName);\n    }\n  }\n  if (resource.service === AmplifySupportedService.COGNITOUSERPOOLGROUPS) {\n    const authResourceName = await getAuthResourceName(context);\n    if (canResourceBeTransformed(context, authResourceName)) {\n      await generateAuthStackTemplate(context, authResourceName);\n    }\n  }\n}\n\nfunction canResourceBeTransformed(context, resourceName) {\n  const resourceInputState = new AuthInputState(context, resourceName);\n  return resourceInputState.cliInputFileExists();\n}\n\nasync function migrateAuthResource(context, resourceName) {\n  return checkAuthResourceMigration(context, resourceName, true);\n}\n\nasync function externalAuthEnable(context, externalCategory, resourceName, requirements) {\n  const { amplify } = context;\n  const serviceMetadata = getSupportedServices();\n  const authExists = amplify.getProjectDetails().amplifyMeta.auth && Object.keys(amplify.getProjectDetails().amplifyMeta.auth).length > 0; //eslint-disable-line\n  let currentAuthName;\n  const projectName = context.amplify\n    .getProjectConfig()\n    .projectName.toLowerCase()\n    .replace(/[^A-Za-z0-9_]+/g, '_');\n  let currentAuthParams;\n\n  const immutables = {};\n\n  // if auth has already been enabled, grab the existing parameters\n  if (authExists) {\n    // sanity check that it cannot happen\n    if (authExists.serviceType === 'imported') {\n      throw new Error('Existing auth resource is imported and auth configuration update was requested.');\n    }\n    currentAuthName = await getAuthResourceName(context);\n    // check for migration when auth has been enabled\n    await checkAuthResourceMigration(context, currentAuthName, true);\n    const { provider } = serviceMetadata.Cognito;\n    const providerPlugin = context.amplify.getPluginInstance(context, provider);\n    currentAuthParams = providerPlugin.loadResourceParameters(context, 'auth', currentAuthName);\n\n    if (requirements.authSelections.includes('identityPoolOnly') && currentAuthParams.userPoolName) {\n      requirements.authSelections = 'identityPoolAndUserPool';\n    }\n    if (requirements.authSelections.includes('userPoolOnly') && currentAuthParams.identityPoolName) {\n      requirements.authSelections = 'identityPoolAndUserPool';\n    }\n\n    const defaultVals = defaults.getAllDefaults(currentAuthName);\n    // loop through service questions\n    serviceMetadata.Cognito.inputs.forEach((s) => {\n      // find those that would not be displayed if user was entering values manually\n      if (!context.amplify.getWhen(s, defaultVals, currentAuthParams, context.amplify)()) {\n        // if a value wouldn't be displayed,\n        // we update the immutable object with they key/value from previous answers\n        if (currentAuthParams[s.key]) {\n          immutables[s.key] = currentAuthParams[s.key];\n        }\n      }\n    });\n  } else {\n    currentAuthName = projectName;\n  }\n\n  const authPropsValues = authExists\n    ? Object.assign(defaults.functionMap[requirements.authSelections](currentAuthName), currentAuthParams, immutables, requirements)\n    : Object.assign(defaults.functionMap[requirements.authSelections](currentAuthName), requirements, {\n        resourceName: currentAuthName,\n        sharedId: defaults.sharedId,\n        serviceName: 'Cognito',\n        useDefault: 'manual',\n        authSelections: requirements.authSelections,\n      });\n  const { roles } = defaults;\n  let authProps = {\n    ...authPropsValues,\n    ...roles,\n  };\n\n  try {\n    authProps = await removeDeprecatedProps(authProps);\n    // replace secret keys from cli inputs to be stored in deployment secrets\n\n    let sharedParams = { ...authProps };\n    privateKeys.forEach((p) => delete sharedParams[p]);\n    sharedParams = removeDeprecatedProps(sharedParams);\n    // extracting env-specific params from parameters object\n    const envSpecificParams = {};\n    const cliInputs = { ...sharedParams };\n    ENV_SPECIFIC_PARAMS.forEach((paramName) => {\n      if (paramName in authProps) {\n        envSpecificParams[paramName] = cliInputs[paramName];\n        delete cliInputs[paramName];\n      }\n    });\n    context.amplify.saveEnvResourceParameters(context, category, currentAuthName, envSpecificParams);\n    const cognitoCLIInputs = {\n      version: '1',\n      cognitoConfig: cliInputs,\n    };\n    const cliState = new AuthInputState(context, cognitoCLIInputs.cognitoConfig.resourceName);\n    // saving cli-inputs except secrets\n    await cliState.saveCLIInputPayload(cognitoCLIInputs);\n    await generateAuthStackTemplate(context, currentAuthName);\n\n    const resourceDirPath = path.join(amplify.pathManager.getBackendDirPath(), 'auth', authProps.resourceName, 'build', 'parameters.json');\n    const authParameters = await amplify.readJsonFile(resourceDirPath);\n    if (!authExists) {\n      const options = {\n        service: 'Cognito',\n        serviceType: 'managed',\n        providerPlugin: 'awscloudformation',\n      };\n\n      if (authParameters.dependsOn) {\n        options.dependsOn = authParameters.dependsOn;\n      }\n      await amplify.updateamplifyMetaAfterResourceAdd(category, authProps.resourceName, options);\n    }\n\n    // Update Identity Pool dependency attributes on userpool groups\n    const allResources = context.amplify.getProjectMeta();\n    if (allResources.auth && allResources.auth.userPoolGroups) {\n      const attributes = ['UserPoolId', 'AppClientIDWeb', 'AppClientID'];\n      if (authParameters.identityPoolName) {\n        attributes.push('IdentityPoolId');\n      }\n      const userPoolGroupDependsOn = [\n        {\n          category: 'auth',\n          resourceName: authProps.resourceName,\n          attributes,\n        },\n      ];\n\n      amplify.updateamplifyMetaAfterResourceUpdate('auth', 'userPoolGroups', 'dependsOn', userPoolGroupDependsOn);\n      await transformUserPoolGroupSchema(context);\n    }\n\n    const action = authExists ? 'updated' : 'added';\n    printer.success(`Successfully ${action} auth resource locally.`);\n\n    return authProps.resourceName;\n  } catch (e) {\n    printer.error('Error updating Cognito resource');\n    throw e;\n  }\n}\n\nasync function checkRequirements(requirements, context, category, targetResourceName) {\n  // We only require the checking of two properties:\n  // - authSelections\n  // - allowUnauthenticatedIdentities\n\n  if (!requirements || !requirements.authSelections) {\n    const error = `Your plugin has not properly defined it's Cognito requirements.`;\n    return {\n      errors: [error],\n    };\n  }\n\n  const existingAuth = context.amplify.getProjectDetails().amplifyMeta.auth;\n  let authParameters;\n\n  const result = {\n    errors: [],\n  };\n\n  if (existingAuth && Object.keys(existingAuth).length > 0) {\n    const authResourceName = await getAuthResourceName(context);\n    const authResource = existingAuth[authResourceName];\n\n    authParameters = stateManager.getResourceParametersJson(undefined, 'auth', authResourceName);\n\n    result.authEnabled = true;\n    result.authImported = false;\n\n    // For imported resource we have to read the team-provider-info and merge the env specific values\n    // (currently only allowUnauthenticatedIdentities) to params because it is stored there.\n    if (authResource.serviceType === 'imported') {\n      const envSpecificParams = context.amplify.loadEnvResourceParameters(context, 'auth', authResourceName);\n\n      // This is stored in env specific params for imported auth resources.\n      if (envSpecificParams) {\n        authParameters.allowUnauthenticatedIdentities = envSpecificParams.allowUnauthenticatedIdentities;\n      }\n\n      result.authImported = true;\n    }\n  } else {\n    return {\n      authEnabled: false,\n    };\n  }\n\n  // Checks handcoded until refactoring of the requirements system\n  // since intersections were not handled correctly.\n  if (\n    (requirements.authSelections === 'userPoolOnly' &&\n      (authParameters.authSelections === 'userPoolOnly' || authParameters.authSelections === 'identityPoolAndUserPool')) ||\n    (requirements.authSelections === 'identityPoolOnly' && authParameters.authSelections === 'identityPoolOnly') ||\n    (requirements.authSelections === 'identityPoolOnly' && authParameters.authSelections === 'identityPoolAndUserPool') ||\n    (requirements.authSelections === 'identityPoolAndUserPool' && authParameters.authSelections === 'identityPoolAndUserPool')\n  ) {\n    result.authSelections = true;\n  } else {\n    result.authSelections = false;\n    result.errors.push(`Current auth configuration is: ${authParameters.authSelections}, but ${requirements.authSelections} was required.`);\n  }\n\n  if (\n    (requirements.allowUnauthenticatedIdentities === true && authParameters.allowUnauthenticatedIdentities === true) ||\n    !requirements.allowUnauthenticatedIdentities // In this case it does not matter if IDP allows unauth access or not, requirements are met.\n  ) {\n    result.allowUnauthenticatedIdentities = true;\n  } else {\n    result.allowUnauthenticatedIdentities = false;\n    result.errors.push(`Auth configuration is required to allow unauthenticated users, but it is not configured properly.`);\n  }\n\n  result.requirementsMet = result.authSelections && result.allowUnauthenticatedIdentities;\n\n  return result;\n}\n\nasync function initEnv(context) {\n  const { amplify } = context;\n  const { resourcesToBeCreated, resourcesToBeUpdated, resourcesToBeSynced, resourcesToBeDeleted, allResources } =\n    await amplify.getResourceStatus('auth');\n  const isPulling = context.input.command === 'pull' || (context.input.command === 'env' && context.input.subCommands[0] === 'pull');\n  let toBeCreated = [];\n  let toBeUpdated = [];\n  let toBeSynced = [];\n  let toBeDeleted = [];\n\n  if (resourcesToBeCreated && resourcesToBeCreated.length > 0) {\n    toBeCreated = resourcesToBeCreated.filter((a) => a.category === 'auth');\n  }\n  if (resourcesToBeUpdated && resourcesToBeUpdated.length > 0) {\n    toBeUpdated = resourcesToBeUpdated.filter((c) => c.category === 'auth');\n  }\n  if (resourcesToBeSynced && resourcesToBeSynced.length > 0) {\n    toBeSynced = resourcesToBeSynced.filter((b) => b.category === 'auth');\n  }\n  if (resourcesToBeDeleted && resourcesToBeDeleted.length > 0) {\n    toBeDeleted = resourcesToBeDeleted.filter((b) => b.category === 'auth');\n  }\n\n  await ensureEnvParamManager();\n\n  toBeDeleted.forEach((authResource) => {\n    amplify.removeResourceParameters(context, 'auth', authResource.resourceName);\n  });\n\n  toBeSynced\n    .filter((authResource) => authResource.sync === 'unlink')\n    .forEach((authResource) => {\n      amplify.removeResourceParameters(context, 'auth', authResource.resourceName);\n    });\n\n  let tasks = toBeCreated.concat(toBeUpdated);\n\n  // For pull change detection for import sees a difference, to avoid duplicate tasks we don't\n  // add the syncable resources, as allResources covers it, otherwise it is required for env add\n  // to populate the output value and such, these sync resources have the 'refresh' sync value.\n  if (!isPulling) {\n    tasks = tasks.concat(toBeSynced);\n  }\n\n  // check if this initialization is happening on a pull\n  if (isPulling && allResources.length > 0) {\n    tasks.push(...allResources);\n  }\n\n  const authTasks = tasks.map((authResource) => {\n    const { resourceName } = authResource;\n    return async () => {\n      const config = await updateConfigOnEnvInit(context, 'auth', resourceName);\n      context.amplify.saveEnvResourceParameters(context, 'auth', resourceName, config);\n    };\n  });\n\n  await sequential(authTasks);\n}\n\nasync function authConsole(context) {\n  const { amplify } = context;\n  const amplifyMeta = amplify.getProjectMeta();\n\n  if (!amplifyMeta.auth || Object.keys(amplifyMeta.auth).length === 0) {\n    return context.print.error('Auth has NOT been added to this project.');\n  }\n\n  return amplify\n    .serviceSelectionPrompt(context, category, getSupportedServices())\n    .then((result) => {\n      const providerController = require(`${__dirname}/provider-utils/${result.providerName}/index`);\n      if (!providerController) {\n        context.print.error('Provider not configured for this category');\n        return;\n      }\n      return providerController.console(context, amplifyMeta);\n    })\n    .catch((err) => {\n      context.print.info(err.stack);\n      context.print.error('There was an error trying to open the auth web console.');\n      throw err;\n    });\n}\n\nasync function getPermissionPolicies(context, resourceOpsMapping) {\n  const amplifyMetaFilePath = context.amplify.pathManager.getAmplifyMetaFilePath();\n  const amplifyMeta = context.amplify.readJsonFile(amplifyMetaFilePath);\n  const permissionPolicies = [];\n  const resourceAttributes = [];\n\n  Object.keys(resourceOpsMapping).forEach((resourceName) => {\n    try {\n      const providerName = amplifyMeta[category][resourceName].providerPlugin;\n      if (providerName) {\n        const providerController = require(`./provider-utils/${providerName}/index`);\n        const { policy, attributes } = providerController.getPermissionPolicies(\n          context,\n          amplifyMeta[category][resourceName].service,\n          resourceName,\n          resourceOpsMapping[resourceName],\n        );\n        permissionPolicies.push(policy);\n        resourceAttributes.push({ resourceName, attributes, category });\n      } else {\n        context.print.error(`Provider not configured for ${category}: ${resourceName}`);\n      }\n    } catch (e) {\n      context.print.warning(`Could not get policies for ${category}: ${resourceName}`);\n      throw e;\n    }\n  });\n  return { permissionPolicies, resourceAttributes };\n}\n\nasync function executeAmplifyCommand(context) {\n  let commandPath = path.normalize(path.join(__dirname, 'commands'));\n  if (context.input.command === 'help') {\n    commandPath = path.join(commandPath, category);\n  } else {\n    commandPath = path.join(commandPath, category, context.input.command);\n  }\n\n  const commandModule = require(commandPath);\n  await commandModule.run(context);\n}\n\n/**\n * Entry point for headless commands\n * @param {any} context The amplify context object\n * @param {string} headlessPayload The serialized payload from the platform\n */\nconst executeAmplifyHeadlessCommand = async (context, headlessPayload) => {\n  context.usageData.pushHeadlessFlow(headlessPayload, context.input);\n  switch (context.input.command) {\n    case 'add':\n      if (projectHasAuth()) {\n        printAuthExistsWarning(context);\n        return;\n      }\n      await validateAddAuthRequest(headlessPayload)\n        .then(getAddAuthRequestAdaptor(context.amplify.getProjectConfig().frontend))\n        .then(getAddAuthHandler(context));\n      return;\n    case 'update':\n      // migration check for headless update\n      const authResourceName = await getAuthResourceName(context);\n      await checkAuthResourceMigration(context, authResourceName, true);\n      await attachPrevParamsToContext(context);\n      await validateUpdateAuthRequest(headlessPayload)\n        .then(getUpdateAuthRequestAdaptor(context.amplify.getProjectConfig().frontend, context.updatingAuth.requiredAttributes))\n        .then(getUpdateAuthHandler(context));\n      return;\n    case 'import':\n      if (projectHasAuth()) {\n        printAuthExistsWarning(context);\n        return;\n      }\n      await validateImportAuthRequest(headlessPayload);\n      const { provider } = getSupportedServices().Cognito;\n      const providerPlugin = context.amplify.getPluginInstance(context, provider);\n      const cognito = await providerPlugin.createCognitoUserPoolService(context);\n      const identity = await providerPlugin.createIdentityPoolService(context);\n      const { userPoolId, identityPoolId, nativeClientId, webClientId } = JSONUtilities.parse(headlessPayload);\n      const projectConfig = context.amplify.getProjectConfig();\n      const resourceName = projectConfig.projectName.toLowerCase().replace(/[^A-Za-z0-9_]+/g, '_');\n      const resourceParams = {\n        authSelections: identityPoolId ? 'identityPoolAndUserPool' : 'userPoolOnly',\n        resourceName,\n      };\n      await headlessImport(context, cognito, identity, provider, resourceName, resourceParams, {\n        userPoolId,\n        identityPoolId,\n        nativeClientId,\n        webClientId,\n      });\n      return;\n    default:\n      context.print.error(`Headless mode for ${context.input.command} auth is not implemented yet`);\n  }\n};\n\nasync function handleAmplifyEvent(context, args) {\n  context.print.info(`${category} handleAmplifyEvent to be implemented`);\n  context.print.info(`Received event args ${args}`);\n}\n\nasync function prePushAuthHook(context) {\n  // await transformUserPoolGroupSchema(context);\n}\n\nasync function importAuth(context) {\n  const { amplify } = context;\n  const servicesMetadata = getSupportedServices();\n  const existingAuth = amplify.getProjectDetails().amplifyMeta.auth || {};\n\n  if (Object.keys(existingAuth).length > 0) {\n    return context.print.warning('Auth has already been added to this project.');\n  }\n\n  const serviceSelection = await context.amplify.serviceSelectionPrompt(context, category, servicesMetadata);\n  const providerController = require(`./provider-utils/${serviceSelection.providerName}`);\n\n  return providerController.importResource(context, serviceSelection, undefined, undefined, false);\n}\n\nasync function isSMSWorkflowEnabled(context, resourceName) {\n  const { imported, userPoolId } = context.amplify.getImportedAuthProperties(context);\n  let userNameAndMfaConfig;\n  if (imported) {\n    userNameAndMfaConfig = await loadImportedAuthParameters(context, userPoolId);\n  } else {\n    userNameAndMfaConfig = loadResourceParameters(context, resourceName);\n  }\n  const result = doesConfigurationIncludeSMS(userNameAndMfaConfig);\n  return result;\n}\n\n/**\n * Execute auth Push command with force yes\n * @param {Object} context - The amplify context.\n */\nconst authPushYes = async (context) => {\n  const exeInfoClone = { ...context?.exeInfo };\n  const parametersClone = { ...context?.parameters };\n  try {\n    context.exeInfo = context.exeInfo || {};\n    context.exeInfo.inputParams = context.exeInfo.inputParams || {};\n    context.exeInfo.inputParams.yes = true; // force yes to avoid prompts\n    context.parameters = context.parameters || {};\n    context.parameters.options.yes = true;\n    context.parameters.first = undefined;\n    await authRunPush(context);\n  } finally {\n    context.exeInfo = exeInfoClone;\n    context.parameters = parametersClone;\n  }\n};\n\nmodule.exports = {\n  externalAuthEnable,\n  migrateAuthResource,\n  checkRequirements,\n  add,\n  migrate,\n  initEnv,\n  console: authConsole,\n  getPermissionPolicies,\n  executeAmplifyCommand,\n  executeAmplifyHeadlessCommand,\n  handleAmplifyEvent,\n  prePushAuthHook,\n  uploadFiles,\n  category,\n  importAuth,\n  isSMSWorkflowEnabled,\n  AuthParameters,\n  getFrontendConfig,\n  generateAuthStackTemplate,\n  AmplifyAuthTransform,\n  AmplifyUserPoolGroupTransform,\n  transformCategoryStack,\n  authPluginAPIPush: authPushYes,\n  getAuthTriggerStackCfnParameters,\n};\n\n// force major version bump for cdk v2\n"]}