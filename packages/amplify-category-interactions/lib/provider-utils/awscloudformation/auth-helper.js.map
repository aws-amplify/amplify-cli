{"version":3,"file":"auth-helper.js","sourceRoot":"","sources":["../../../src/provider-utils/awscloudformation/auth-helper.js"],"names":[],"mappings":";AAAA,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACzB,MAAM,YAAY,GAAG,cAAc,CAAC;AAEpC,KAAK,UAAU,UAAU,CAAC,OAAO,EAAE,YAAY;IAC7C,MAAM,wBAAwB,GAAG,EAAE,cAAc,EAAE,kBAAkB,EAAE,8BAA8B,EAAE,IAAI,EAAE,CAAC;IAC9G,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,mBAAmB,EAAE;QAC5G,wBAAwB;QACxB,OAAO;QACP,YAAY;QACZ,YAAY;KACb,CAAC,CAAC;IAIH,IAAI,WAAW,CAAC,YAAY,KAAK,IAAI,IAAI,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QAC5F,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KAClD;IAED,IAAI,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACvD,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KACxD;IAGD,IAAI,CAAC,WAAW,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;QAC5D,IAAI;YACF,MAAM,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,oBAAoB,EAAE;gBACzF,OAAO;gBACP,YAAY;gBACZ,YAAY;gBACZ,wBAAwB;aACzB,CAAC,CAAC;SACJ;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,MAAM,KAAK,CAAC;SACb;KACF;AACH,CAAC;AAED,MAAM,CAAC,OAAO,GAAG;IACf,UAAU;CACX,CAAC","sourcesContent":["const os = require('os');\nconst CategoryName = 'interactions';\n\nasync function ensureAuth(context, resourceName) {\n  const interactionsRequirements = { authSelections: 'identityPoolOnly', allowUnauthenticatedIdentities: true };\n  const checkResult = await context.amplify.invokePluginMethod(context, 'auth', undefined, 'checkRequirements', [\n    interactionsRequirements,\n    context,\n    CategoryName,\n    resourceName,\n  ]);\n\n  // If auth is imported and configured, we have to throw the error instead of printing since there is no way to adjust the auth\n  // configuration.\n  if (checkResult.authImported === true && checkResult.errors && checkResult.errors.length > 0) {\n    throw new Error(checkResult.errors.join(os.EOL));\n  }\n\n  if (checkResult.errors && checkResult.errors.length > 0) {\n    context.print.warning(checkResult.errors.join(os.EOL));\n  }\n\n  // If auth is not imported and there were errors, adjust or enable auth configuration\n  if (!checkResult.authEnabled || !checkResult.requirementsMet) {\n    try {\n      await context.amplify.invokePluginMethod(context, 'auth', undefined, 'externalAuthEnable', [\n        context,\n        CategoryName,\n        resourceName,\n        interactionsRequirements,\n      ]);\n    } catch (error) {\n      context.print.error(error);\n      throw error;\n    }\n  }\n}\n\nmodule.exports = {\n  ensureAuth,\n};\n"]}