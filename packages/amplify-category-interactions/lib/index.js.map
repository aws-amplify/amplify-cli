{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.js"],"names":[],"mappings":";AAAA,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAE7B,MAAM,QAAQ,GAAG,cAAc,CAAC;AAEhC,KAAK,UAAU,OAAO,CAAC,OAAO;IAC5B,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC;IAC3D,MAAM,uBAAuB,GAAG,EAAE,CAAC;IACnC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;QAChD,IAAI,YAAY,KAAK,QAAQ,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;gBAC1D,IAAI;oBACF,MAAM,kBAAkB,GAAG,OAAO,CAAC,oBAAoB,WAAW,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,cAAc,QAAQ,CAAC,CAAC;oBACnH,IAAI,kBAAkB,EAAE;wBACtB,uBAAuB,CAAC,IAAI,CAC1B,kBAAkB,CAAC,eAAe,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CACpH,CAAC;qBACH;yBAAM;wBACL,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,+BAA+B,QAAQ,KAAK,YAAY,EAAE,CAAC,CAAC;qBACjF;iBACF;gBAAC,OAAO,CAAC,EAAE;oBACV,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,+BAA+B,QAAQ,KAAK,YAAY,EAAE,CAAC,CAAC;oBAClF,MAAM,CAAC,CAAC;iBACT;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,CAAC,CAAC;IAEH,MAAM,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAC7C,CAAC;AAED,KAAK,UAAU,qBAAqB,CAAC,OAAO,EAAE,kBAAkB;IAC9D,MAAM,mBAAmB,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,sBAAsB,EAAE,CAAC;IACjF,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;IACtE,MAAM,kBAAkB,GAAG,EAAE,CAAC;IAC9B,MAAM,kBAAkB,GAAG,EAAE,CAAC;IAE9B,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;QACvD,IAAI;YACF,MAAM,YAAY,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,cAAc,CAAC;YACxE,IAAI,YAAY,EAAE;gBAChB,MAAM,kBAAkB,GAAG,OAAO,CAAC,oBAAoB,YAAY,QAAQ,CAAC,CAAC;gBAC7E,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,kBAAkB,CAAC,qBAAqB,CACrE,OAAO,EACP,WAAW,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,OAAO,EAC3C,YAAY,EACZ,kBAAkB,CAAC,YAAY,CAAC,CACjC,CAAC;gBACF,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,kBAAkB,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;aACjE;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,+BAA+B,QAAQ,KAAK,YAAY,EAAE,CAAC,CAAC;aACjF;SACF;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,8BAA8B,QAAQ,KAAK,YAAY,EAAE,CAAC,CAAC;YACjF,MAAM,CAAC,CAAC;SACT;IACH,CAAC,CAAC,CAAC;IACH,OAAO,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,CAAC;AACpD,CAAC;AAED,KAAK,UAAU,qBAAqB,CAAC,OAAO;IAC1C,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;IACnE,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;QACpC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;KAChD;SAAM;QACL,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KACvE;IAED,MAAM,aAAa,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;IAC3C,MAAM,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACnC,CAAC;AAED,KAAK,UAAU,kBAAkB,CAAC,OAAO,EAAE,IAAI;IAC7C,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,uCAAuC,CAAC,CAAC;IACvE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,IAAI,EAAE,CAAC,CAAC;AACpD,CAAC;AAED,MAAM,CAAC,OAAO,GAAG;IACf,OAAO;IACP,qBAAqB;IACrB,qBAAqB;IACrB,kBAAkB;CACnB,CAAC","sourcesContent":["const path = require('path');\n\nconst category = 'interactions';\n\nasync function migrate(context) {\n  const { projectPath, amplifyMeta } = context.migrationInfo;\n  const migrateResourcePromises = [];\n  Object.keys(amplifyMeta).forEach((categoryName) => {\n    if (categoryName === category) {\n      Object.keys(amplifyMeta[category]).forEach((resourceName) => {\n        try {\n          const providerController = require(`./provider-utils/${amplifyMeta[category][resourceName].providerPlugin}/index`);\n          if (providerController) {\n            migrateResourcePromises.push(\n              providerController.migrateResource(context, projectPath, amplifyMeta[category][resourceName].service, resourceName),\n            );\n          } else {\n            context.print.error(`Provider not configured for ${category}: ${resourceName}`);\n          }\n        } catch (e) {\n          context.print.warning(`Could not run migration for ${category}: ${resourceName}`);\n          throw e;\n        }\n      });\n    }\n  });\n\n  await Promise.all(migrateResourcePromises);\n}\n\nasync function getPermissionPolicies(context, resourceOpsMapping) {\n  const amplifyMetaFilePath = context.amplify.pathManager.getAmplifyMetaFilePath();\n  const amplifyMeta = context.amplify.readJsonFile(amplifyMetaFilePath);\n  const permissionPolicies = [];\n  const resourceAttributes = [];\n\n  Object.keys(resourceOpsMapping).forEach((resourceName) => {\n    try {\n      const providerName = amplifyMeta[category][resourceName].providerPlugin;\n      if (providerName) {\n        const providerController = require(`./provider-utils/${providerName}/index`);\n        const { policy, attributes } = providerController.getPermissionPolicies(\n          context,\n          amplifyMeta[category][resourceName].service,\n          resourceName,\n          resourceOpsMapping[resourceName],\n        );\n        permissionPolicies.push(policy);\n        resourceAttributes.push({ resourceName, attributes, category });\n      } else {\n        context.print.error(`Provider not configured for ${category}: ${resourceName}`);\n      }\n    } catch (e) {\n      context.print.warning(`Could not get policies for ${category}: ${resourceName}`);\n      throw e;\n    }\n  });\n  return { permissionPolicies, resourceAttributes };\n}\n\nasync function executeAmplifyCommand(context) {\n  let commandPath = path.normalize(path.join(__dirname, 'commands'));\n  if (context.input.command === 'help') {\n    commandPath = path.join(commandPath, category);\n  } else {\n    commandPath = path.join(commandPath, category, context.input.command);\n  }\n\n  const commandModule = require(commandPath);\n  await commandModule.run(context);\n}\n\nasync function handleAmplifyEvent(context, args) {\n  context.print.info(`${category} handleAmplifyEvent to be implemented`);\n  context.print.info(`Received event args ${args}`);\n}\n\nmodule.exports = {\n  migrate,\n  getPermissionPolicies,\n  executeAmplifyCommand,\n  handleAmplifyEvent,\n};\n"]}