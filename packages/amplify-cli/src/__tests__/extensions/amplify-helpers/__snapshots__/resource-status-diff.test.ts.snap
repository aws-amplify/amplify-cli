// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`resource-status-diff helpers should show the diff between local and remote cloudformation  1`] = `
TemplateDiff {
  "conditions": DifferenceCollection {
    "diffs": Object {},
  },
  "iamChanges": IamChanges {
    "managedPolicies": DiffableCollection {
      "additions": Array [],
      "newElements": Array [],
      "oldElements": Array [],
      "removals": Array [],
    },
    "statements": DiffableCollection {
      "additions": Array [],
      "newElements": Array [],
      "oldElements": Array [],
      "removals": Array [],
    },
  },
  "mappings": DifferenceCollection {
    "diffs": Object {},
  },
  "metadata": DifferenceCollection {
    "diffs": Object {},
  },
  "outputs": DifferenceCollection {
    "diffs": Object {},
  },
  "parameters": DifferenceCollection {
    "diffs": Object {},
  },
  "resources": DifferenceCollection {
    "diffs": Object {
      "CustomResourcesjson": ResourceDifference {
        "isAddition": false,
        "isRemoval": false,
        "newValue": Object {
          "DependsOn": Array [
            "GraphQLAPI",
            "GraphQLSchema",
            "Todo",
            "Todo1",
            "Todo2",
          ],
          "Properties": Object {
            "Parameters": Object {
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
            "TemplateURL": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "CustomResources.json",
                ],
              ],
            },
          },
          "Type": "AWS::CloudFormation::Stack",
        },
        "oldValue": Object {
          "DependsOn": Array [
            "GraphQLAPI",
            "GraphQLSchema",
            "Todo",
          ],
          "Properties": Object {
            "Parameters": Object {
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
            "TemplateURL": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "CustomResources.json",
                ],
              ],
            },
          },
          "Type": "AWS::CloudFormation::Stack",
        },
        "otherDiffs": Object {
          "DependsOn": Difference {
            "isDifferent": true,
            "newValue": Array [
              "GraphQLAPI",
              "GraphQLSchema",
              "Todo",
              "Todo1",
              "Todo2",
            ],
            "oldValue": Array [
              "GraphQLAPI",
              "GraphQLSchema",
              "Todo",
            ],
          },
          "Type": Difference {
            "isDifferent": false,
            "newValue": "AWS::CloudFormation::Stack",
            "oldValue": "AWS::CloudFormation::Stack",
          },
        },
        "propertyDiffs": Object {
          "Parameters": PropertyDifference {
            "changeImpact": "NO_CHANGE",
            "isDifferent": false,
            "newValue": Object {
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
            "oldValue": Object {
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
          },
          "TemplateURL": PropertyDifference {
            "changeImpact": "NO_CHANGE",
            "isDifferent": false,
            "newValue": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "CustomResources.json",
                ],
              ],
            },
            "oldValue": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "CustomResources.json",
                ],
              ],
            },
          },
        },
        "resourceTypes": Object {
          "newType": "AWS::CloudFormation::Stack",
          "oldType": "AWS::CloudFormation::Stack",
        },
      },
      "DataStore": ResourceDifference {
        "isAddition": true,
        "isRemoval": false,
        "newValue": Object {
          "Properties": Object {
            "AttributeDefinitions": Array [
              Object {
                "AttributeName": "ds_pk",
                "AttributeType": "S",
              },
              Object {
                "AttributeName": "ds_sk",
                "AttributeType": "S",
              },
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "KeySchema": Array [
              Object {
                "AttributeName": "ds_pk",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "ds_sk",
                "KeyType": "RANGE",
              },
            ],
            "TableName": Object {
              "Fn::If": Array [
                "HasEnvironmentParameter",
                Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      "AmplifyDataStore",
                      Object {
                        "Fn::GetAtt": Array [
                          "GraphQLAPI",
                          "ApiId",
                        ],
                      },
                      Object {
                        "Ref": "env",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      "AmplifyDataStore",
                      Object {
                        "Fn::GetAtt": Array [
                          "GraphQLAPI",
                          "ApiId",
                        ],
                      },
                    ],
                  ],
                },
              ],
            },
            "TimeToLiveSpecification": Object {
              "AttributeName": "_ttl",
              "Enabled": true,
            },
          },
          "Type": "AWS::DynamoDB::Table",
        },
        "oldValue": undefined,
        "otherDiffs": Object {},
        "propertyDiffs": Object {},
        "resourceTypes": Object {
          "newType": "AWS::DynamoDB::Table",
          "oldType": undefined,
        },
      },
      "GraphQLAPI": ResourceDifference {
        "isAddition": false,
        "isRemoval": false,
        "newValue": Object {
          "Properties": Object {
            "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
            "Name": Object {
              "Fn::If": Array [
                "HasEnvironmentParameter",
                Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Ref": "AppSyncApiName",
                      },
                      Object {
                        "Ref": "env",
                      },
                    ],
                  ],
                },
                Object {
                  "Ref": "AppSyncApiName",
                },
              ],
            },
            "UserPoolConfig": Object {
              "AwsRegion": Object {
                "Ref": "AWS::Region",
              },
              "DefaultAction": "ALLOW",
              "UserPoolId": Object {
                "Ref": "AuthCognitoUserPoolId",
              },
            },
          },
          "Type": "AWS::AppSync::GraphQLApi",
        },
        "oldValue": Object {
          "Properties": Object {
            "AuthenticationType": "API_KEY",
            "Name": Object {
              "Fn::If": Array [
                "HasEnvironmentParameter",
                Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Ref": "AppSyncApiName",
                      },
                      Object {
                        "Ref": "env",
                      },
                    ],
                  ],
                },
                Object {
                  "Ref": "AppSyncApiName",
                },
              ],
            },
          },
          "Type": "AWS::AppSync::GraphQLApi",
        },
        "otherDiffs": Object {
          "Type": Difference {
            "isDifferent": false,
            "newValue": "AWS::AppSync::GraphQLApi",
            "oldValue": "AWS::AppSync::GraphQLApi",
          },
        },
        "propertyDiffs": Object {
          "AuthenticationType": PropertyDifference {
            "changeImpact": "WILL_UPDATE",
            "isDifferent": true,
            "newValue": "AMAZON_COGNITO_USER_POOLS",
            "oldValue": "API_KEY",
          },
          "Name": PropertyDifference {
            "changeImpact": "NO_CHANGE",
            "isDifferent": false,
            "newValue": Object {
              "Fn::If": Array [
                "HasEnvironmentParameter",
                Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Ref": "AppSyncApiName",
                      },
                      Object {
                        "Ref": "env",
                      },
                    ],
                  ],
                },
                Object {
                  "Ref": "AppSyncApiName",
                },
              ],
            },
            "oldValue": Object {
              "Fn::If": Array [
                "HasEnvironmentParameter",
                Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Ref": "AppSyncApiName",
                      },
                      Object {
                        "Ref": "env",
                      },
                    ],
                  ],
                },
                Object {
                  "Ref": "AppSyncApiName",
                },
              ],
            },
          },
          "UserPoolConfig": PropertyDifference {
            "changeImpact": "WILL_UPDATE",
            "isDifferent": true,
            "newValue": Object {
              "AwsRegion": Object {
                "Ref": "AWS::Region",
              },
              "DefaultAction": "ALLOW",
              "UserPoolId": Object {
                "Ref": "AuthCognitoUserPoolId",
              },
            },
            "oldValue": undefined,
          },
        },
        "resourceTypes": Object {
          "newType": "AWS::AppSync::GraphQLApi",
          "oldType": "AWS::AppSync::GraphQLApi",
        },
      },
      "GraphQLAPIKey": ResourceDifference {
        "isAddition": false,
        "isRemoval": false,
        "newValue": Object {
          "Condition": "ShouldCreateAPIKey",
          "Properties": Object {
            "ApiId": Object {
              "Fn::GetAtt": Array [
                "GraphQLAPI",
                "ApiId",
              ],
            },
            "Expires": Object {
              "Fn::If": Array [
                "APIKeyExpirationEpochIsPositive",
                Object {
                  "Ref": "APIKeyExpirationEpoch",
                },
                1625095600,
              ],
            },
          },
          "Type": "AWS::AppSync::ApiKey",
        },
        "oldValue": Object {
          "Condition": "ShouldCreateAPIKey",
          "Properties": Object {
            "ApiId": Object {
              "Fn::GetAtt": Array [
                "GraphQLAPI",
                "ApiId",
              ],
            },
            "Description": "demo",
            "Expires": Object {
              "Fn::If": Array [
                "APIKeyExpirationEpochIsPositive",
                Object {
                  "Ref": "APIKeyExpirationEpoch",
                },
                1624238916,
              ],
            },
          },
          "Type": "AWS::AppSync::ApiKey",
        },
        "otherDiffs": Object {
          "Condition": Difference {
            "isDifferent": false,
            "newValue": "ShouldCreateAPIKey",
            "oldValue": "ShouldCreateAPIKey",
          },
          "Type": Difference {
            "isDifferent": false,
            "newValue": "AWS::AppSync::ApiKey",
            "oldValue": "AWS::AppSync::ApiKey",
          },
        },
        "propertyDiffs": Object {
          "ApiId": PropertyDifference {
            "changeImpact": "NO_CHANGE",
            "isDifferent": false,
            "newValue": Object {
              "Fn::GetAtt": Array [
                "GraphQLAPI",
                "ApiId",
              ],
            },
            "oldValue": Object {
              "Fn::GetAtt": Array [
                "GraphQLAPI",
                "ApiId",
              ],
            },
          },
          "Description": PropertyDifference {
            "changeImpact": "WILL_UPDATE",
            "isDifferent": true,
            "newValue": undefined,
            "oldValue": "demo",
          },
          "Expires": PropertyDifference {
            "changeImpact": "WILL_UPDATE",
            "isDifferent": true,
            "newValue": Object {
              "Fn::If": Array [
                "APIKeyExpirationEpochIsPositive",
                Object {
                  "Ref": "APIKeyExpirationEpoch",
                },
                1625095600,
              ],
            },
            "oldValue": Object {
              "Fn::If": Array [
                "APIKeyExpirationEpochIsPositive",
                Object {
                  "Ref": "APIKeyExpirationEpoch",
                },
                1624238916,
              ],
            },
          },
        },
        "resourceTypes": Object {
          "newType": "AWS::AppSync::ApiKey",
          "oldType": "AWS::AppSync::ApiKey",
        },
      },
      "GraphQLSchema": ResourceDifference {
        "isAddition": false,
        "isRemoval": false,
        "newValue": Object {
          "Properties": Object {
            "ApiId": Object {
              "Fn::GetAtt": Array [
                "GraphQLAPI",
                "ApiId",
              ],
            },
            "DefinitionS3Location": Object {
              "Fn::Sub": Array [
                "s3://\${S3DeploymentBucket}/\${S3DeploymentRootKey}/schema.graphql",
                Object {
                  "S3DeploymentBucket": Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  "S3DeploymentRootKey": Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                },
              ],
            },
          },
          "Type": "AWS::AppSync::GraphQLSchema",
        },
        "oldValue": Object {
          "Properties": Object {
            "ApiId": Object {
              "Fn::GetAtt": Array [
                "GraphQLAPI",
                "ApiId",
              ],
            },
            "DefinitionS3Location": Object {
              "Fn::Sub": Array [
                "s3://\${S3DeploymentBucket}/\${S3DeploymentRootKey}/schema.graphql",
                Object {
                  "S3DeploymentBucket": Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  "S3DeploymentRootKey": Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                },
              ],
            },
          },
          "Type": "AWS::AppSync::GraphQLSchema",
        },
        "otherDiffs": Object {
          "Type": Difference {
            "isDifferent": false,
            "newValue": "AWS::AppSync::GraphQLSchema",
            "oldValue": "AWS::AppSync::GraphQLSchema",
          },
        },
        "propertyDiffs": Object {
          "ApiId": PropertyDifference {
            "changeImpact": "NO_CHANGE",
            "isDifferent": false,
            "newValue": Object {
              "Fn::GetAtt": Array [
                "GraphQLAPI",
                "ApiId",
              ],
            },
            "oldValue": Object {
              "Fn::GetAtt": Array [
                "GraphQLAPI",
                "ApiId",
              ],
            },
          },
          "DefinitionS3Location": PropertyDifference {
            "changeImpact": "NO_CHANGE",
            "isDifferent": false,
            "newValue": Object {
              "Fn::Sub": Array [
                "s3://\${S3DeploymentBucket}/\${S3DeploymentRootKey}/schema.graphql",
                Object {
                  "S3DeploymentBucket": Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  "S3DeploymentRootKey": Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                },
              ],
            },
            "oldValue": Object {
              "Fn::Sub": Array [
                "s3://\${S3DeploymentBucket}/\${S3DeploymentRootKey}/schema.graphql",
                Object {
                  "S3DeploymentBucket": Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  "S3DeploymentRootKey": Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                },
              ],
            },
          },
        },
        "resourceTypes": Object {
          "newType": "AWS::AppSync::GraphQLSchema",
          "oldType": "AWS::AppSync::GraphQLSchema",
        },
      },
      "Todo": ResourceDifference {
        "isAddition": false,
        "isRemoval": false,
        "newValue": Object {
          "DependsOn": Array [
            "GraphQLSchema",
          ],
          "Properties": Object {
            "Parameters": Object {
              "APIKeyExpirationEpoch": Object {
                "Ref": "APIKeyExpirationEpoch",
              },
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "AuthCognitoUserPoolId": Object {
                "Ref": "AuthCognitoUserPoolId",
              },
              "CreateAPIKey": Object {
                "Ref": "CreateAPIKey",
              },
              "DynamoDBBillingMode": Object {
                "Ref": "DynamoDBBillingMode",
              },
              "DynamoDBEnablePointInTimeRecovery": Object {
                "Ref": "DynamoDBEnablePointInTimeRecovery",
              },
              "DynamoDBEnableServerSideEncryption": Object {
                "Ref": "DynamoDBEnableServerSideEncryption",
              },
              "DynamoDBModelTableReadIOPS": Object {
                "Ref": "DynamoDBModelTableReadIOPS",
              },
              "DynamoDBModelTableWriteIOPS": Object {
                "Ref": "DynamoDBModelTableWriteIOPS",
              },
              "GetAttGraphQLAPIApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
            "TemplateURL": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "Todo.json",
                ],
              ],
            },
          },
          "Type": "AWS::CloudFormation::Stack",
        },
        "oldValue": Object {
          "DependsOn": Array [
            "GraphQLSchema",
          ],
          "Properties": Object {
            "Parameters": Object {
              "APIKeyExpirationEpoch": Object {
                "Ref": "APIKeyExpirationEpoch",
              },
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "AuthCognitoUserPoolId": Object {
                "Ref": "AuthCognitoUserPoolId",
              },
              "CreateAPIKey": Object {
                "Ref": "CreateAPIKey",
              },
              "DynamoDBBillingMode": Object {
                "Ref": "DynamoDBBillingMode",
              },
              "DynamoDBEnablePointInTimeRecovery": Object {
                "Ref": "DynamoDBEnablePointInTimeRecovery",
              },
              "DynamoDBEnableServerSideEncryption": Object {
                "Ref": "DynamoDBEnableServerSideEncryption",
              },
              "DynamoDBModelTableReadIOPS": Object {
                "Ref": "DynamoDBModelTableReadIOPS",
              },
              "DynamoDBModelTableWriteIOPS": Object {
                "Ref": "DynamoDBModelTableWriteIOPS",
              },
              "GetAttGraphQLAPIApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
            "TemplateURL": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "Todo.json",
                ],
              ],
            },
          },
          "Type": "AWS::CloudFormation::Stack",
        },
        "otherDiffs": Object {
          "DependsOn": Difference {
            "isDifferent": false,
            "newValue": Array [
              "GraphQLSchema",
            ],
            "oldValue": Array [
              "GraphQLSchema",
            ],
          },
          "Type": Difference {
            "isDifferent": false,
            "newValue": "AWS::CloudFormation::Stack",
            "oldValue": "AWS::CloudFormation::Stack",
          },
        },
        "propertyDiffs": Object {
          "Parameters": PropertyDifference {
            "changeImpact": "NO_CHANGE",
            "isDifferent": false,
            "newValue": Object {
              "APIKeyExpirationEpoch": Object {
                "Ref": "APIKeyExpirationEpoch",
              },
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "AuthCognitoUserPoolId": Object {
                "Ref": "AuthCognitoUserPoolId",
              },
              "CreateAPIKey": Object {
                "Ref": "CreateAPIKey",
              },
              "DynamoDBBillingMode": Object {
                "Ref": "DynamoDBBillingMode",
              },
              "DynamoDBEnablePointInTimeRecovery": Object {
                "Ref": "DynamoDBEnablePointInTimeRecovery",
              },
              "DynamoDBEnableServerSideEncryption": Object {
                "Ref": "DynamoDBEnableServerSideEncryption",
              },
              "DynamoDBModelTableReadIOPS": Object {
                "Ref": "DynamoDBModelTableReadIOPS",
              },
              "DynamoDBModelTableWriteIOPS": Object {
                "Ref": "DynamoDBModelTableWriteIOPS",
              },
              "GetAttGraphQLAPIApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
            "oldValue": Object {
              "APIKeyExpirationEpoch": Object {
                "Ref": "APIKeyExpirationEpoch",
              },
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "AuthCognitoUserPoolId": Object {
                "Ref": "AuthCognitoUserPoolId",
              },
              "CreateAPIKey": Object {
                "Ref": "CreateAPIKey",
              },
              "DynamoDBBillingMode": Object {
                "Ref": "DynamoDBBillingMode",
              },
              "DynamoDBEnablePointInTimeRecovery": Object {
                "Ref": "DynamoDBEnablePointInTimeRecovery",
              },
              "DynamoDBEnableServerSideEncryption": Object {
                "Ref": "DynamoDBEnableServerSideEncryption",
              },
              "DynamoDBModelTableReadIOPS": Object {
                "Ref": "DynamoDBModelTableReadIOPS",
              },
              "DynamoDBModelTableWriteIOPS": Object {
                "Ref": "DynamoDBModelTableWriteIOPS",
              },
              "GetAttGraphQLAPIApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
          },
          "TemplateURL": PropertyDifference {
            "changeImpact": "NO_CHANGE",
            "isDifferent": false,
            "newValue": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "Todo.json",
                ],
              ],
            },
            "oldValue": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "Todo.json",
                ],
              ],
            },
          },
        },
        "resourceTypes": Object {
          "newType": "AWS::CloudFormation::Stack",
          "oldType": "AWS::CloudFormation::Stack",
        },
      },
      "Todo1": ResourceDifference {
        "isAddition": true,
        "isRemoval": false,
        "newValue": Object {
          "DependsOn": Array [
            "GraphQLSchema",
          ],
          "Properties": Object {
            "Parameters": Object {
              "APIKeyExpirationEpoch": Object {
                "Ref": "APIKeyExpirationEpoch",
              },
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "AuthCognitoUserPoolId": Object {
                "Ref": "AuthCognitoUserPoolId",
              },
              "CreateAPIKey": Object {
                "Ref": "CreateAPIKey",
              },
              "DynamoDBBillingMode": Object {
                "Ref": "DynamoDBBillingMode",
              },
              "DynamoDBEnablePointInTimeRecovery": Object {
                "Ref": "DynamoDBEnablePointInTimeRecovery",
              },
              "DynamoDBEnableServerSideEncryption": Object {
                "Ref": "DynamoDBEnableServerSideEncryption",
              },
              "DynamoDBModelTableReadIOPS": Object {
                "Ref": "DynamoDBModelTableReadIOPS",
              },
              "DynamoDBModelTableWriteIOPS": Object {
                "Ref": "DynamoDBModelTableWriteIOPS",
              },
              "GetAttGraphQLAPIApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
            "TemplateURL": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "Todo1.json",
                ],
              ],
            },
          },
          "Type": "AWS::CloudFormation::Stack",
        },
        "oldValue": undefined,
        "otherDiffs": Object {},
        "propertyDiffs": Object {},
        "resourceTypes": Object {
          "newType": "AWS::CloudFormation::Stack",
          "oldType": undefined,
        },
      },
      "Todo2": ResourceDifference {
        "isAddition": true,
        "isRemoval": false,
        "newValue": Object {
          "DependsOn": Array [
            "GraphQLSchema",
          ],
          "Properties": Object {
            "Parameters": Object {
              "APIKeyExpirationEpoch": Object {
                "Ref": "APIKeyExpirationEpoch",
              },
              "AppSyncApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "AppSyncApiName": Object {
                "Ref": "AppSyncApiName",
              },
              "AuthCognitoUserPoolId": Object {
                "Ref": "AuthCognitoUserPoolId",
              },
              "CreateAPIKey": Object {
                "Ref": "CreateAPIKey",
              },
              "DynamoDBBillingMode": Object {
                "Ref": "DynamoDBBillingMode",
              },
              "DynamoDBEnablePointInTimeRecovery": Object {
                "Ref": "DynamoDBEnablePointInTimeRecovery",
              },
              "DynamoDBEnableServerSideEncryption": Object {
                "Ref": "DynamoDBEnableServerSideEncryption",
              },
              "DynamoDBModelTableReadIOPS": Object {
                "Ref": "DynamoDBModelTableReadIOPS",
              },
              "DynamoDBModelTableWriteIOPS": Object {
                "Ref": "DynamoDBModelTableWriteIOPS",
              },
              "GetAttGraphQLAPIApiId": Object {
                "Fn::GetAtt": Array [
                  "GraphQLAPI",
                  "ApiId",
                ],
              },
              "S3DeploymentBucket": Object {
                "Ref": "S3DeploymentBucket",
              },
              "S3DeploymentRootKey": Object {
                "Ref": "S3DeploymentRootKey",
              },
              "env": Object {
                "Ref": "env",
              },
            },
            "TemplateURL": Object {
              "Fn::Join": Array [
                "/",
                Array [
                  "https://s3.amazonaws.com",
                  Object {
                    "Ref": "S3DeploymentBucket",
                  },
                  Object {
                    "Ref": "S3DeploymentRootKey",
                  },
                  "stacks",
                  "Todo2.json",
                ],
              ],
            },
          },
          "Type": "AWS::CloudFormation::Stack",
        },
        "oldValue": undefined,
        "otherDiffs": Object {},
        "propertyDiffs": Object {},
        "resourceTypes": Object {
          "newType": "AWS::CloudFormation::Stack",
          "oldType": undefined,
        },
      },
    },
  },
  "securityGroupChanges": SecurityGroupChanges {
    "egress": DiffableCollection {
      "additions": Array [],
      "newElements": Array [],
      "oldElements": Array [],
      "removals": Array [],
    },
    "ingress": DiffableCollection {
      "additions": Array [],
      "newElements": Array [],
      "oldElements": Array [],
      "removals": Array [],
    },
  },
  "unknown": DifferenceCollection {
    "diffs": Object {},
  },
}
`;
