{"version":3,"file":"remove.js","sourceRoot":"","sources":["../../../src/commands/analytics/remove.ts"],"names":[],"mappings":";;;AAAA,oEAAyE;AACzE,2FAA0F;AAE1F,MAAM,UAAU,GAAG,QAAQ,CAAC;AAC5B,MAAM,QAAQ,GAAG,WAAW,CAAC;AAEhB,QAAA,IAAI,GAAG,UAAU,CAAC;AAOxB,MAAM,GAAG,GAAG,KAAK,EAAE,OAAmB,EAAiB,EAAE;IAC9D,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;IACxC,MAAM,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC;IAEtC,MAAM,0BAA0B,GAAG,KAAK,EAAE,yBAAiC,EAAiB,EAAE;QAC5F,MAAM,eAAe,GAAG,MAAM,IAAA,mEAAiC,EAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;QACpG,IAAI,eAAe,EAAE;YACnB,MAAM,IAAI,+BAAY,CAAC,oBAAoB,EAAE;gBAC3C,OAAO,EAAE,sBAAsB,yBAAyB,oEAAoE;gBAC5H,UAAU,EAAE,mEAAmE;aAChF,CAAC,CAAC;SACJ;IACH,CAAC,CAAC;IAGF,MAAM,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,0BAA0B,CAAC,CAAC;AACjH,CAAC,CAAC;AAhBW,QAAA,GAAG,OAgBd","sourcesContent":["import { $TSContext, AmplifyError } from '@aws-amplify/amplify-cli-core';\nimport { checkResourceInUseByNotifications } from '../../plugin-client-api-notifications';\n\nconst subcommand = 'remove';\nconst category = 'analytics';\n\nexport const name = subcommand;\n\n/**\n * Analytics remove resource handler.\n * @param context amplify cli context\n * @returns removeResource response\n */\nexport const run = async (context: $TSContext): Promise<void> => {\n  const { amplify, parameters } = context;\n  const resourceName = parameters.first;\n\n  const throwIfUsedByNotifications = async (selectedAnalyticsResource: string): Promise<void> => {\n    const isResourceInUse = await checkResourceInUseByNotifications(context, selectedAnalyticsResource);\n    if (isResourceInUse) {\n      throw new AmplifyError('ResourceInUseError', {\n        message: `Analytics resource ${selectedAnalyticsResource} is being used by the notifications category and cannot be removed`,\n        resolution: `Run 'amplify remove notifications', then retry removing analytics`,\n      });\n    }\n  };\n\n  // remove resource with a resourceName callback that will block removal if selecting an analytics resource that notifications depends on\n  await amplify.removeResource(context, category, resourceName, { headless: false }, throwIfUsedByNotifications);\n};\n"]}