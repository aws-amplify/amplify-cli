{"version":3,"file":"pinpoint-walkthrough.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/service-walkthroughs/pinpoint-walkthrough.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\n/* eslint-disable import/no-dynamic-require */\nimport path from 'path';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport {\n  $TSContext,\n  ResourceAlreadyExistsError,\n  exitOnNextTick,\n  AmplifyCategories,\n  $TSAny,\n  JSONUtilities,\n} from '@aws-amplify/amplify-cli-core';\nimport { alphanumeric, printer, prompter } from '@aws-amplify/amplify-prompts';\nimport { getNotificationsCategoryHasPinpointIfExists, getPinpointRegionMappings } from '../../../utils/pinpoint-helper';\n\n// FIXME: may be removed from here, since addResource can pass category to addWalkthrough\nconst category = AmplifyCategories.ANALYTICS;\nconst parametersFileName = 'parameters.json';\nconst serviceName = 'Pinpoint';\nconst templateFileName = 'pinpoint-cloudformation-template.json';\n\n/**\n * Add resource walkthrough for Pinpoint/Kinesis resource.\n * @param context amplify cli context\n * @param defaultValuesFilename default values for given walkthrough\n * @returns resource\n */\nexport const addWalkthrough = async (context: $TSContext, defaultValuesFilename: string, serviceMetadata: $TSAny): Promise<$TSAny> => {\n  const resourceName = resourceAlreadyExists(context);\n\n  if (resourceName) {\n    const errMessage = 'Pinpoint analytics have already been added to your project.';\n    printer.warn(errMessage);\n    await context.usageData.emitError(new ResourceAlreadyExistsError(errMessage));\n    exitOnNextTick(0);\n  } else {\n    return configure(context, defaultValuesFilename);\n  }\n  return undefined;\n};\n\nconst configure = async (context: $TSContext, defaultValuesFilename: string): Promise<$TSAny> => {\n  const { amplify } = context;\n  const defaultValuesSrc = `${__dirname}/../default-values/${defaultValuesFilename}`;\n  const { getAllDefaults } = require(defaultValuesSrc);\n  const defaultValues = getAllDefaults(amplify.getProjectDetails());\n  const projectBackendDirPath = context.amplify.pathManager.getBackendDirPath();\n  const pinpointApp = getNotificationsCategoryHasPinpointIfExists();\n\n  if (pinpointApp) {\n    Object.assign(defaultValues, pinpointApp);\n  }\n\n  const resource = await prompter.input('Provide your pinpoint resource name:', {\n    validate: alphanumeric('Resource name must be alphanumeric'),\n    initial: defaultValues.appName,\n  });\n  defaultValues.appName = resource;\n  defaultValues.resourceName = resource;\n\n  const analyticsRequirements = {\n    authSelections: 'identityPoolOnly',\n    allowUnauthenticatedIdentities: true,\n  };\n\n  const checkResult: $TSAny = await context.amplify.invokePluginMethod(context, 'auth', undefined, 'checkRequirements', [\n    analyticsRequirements,\n    context,\n    'analytics',\n    resource,\n  ]);\n\n  // If auth is imported and configured, we have to throw the error instead of printing since there is no way to adjust the auth\n  // configuration.\n  if (checkResult.authImported === true && checkResult.errors && checkResult.errors.length > 0) {\n    throw new Error(checkResult.errors.join(os.EOL));\n  }\n\n  if (checkResult.errors && checkResult.errors.length > 0) {\n    printer.warn(checkResult.errors.join(os.EOL));\n  }\n\n  // If auth is not imported and there were errors, adjust or enable auth configuration\n  if (!checkResult.authEnabled || !checkResult.requirementsMet) {\n    printer.warn('Adding analytics would add the Auth category to the project if not already added.');\n    if (\n      await amplify.confirmPrompt(\n        'Apps need authorization to send analytics events. Do you want to allow guests and unauthenticated users to send analytics events? (we recommend you allow this when getting started)',\n      )\n    ) {\n      try {\n        await context.amplify.invokePluginMethod(context, 'auth', undefined, 'externalAuthEnable', [\n          context,\n          'analytics',\n          resource,\n          analyticsRequirements,\n        ]);\n      } catch (error) {\n        printer.error(error);\n        throw error;\n      }\n    } else {\n      try {\n        printer.warn('Authorize only authenticated users to send analytics events. Use \"amplify update auth\" to modify this behavior.');\n        analyticsRequirements.allowUnauthenticatedIdentities = false;\n        await context.amplify.invokePluginMethod(context, 'auth', undefined, 'externalAuthEnable', [\n          context,\n          'analytics',\n          resource,\n          analyticsRequirements,\n        ]);\n      } catch (error) {\n        printer.error(error);\n        throw error;\n      }\n    }\n  }\n\n  // At this point we have a valid auth configuration either imported or added/updated.\n  const resourceDirPath = path.join(projectBackendDirPath, category, resource);\n  delete defaultValues.resourceName;\n  writeParams(resourceDirPath, defaultValues);\n  await writeCfnFile(context, resourceDirPath);\n  return resource;\n};\n\nconst resourceAlreadyExists = (context: $TSContext): string | undefined => {\n  const { amplify } = context;\n  const { amplifyMeta } = amplify.getProjectDetails();\n  let resourceName;\n\n  if (amplifyMeta[category]) {\n    const categoryResources = amplifyMeta[category];\n    Object.keys(categoryResources).forEach((resource) => {\n      if (categoryResources[resource].service === serviceName) {\n        resourceName = resource;\n      }\n    });\n  }\n\n  return resourceName;\n};\n\nconst writeCfnFile = async (context: $TSContext, resourceDirPath: string, force = false): Promise<void> => {\n  fs.ensureDirSync(resourceDirPath);\n  const templateFilePath = path.join(resourceDirPath, templateFileName);\n  if (!fs.existsSync(templateFilePath) || force) {\n    const templateSourceFilePath = path.join(__dirname, '..', 'cloudformation-templates', templateFileName);\n    const templateSource = context.amplify.readJsonFile(templateSourceFilePath);\n    templateSource.Mappings = await getPinpointRegionMappings(context);\n    JSONUtilities.writeJson(templateFilePath, templateSource);\n  }\n};\n\n/**\n * Save the params.json file for analytics category\n * @param {*} resourceDirPath Path to params.json\n * @param {*} values values to be written to params.json\n */\nexport const writeParams = (resourceDirPath: string, values: Array<$TSAny>): void => {\n  fs.ensureDirSync(resourceDirPath);\n  const parametersFilePath = path.join(resourceDirPath, parametersFileName);\n  const jsonString = JSON.stringify(values, null, 4);\n  fs.writeFileSync(parametersFilePath, jsonString, 'utf8');\n};\n\n/**\n * migrate from older version of pinpoint configuration to new version\n * @param {*} context amplify cli context\n */\nexport const migrate = (context: $TSContext): void => {\n  const projectBackendDirPath = context.amplify.pathManager.getBackendDirPath();\n  const { amplifyMeta } = context.migrationInfo;\n  const { analytics = {} } = amplifyMeta;\n  Object.keys(analytics).forEach((resourceName) => {\n    const resourcePath = path.join(projectBackendDirPath, category, resourceName);\n    const cfn = context.amplify.readJsonFile(path.join(resourcePath, 'pinpoint-cloudformation-template.json'));\n    const updatedCfn = migrateCFN(cfn);\n\n    fs.ensureDirSync(resourcePath);\n    const templateFilePath = path.join(resourcePath, templateFileName);\n    fs.writeFileSync(templateFilePath, JSON.stringify(updatedCfn, null, 4), 'utf8');\n\n    const parameters = context.amplify.readJsonFile(path.join(resourcePath, 'parameters.json'));\n    const updatedParams = migrateParams(context, parameters);\n    const parametersFilePath = path.join(resourcePath, parametersFileName);\n    fs.writeFileSync(parametersFilePath, JSON.stringify(updatedParams, null, 4), 'utf8');\n  });\n};\n\nconst migrateCFN = (cfn: $TSAny): $TSAny => {\n  const { Parameters, Conditions, Resources } = cfn;\n\n  // update Parameters\n  delete Parameters.IAMPrefix;\n  Parameters.authRoleArn = {\n    Type: 'String',\n  };\n\n  Parameters.env = {\n    Type: 'String',\n  };\n\n  delete Parameters.IAMPrefix;\n\n  // Update conditions\n  Conditions.ShouldNotCreateEnvResources = {\n    'Fn::Equals': [\n      {\n        Ref: 'env',\n      },\n      'NONE',\n    ],\n  };\n\n  const oldRoleName = Resources.LambdaExecutionRole.Properties.RoleName;\n  const newRoleName = {\n    'Fn::If': [\n      'ShouldNotCreateEnvResources',\n      oldRoleName,\n      {\n        'Fn::Join': [\n          '',\n          [\n            oldRoleName,\n            '-',\n            {\n              Ref: 'env',\n            },\n          ],\n        ],\n      },\n    ],\n  };\n  Resources.LambdaExecutionRole.Properties.RoleName = newRoleName;\n\n  const oldAppName = Resources.PinpointFunctionOutputs.Properties.appName;\n  const newAppName = {\n    'Fn::If': [\n      'ShouldNotCreateEnvResources',\n      oldAppName,\n      {\n        'Fn::Join': [\n          '',\n          [\n            oldAppName,\n            '-',\n            {\n              Ref: 'env',\n            },\n          ],\n        ],\n      },\n    ],\n  };\n  Resources.PinpointFunctionOutputs.Properties.appName = newAppName;\n\n  // replace all IAMPrefix refs\n  replaceRef(Resources, 'IAMPrefix', {\n    'Fn::Select': ['4', { 'Fn::Split': [':', { Ref: 'authRoleArn' }] }],\n  });\n\n  return cfn;\n};\n\nconst migrateParams = (context: $TSContext, params: Record<string, $TSAny>): Record<string, $TSAny> => {\n  const { defaultValuesFilename } = require(`${__dirname}/../../supported-services.json`)[serviceName];\n  const defaultValuesSrc = `${__dirname}/../default-values/${defaultValuesFilename}`;\n  const { getAllDefaults } = require(defaultValuesSrc);\n\n  // no longer used\n  delete params.IAMPrefix;\n\n  // uses default value, which are refs to parent stack\n  delete params.authRoleName;\n  delete params.unauthRoleName;\n  delete params.authRoleArn;\n\n  const defaultValues = getAllDefaults(context.migrationInfo);\n  delete defaultValues.resourceName;\n  return { ...defaultValues, ...params };\n};\n\nconst replaceRef = (node: $TSAny, refName: string, refReplacement: $TSAny): $TSAny => {\n  if (Array.isArray(node)) {\n    return node.forEach((item) => replaceRef(item, refName, refReplacement));\n  }\n  if (typeof node === 'object') {\n    if (isRefNode(node, refName)) {\n      delete node.Ref;\n      Object.assign(node, refReplacement);\n      return undefined;\n    }\n    Object.values(node).forEach((n) => {\n      replaceRef(n, refName, refReplacement);\n    });\n  }\n  return undefined;\n};\n\nconst isRefNode = (node: $TSAny, refName: string): boolean => {\n  if (typeof node === 'object' && 'Ref' in node && node.Ref === refName) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Given access pattern for Pinpoint resource, return the mobiletargeting IAM policies.\n * e.g 'create' access requires ['mobiletargeting:Put*', 'mobiletargeting:Create*', 'mobiletargeting:Send*']\n * @param resourceName Name of the Pinpoint resource\n * @param crudOptions create, read, update, delete access pattern for Auth/UnAuth roles\n * @returns IAM {policy, attributes}\n */\nexport const getIAMPolicies = (resourceName: string, crudOptions: $TSAny): $TSAny => {\n  let policy = {};\n  const actions: Array<string> = [];\n\n  crudOptions.forEach((crudOption: string) => {\n    switch (crudOption) {\n      case 'create':\n        actions.push('mobiletargeting:Put*', 'mobiletargeting:Create*', 'mobiletargeting:Send*');\n        break;\n      case 'update':\n        actions.push('mobiletargeting:Update*');\n        break;\n      case 'read':\n        actions.push('mobiletargeting:Get*', 'mobiletargeting:List*');\n        break;\n      case 'delete':\n        actions.push('mobiletargeting:Delete*');\n        break;\n      default:\n        console.log(`${crudOption} not supported`);\n    }\n  });\n\n  policy = {\n    Effect: 'Allow',\n    Action: actions,\n    Resource: [\n      {\n        'Fn::Join': [\n          '',\n          [\n            'arn:aws:mobiletargeting:',\n            {\n              Ref: `${category}${resourceName}Region`,\n            },\n            ':',\n            { Ref: 'AWS::AccountId' },\n            ':apps/',\n            {\n              Ref: `${category}${resourceName}Id`,\n            },\n          ],\n        ],\n      },\n      {\n        'Fn::Join': [\n          '',\n          [\n            'arn:aws:mobiletargeting:',\n            {\n              Ref: `${category}${resourceName}Region`,\n            },\n            ':',\n            { Ref: 'AWS::AccountId' },\n            ':apps/',\n            {\n              Ref: `${category}${resourceName}Id`,\n            },\n            '/*',\n          ],\n        ],\n      },\n    ],\n  };\n\n  const attributes = ['Id', 'Region'];\n\n  return { policy, attributes };\n};\n"]}