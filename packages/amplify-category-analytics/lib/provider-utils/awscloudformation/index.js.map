{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/provider-utils/awscloudformation/index.ts"],"names":[],"mappings":";;;AAKA,oEAAwG;AACxG,kEAAuD;AAShD,MAAM,WAAW,GAAG,CAAC,OAAmB,EAAE,EAAU,EAAE,OAAe,EAAU,EAAE;IACtF,MAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,SAAS,6BAA6B,CAAC,CAAC,OAAO,CAAC,CAAC;IACzG,MAAM,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,GAAG,eAAe,CAAC;IAE9E,MAAM,qBAAqB,GAAG,GAAG,SAAS,yBAAyB,0BAA0B,EAAE,CAAC;IAChG,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;IAE1D,OAAO,cAAc,CAAC,OAAO,EAAE,qBAAqB,EAAE,eAAe,CAAC,CAAC;AACzE,CAAC,CAAC;AARW,QAAA,WAAW,eAQtB;AASK,MAAM,cAAc,GAAG,CAAC,OAAmB,EAAE,EAAU,EAAE,OAAe,EAAU,EAAE;IACzF,MAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,SAAS,6BAA6B,CAAC,CAAC,OAAO,CAAC,CAAC;IACzG,MAAM,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,GAAG,eAAe,CAAC;IAC9E,MAAM,qBAAqB,GAAG,GAAG,SAAS,yBAAyB,0BAA0B,EAAE,CAAC;IAChG,MAAM,EAAE,iBAAiB,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;IAE7D,IAAI,CAAC,iBAAiB,EAAE;QACtB,MAAM,OAAO,GAAG,qDAAqD,CAAC;QACtE,yBAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvB,KAAK,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,sCAAmB,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAA,iCAAc,EAAC,CAAC,CAAC,CAAC;KACnB;IAED,OAAO,iBAAiB,CAAC,OAAO,EAAE,qBAAqB,EAAE,eAAe,CAAC,CAAC;AAC5E,CAAC,CAAC;AAdW,QAAA,cAAc,kBAczB;AAUK,MAAM,qBAAqB,GAAG,CACnC,OAAmB,EACnB,OAAe,EACf,YAAoB,EACpB,WAAmB,EACC,EAAE;IACtB,MAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,SAAS,6BAA6B,CAAC,CAAC,OAAO,CAAC,CAAC;IACzG,MAAM,EAAE,0BAA0B,EAAE,GAAG,eAAe,CAAC;IACvD,MAAM,qBAAqB,GAAG,GAAG,SAAS,yBAAyB,0BAA0B,EAAE,CAAC;IAChG,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;IAC1D,OAAO,cAAc,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;AACnD,CAAC,CAAC;AAXW,QAAA,qBAAqB,yBAWhC","sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\n/* eslint-disable import/no-dynamic-require */\n/* eslint-disable spellcheck/spell-checker */\n\nimport { $TSAny, $TSContext, exitOnNextTick, NotImplementedError } from '@aws-amplify/amplify-cli-core';\nimport { printer } from '@aws-amplify/amplify-prompts';\n\n/**\n * Add Analytics resource walkthrough\n * @param {*} context - CLI context\n * @param {*} __ - Analytics\n * @param {*} service - Pinpoint/Kinesis\n * @returns resourceName\n */\nexport const addResource = (context: $TSContext, __: string, service: string): $TSAny => {\n  const serviceMetadata = context.amplify.readJsonFile(`${__dirname}/../supported-services.json`)[service];\n  const { defaultValuesFilename, serviceWalkthroughFilename } = serviceMetadata;\n\n  const serviceWalkthroughSrc = `${__dirname}/service-walkthroughs/${serviceWalkthroughFilename}`;\n  const { addWalkthrough } = require(serviceWalkthroughSrc);\n\n  return addWalkthrough(context, defaultValuesFilename, serviceMetadata);\n};\n\n/**\n * Update Analytics Resource\n * @param context Amplify CLI context\n * @param __  should be one of kinesis or pinpoint\n * @param service Name of analytics provider service\n * @returns updateWalkthrough response\n */\nexport const updateResource = (context: $TSContext, __: string, service: string): $TSAny => {\n  const serviceMetadata = context.amplify.readJsonFile(`${__dirname}/../supported-services.json`)[service];\n  const { defaultValuesFilename, serviceWalkthroughFilename } = serviceMetadata;\n  const serviceWalkthroughSrc = `${__dirname}/service-walkthroughs/${serviceWalkthroughFilename}`;\n  const { updateWalkthrough } = require(serviceWalkthroughSrc);\n\n  if (!updateWalkthrough) {\n    const message = 'Update functionality not available for this service';\n    printer.error(message);\n    void context.usageData.emitError(new NotImplementedError(message));\n    exitOnNextTick(0);\n  }\n\n  return updateWalkthrough(context, defaultValuesFilename, serviceMetadata);\n};\n\n/**\n * Get IAM permission policies\n * @param context amplify cli context\n * @param service provider service for analytics resource\n * @param resourceName name of the analytics resource\n * @param crudOptions access requirements ( Create-Read-Update-Delete )\n * @returns IAM policies\n */\nexport const getPermissionPolicies = (\n  context: $TSContext,\n  service: string,\n  resourceName: string,\n  crudOptions: $TSAny,\n): $TSAny | undefined => {\n  const serviceMetadata = context.amplify.readJsonFile(`${__dirname}/../supported-services.json`)[service];\n  const { serviceWalkthroughFilename } = serviceMetadata;\n  const serviceWalkthroughSrc = `${__dirname}/service-walkthroughs/${serviceWalkthroughFilename}`;\n  const { getIAMPolicies } = require(serviceWalkthroughSrc);\n  return getIAMPolicies(resourceName, crudOptions);\n};\n"]}