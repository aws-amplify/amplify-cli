{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "DynamoDB resource stack creation using Amplify CLI",
    "Parameters": {
        "partitionKeyName": {
            "Type": "String"
        },
        "partitionKeyType": {
            "Type": "String"
        },
        "env": {
            "Type": "String"
        },
        <%if (props.KeySchema.length > 1) { %>
        "sortKeyName": {
            "Type": "String"
        },
        "sortKeyType": {
            "Type": "String"
        },
        <% } %>
        "tableName": {
            "Type": "String"
        }
    },
    "Conditions": {
        "ShouldNotCreateEnvResources": {
            "Fn::Equals": [
                {
                    "Ref": "env"
                },
                "NONE"
            ]
        }
    },
    "Resources": {
        "DynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                  <% for(var i=0; i < props.AttributeDefinitions.length; i++) { %>
                  {
                      "AttributeName": "<%= props.AttributeDefinitions[i].AttributeName %>",
                      "AttributeType": "<%= props.AttributeDefinitions[i].AttributeType %>"
                  } <%if (i != props.AttributeDefinitions.length - 1) { %> , <% } %>
                  <% } %>
                ],
                "KeySchema": [
                  <% for(var i=0; i < props.KeySchema.length; i++) { %>
                  {
                    "AttributeName": "<%= props.KeySchema[i].AttributeName %>",
                    "KeyType": "<%= props.KeySchema[i].KeyType %>"
                  } <%if (i != props.KeySchema.length - 1) { %> , <% } %>
                  <% } %>
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "5",
                    "WriteCapacityUnits": "5"
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_IMAGE"
                },
                "TableName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        {
                           "Ref": "tableName"
                        }, 
                        {

                            "Fn::Join": [
                                "",
                                [
                                  {
                                    "Ref": "tableName"
                                  },
                                  "-",
                                  {
                                    "Ref": "env"
                                  }
                                ]
                            ]
                        }
                    ]
                }
                <%if (props.GlobalSecondaryIndexes) { %>
                ,"GlobalSecondaryIndexes": [
                  <% for(var i=0; i < props.GlobalSecondaryIndexes.length; i++) { %>
                    {
                        "IndexName": "<%= props.GlobalSecondaryIndexes[i].IndexName %>",
                        "KeySchema": [
                            <% for(var j=0; j < props.GlobalSecondaryIndexes[i].KeySchema.length; j++) { %>
                            {
                                "AttributeName": "<%= props.GlobalSecondaryIndexes[i].KeySchema[j].AttributeName %>",
                                "KeyType": "<%= props.GlobalSecondaryIndexes[i].KeySchema[j].KeyType %>"
                            } <%if (j != props.GlobalSecondaryIndexes[i].KeySchema.length - 1) { %> , <% } %>
                            <% } %>
                        ],
                        "Projection": {
                            "ProjectionType": "ALL"
                        },
                        "ProvisionedThroughput": {
                            "ReadCapacityUnits": "5",
                            "WriteCapacityUnits": "5"
                        }
                    } <%if (i != props.GlobalSecondaryIndexes.length - 1) { %> , <% } %>
                  <% } %>
                ]
                <% } %>
            }
        }
    },
    "Outputs": {
        "Name": {
            "Value": {
                "Ref": "DynamoDBTable"
            }
        },
        "Arn": {
            "Value": {
                "Fn::GetAtt": [
                    "DynamoDBTable",
                    "Arn"
                ]
            }
        },
        "StreamArn": {
            "Value": {
                "Fn::GetAtt": [
                    "DynamoDBTable",
                    "StreamArn"
                ]
            }
        },
        "PartitionKeyName": {
            "Value": {
                "Ref": "partitionKeyName"
            }
        },
        "PartitionKeyType": {
            "Value": {
                "Ref": "partitionKeyType"
            }
        },
        <%if (props.KeySchema.length > 1) { %>
        "SortKeyName": {
            "Value": {
                "Ref": "sortKeyName"
            }
        },
        "SortKeyType": {
            "Value": {
                "Ref": "sortKeyType"
            }
        },
        <% } %>
        "Region": {
            "Value": {
                "Ref": "AWS::Region"
            }
        }
    }
}