const matcher = new RegExp('(?<apiId>.+):GetAtt:(?<modelName>.+)Table:Name');

/**
 * Resolves Fn::ImportValue instances that reference a table generated by @model
 *
 * This is a bit of a hack. The "right" way to do it would be to load the physical ids of the tables as exports
 * and pass that context in when parsing the stacks but we don't currently have a good way to resolve those physical ids
 * before processing the stacks
 * @param val The input to Fn::ImportValue
 * @param env The current environment
 * @returns if val matches the expected pattern, the expected export value of the table; otherwise val
 */
export const importModelTableResolver = (val: string, env: string): string => {
  const match = matcher.exec(val);
  if (!match) {
    return val;
  }
  return [match.groups.modelName, match.groups.apiId, env].join('-');
};
