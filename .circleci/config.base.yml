version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.15.3
machine:
  environment:
    PATH: '${PATH}:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin'

executors:
  w: &windows-e2e-executor
    machine:
      image: 'windows-server-2019-vs2019:stable'
      resource_class: 'windows.medium'
      shell: bash.exe
    working_directory: ~/repo
    environment:
      AMPLIFY_DIR: C:/home/circleci/repo/out
      AMPLIFY_PATH: C:/home/circleci/repo/out/amplify.exe

  l: &linux-e2e-executor
    docker:
      - image: public.ecr.aws/j4f5f3h7/amplify-cli-e2e-base-image-repo-public:latest
    working_directory: ~/repo
    resource_class: medium
    environment:
      AMPLIFY_DIR: /home/circleci/repo/out
      AMPLIFY_PATH: /home/circleci/repo/out/amplify-pkg-linux

defaults: &defaults
  working_directory: ~/repo
  parameters:
    os:
      type: executor
      default: l
  executor: << parameters.os >>

clean_e2e_resources: &clean_e2e_resources
  name: Cleanup resources
  command: |
    pwd
    cd packages/amplify-e2e-tests
    yarn clean-e2e-resources job ${CIRCLE_BUILD_NUM}
  working_directory: ~/repo

scan_e2e_test_artifacts: &scan_e2e_test_artifacts
  name: Scan And Cleanup E2E Test Artifacts
  command: |
    if ! yarn ts-node .circleci/scan_artifacts.ts; then
      echo "Cleaning the repository"
      git clean -fdx
      exit 1
    fi
  when: always

install_cli_from_local_registery: &install_cli_from_local_registery
  name: Start verdaccio, install node CLI and amplify-app
  command: |
    source .circleci/local_publish_helpers.sh
    startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
    setNpmRegistryUrlToLocal
    changeNpmGlobalPath
    npm install -g @aws-amplify/cli
    npm install -g amplify-app
    unsetNpmRegistryUrl

jobs:
  build:
    parameters:
      os:
        type: executor
        default: l
    executor: << parameters.os >>
    steps:
      - checkout
      - run: yarn run production-build
      - run:
          name: Build tests
          command: yarn build-tests
      - save_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache
      - save_cache:
          key: amplify-cli-ssh-deps-{{ .Branch }}
          paths:
            - ~/.ssh
      - when:
          condition:
            equal: [*linux-e2e-executor, << parameters.os >>]
          steps:
            - persist_to_workspace:
                root: .
                paths: .
  test:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Install Java
          command: sudo apt-get update && sudo apt-get install default-jdk
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Run tests
          command: yarn test-ci
      - run:
          name: Collect code coverage
          command: yarn coverage

  mock_e2e_tests:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Install Java
          command: sudo apt-get update && sudo apt-get install default-jdk
      - run:
          name: Run Transformer end-to-end tests with mock server
          command: |
            source .circleci/local_publish_helpers.sh
            cd packages/amplify-util-mock/
            yarn e2e
          no_output_timeout: 90m
          environment:
            JEST_JUNIT_OUTPUT: 'reports/junit/js-test-results.xml'
      - store_test_results:
          path: packages/amplify-util-mock/

  publish_to_local_registry:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Publish to verdaccio
          command: |
            source .circleci/local_publish_helpers.sh
            startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
            setNpmRegistryUrlToLocal
            loginToLocalRegistry
            git config user.email not@used.com
            git config user.name "Doesnt Matter"
            yarn publish-to-verdaccio
            unsetNpmRegistryUrl
      - run:
          name: Generate unified changelog
          command: |
            git reset --hard HEAD
            yarn update-versions
            yarn ts-node scripts/unified-changelog.ts
      - run:
          name: Save new amplify GitHub tag
          command: node scripts/echo-current-cli-version.js > .amplify-pkg-version
      - save_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/verdaccio-cache/
      - save_cache:
          key: amplify-unified-changelog-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/repo/UNIFIED_CHANGELOG.md
      - save_cache:
          key: amplfiy-pkg-tag-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/repo/.amplify-pkg-version

  build_pkg_binaries:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Start verdaccio and package CLI
          command: |
            source .circleci/local_publish_helpers.sh
            startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
            setNpmRegistryUrlToLocal
            changeNpmGlobalPath
            yarn yarn-use-bash
            yarn pkg-all
            unsetNpmRegistryUrl
      - save_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/repo/out

  graphql_e2e_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Run GraphQL end-to-end tests
          command: |
            source .circleci/local_publish_helpers.sh
            cd packages/graphql-transformers-e2e-tests/
            retry yarn e2e --maxWorkers=3 $TEST_SUITE
          environment:
            AMPLIFY_CLI_DISABLE_LOGGING: 'true'
          no_output_timeout: 90m
      - store_test_results:
          path: packages/graphql-transformers-e2e-tests/
  amplify_sudo_install_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Update OS Packages
          command: sudo apt-get update
      - run:
          name: Start verdaccio and Install Amplify CLI as sudo
          command: |
            source .circleci/local_publish_helpers.sh
            startLocalRegistry "$(pwd)/.circleci/verdaccio.yaml"
            setSudoNpmRegistryUrlToLocal
            changeSudoNpmGlobalPath
            sudo npm install -g @aws-amplify/cli
            unsetSudoNpmRegistryUrl
            amplify version

  amplify_e2e_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
      - run: *install_cli_from_local_registery
      - run:
          name: Run E2e Tests
          command: |
            source .circleci/local_publish_helpers.sh
            retry runE2eTest
          no_output_timeout: 90m
      - run: *scan_e2e_test_artifacts
      - store_test_results:
          path: packages/amplify-e2e-tests/
      - store_artifacts:
          path: ~/repo/packages/amplify-e2e-tests/amplify-e2e-reports

  amplify_e2e_tests_pkg:
    parameters:
      os:
        type: executor
        default: l
    executor: << parameters.os >>
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplify-build-artifact-{{ .Revision }}-{{ arch }}
      - restore_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
      - install_yarn:
          os: << parameters.os >>
      - install_packaged_cli:
          os: << parameters.os >>
      - run_e2e_tests:
          os: << parameters.os >>
      - scan_e2e_test_artifacts:
          os: << parameters.os >>
      - store_test_results:
          path: packages/amplify-e2e-tests/
      - store_artifacts:
          path: packages/amplify-e2e-tests/amplify-e2e-reports
      # - clean_e2e_resources:
      #     os: << parameters.os >>

  amplify_migration_tests_v5:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Run tests migrating from CLI v5.2.0
          command: |
            source .circleci/local_publish_helpers.sh
            changeNpmGlobalPath
            cd packages/amplify-migration-tests
            retry yarn run migration_v5.2.0 --maxWorkers=3 $TEST_SUITE
          no_output_timeout: 90m
      - run: *scan_e2e_test_artifacts
      - store_test_results:
          path: packages/amplify-migration-tests/
      - store_artifacts:
          path: ~/repo/packages/amplify-migration-tests/amplify-migration-reports
    working_directory: ~/repo

  amplify_migration_tests_v6:
    environment:
      AMPLIFY_PATH: /home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli/bin/amplify
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Run tests migrating from CLI v6.1.0
          command: |
            source .circleci/local_publish_helpers.sh
            changeNpmGlobalPath
            cd packages/amplify-migration-tests
            retry yarn run migration_v6.1.0 --maxWorkers=3 $TEST_SUITE
          no_output_timeout: 90m
      - run: *scan_e2e_test_artifacts
      - store_test_results:
          path: packages/amplify-migration-tests/
      - store_artifacts:
          path: ~/repo/packages/amplify-migration-tests/amplify-migration-reports
    working_directory: ~/repo

  amplify_migration_tests_non_multi_env_layers:
    <<: *defaults
    environment:
      AMPLIFY_PATH: /home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli/bin/amplify
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: Run tests migrating from CLI v4.28.2
          command: |
            source .circleci/local_publish_helpers.sh
            changeNpmGlobalPath
            cd packages/amplify-migration-tests
            retry yarn run migration_v4.28.2_nonmultienv_layers --maxWorkers=3 $TEST_SUITE
          no_output_timeout: 90m
      - run: *scan_e2e_test_artifacts
      - store_test_results:
          path: packages/amplify-migration-tests/
      - store_artifacts:
          path: ~/repo/packages/amplify-migration-tests/amplify-migration-reports
    working_directory: ~/repo

  amplify_migration_tests_multi_env_layers:
    <<: *defaults
    environment:
      AMPLIFY_PATH: /home/circleci/.npm-global/lib/node_modules/@aws-amplify/cli/bin/amplify
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Run tests migrating from CLI v4.52.0
          command: |
            source .circleci/local_publish_helpers.sh
            changeNpmGlobalPath
            cd packages/amplify-migration-tests
            retry yarn run migration_v4.52.0_multienv_layers --maxWorkers=3 $TEST_SUITE
          no_output_timeout: 90m
      - run: *scan_e2e_test_artifacts
      - store_test_results:
          path: packages/amplify-migration-tests/
      - store_artifacts:
          path: ~/repo/packages/amplify-migration-tests/amplify-migration-reports
    working_directory: ~/repo

  amplify_console_integration_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
      - run: *install_cli_from_local_registery
      - run:
          command: |
            echo "export PATH=~/.npm-global/bin:$PATH" >> $BASH_ENV
            source $BASH_ENV
            source .circleci/local_publish_helpers.sh
            amplify -v
            cd packages/amplify-console-integration-tests
            retry yarn run console-integration --maxWorkers=3
          name: 'Run Amplify Console integration tests'
          no_output_timeout: 90m
      - run: *scan_e2e_test_artifacts
      - store_test_results:
          path: packages/amplify-console-integration-tests/
      - store_artifacts:
          path: ~/repo/packages/amplify-console-integration-tests/console-integration-reports
    working_directory: ~/repo

  integration_test:
    working_directory: ~/repo
    resource_class: medium
    docker:
      - image: cypress/base:14.17.0
        environment:
          TERM: dumb
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-verdaccio-cache-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Setup Dependencies
          command: |
            apt-get update
            apt-get install -y sudo
            sudo apt-get install -y tcl
            sudo apt-get install -y expect
            sudo apt-get install -y zip
            sudo apt-get install -y lsof
            sudo apt-get install -y python python-pip libpython-dev
            sudo apt-get install -y jq
            pip install awscli
      - run: cd .circleci/ && chmod +x aws.sh
      - run: expect .circleci/aws_configure.exp
      - run:
          name: Configure Amplify CLI
          command: |
            yarn rm-dev-link && yarn link-dev && yarn rm-aa-dev-link && yarn link-aa-dev
            echo 'export PATH="$(yarn global bin):$PATH"' >> $BASH_ENV
            amplify-dev
      - run:
          name: Clone auth test package
          command: |
            cd ..
            git clone $AUTH_CLONE_URL
            cd aws-amplify-cypress-auth
            yarn --cache-folder ~/.cache/yarn
      - run: cd .circleci/ && chmod +x auth.sh
      - run: cd .circleci/ && chmod +x amplify_init.sh
      - run: cd .circleci/ && chmod +x amplify_init.exp
      - run: expect .circleci/amplify_init.exp ../aws-amplify-cypress-auth
      - run: expect .circleci/enable_auth.exp
      - run: cd ../aws-amplify-cypress-auth
      - run: yarn --frozen-lockfile --cache-folder ~/.cache/yarn
      - run: cd ../aws-amplify-cypress-auth/src && cat $(find . -type f -name 'aws-exports*')
      - run:
          name: Start Auth test server in background
          command: |
            cd ../aws-amplify-cypress-auth
            pwd
            yarn start
          background: true
      - run: cat $(find ../repo -type f -name 'auth_spec*')
      - run:
          name: Run cypress tests for auth
          command: |
            cd ../aws-amplify-cypress-auth
            yarn add cypress@6.8.0 --save
            cp ../repo/cypress.json .
            cp -R ../repo/cypress .
            yarn cypress run --spec $(find . -type f -name 'auth_spec*')
      - run: sudo kill -9 $(lsof -t -i:3000)
      - run: cd .circleci/ && chmod +x delete_auth.sh
      - run: expect .circleci/delete_auth.exp
      - run:
          name: Clone API test package
          command: |
            cd ..
            git clone $API_CLONE_URL
            cd aws-amplify-cypress-api
            yarn --cache-folder ~/.cache/yarn
      - run: cd .circleci/ && chmod +x api.sh
      - run: expect .circleci/amplify_init.exp ../aws-amplify-cypress-api
      - run: expect .circleci/enable_api.exp
      - run: cd ../aws-amplify-cypress-api
      - run: yarn --frozen-lockfile --cache-folder ~/.cache/yarn
      - run: cd ../aws-amplify-cypress-api/src && cat $(find . -type f -name 'aws-exports*')
      - run:
          name: Start API test server in background
          command: |
            cd ../aws-amplify-cypress-api
            pwd
            yarn start
          background: true
      - run:
          name: Run cypress tests for api
          command: |
            cd ../aws-amplify-cypress-api
            yarn add cypress@6.8.0 --save
            cp ../repo/cypress.json .
            cp -R ../repo/cypress .
            yarn cypress run --spec $(find . -type f -name 'api_spec*')
      - run: cd .circleci/ && chmod +x delete_api.sh
      - run: expect .circleci/delete_api.exp
      - run: *scan_e2e_test_artifacts
      - store_artifacts:
          path: /root/aws-amplify-cypress-auth/cypress/videos
      - store_artifacts:
          path: /root/aws-amplify-cypress-auth/cypress/screenshots
      - store_artifacts:
          path: /root/aws-amplify-cypress-api/cypress/videos
      - store_artifacts:
          path: /root/aws-amplify-cypress-api/cypress/screenshots

  deploy:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          keys:
            - amplify-cli-ssh-deps-{{ .Branch }}
      - run:
          name: Authenticate with npm
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish Amplify CLI
          command: |
            bash ./.circleci/publish.sh
      - run: *scan_e2e_test_artifacts
  github_prerelease:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-unified-changelog-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplfiy-pkg-tag-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Compress binaries
          command: |
            cd out
            tar zcvf amplify-pkg-macos.tgz amplify-pkg-macos
            tar zcvf amplify-pkg-linux.tgz amplify-pkg-linux
            tar zcvf amplify-pkg-win.exe.tgz amplify-pkg-win.exe
      - run:
          name: Publish Amplify CLI GitHub prerelease
          command: |
            version=$(cat .amplify-pkg-version)
            yarn ts-node scripts/github-prerelease.ts $version

  github_prerelease_install_sanity_check:
    <<: *linux-e2e-executor
    steps:
      - restore_cache:
          key: amplfiy-pkg-tag-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Install packaged Amplify CLI
          command: |
            version=$(cat .amplify-pkg-version)
            curl -sL https://aws-amplify.github.io/amplify-cli/install | version=v$version bash
            echo "export PATH=$PATH:$HOME/.amplify/bin" >> $BASH_ENV
      - run:
          name: Sanity check install
          command: |
            amplify version
  github_release:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-pkg-binaries-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: amplfiy-pkg-tag-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Publish Amplify CLI GitHub release
          command: |
            version=$(cat .amplify-pkg-version)
            yarn ts-node scripts/github-release.ts $version
  cleanup_resources:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: 'Run cleanup script'
          command: |
            cd packages/amplify-e2e-tests
            yarn clean-e2e-resources
          no_output_timeout: 90m
      - run: *scan_e2e_test_artifacts
      - store_artifacts:
          path: ~/repo/packages/amplify-e2e-tests/amplify-e2e-reports
    working_directory: ~/repo

  cleanup_resources_after_e2e_runs:
    <<: *linux-e2e-executor
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ arch }}
      - run:
          name: 'Run cleanup script'
          command: |
            cd packages/amplify-e2e-tests
            yarn clean-e2e-resources workflow ${CIRCLE_WORKFLOW_ID}
          no_output_timeout: 90m
      - run: *scan_e2e_test_artifacts
      - store_artifacts:
          path: ~/repo/packages/amplify-e2e-tests/amplify-e2e-reports
    working_directory: ~/repo

workflows:
  version: 2
  nightly_console_integration_tests:
    triggers:
      - schedule:
          cron: '0 14 * * *'
          filters:
            branches:
              only:
                - master
    jobs:
      - build
      - publish_to_local_registry:
          requires:
            - build
      - amplify_console_integration_tests:
          context:
            - amplify-ecr-image-pull
            - console-e2e-test
            - e2e-auth-credentials
            - e2e-test-context
          requires:
            - build
            - publish_to_local_registry
  e2e_resource_cleanup:
    triggers:
      - schedule:
          cron: '45 0,12 * * *'
          filters:
            branches:
              only:
                - master
    jobs:
      - build
      - cleanup_resources:
          context:
            - cleanup-resources
            - e2e-test-context
          requires:
            - build

  build_test_deploy:
    jobs:
      - build:
          matrix:
            parameters:
              os:
                - l
                - w
      - test:
          requires:
            - build
      - mock_e2e_tests:
          requires:
            - build
      - graphql_e2e_tests:
          context:
            - amplify-ecr-image-pull
            - e2e-test-context
          filters:
            branches:
              only:
                - master
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - build
      - integration_test:
          context:
            - amplify-ecr-image-pull
            - e2e-test-context
          filters:
            branches:
              only:
                - master
                - beta
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - build
      - publish_to_local_registry:
          filters:
            branches:
              only:
                - master
                - beta
                - release
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - build
      - build_pkg_binaries:
          requires:
            - publish_to_local_registry
      - amplify_sudo_install_test:
          context: amplify-ecr-image-pull
          requires:
            - publish_to_local_registry
          filters:
            branches:
              only:
                - master
                - /tagged-release\/.*/
                - /run-e2e\/.*/
      - amplify_e2e_tests:
          context:
            - amplify-ecr-image-pull
            - cleanup-resources
            - e2e-auth-credentials
            - e2e-test-context
          # post-steps:
          #   - run: *clean_e2e_resources
          filters:
            branches:
              only:
                - master
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - publish_to_local_registry
      - amplify_e2e_tests_pkg:
          context:
            - amplify-ecr-image-pull
            - cleanup-resources
            - e2e-auth-credentials
            - e2e-test-context
          filters:
            branches:
              only:
                - master
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - build_pkg_binaries
      - amplify_migration_tests_v6:
          context:
            - amplify-ecr-image-pull
            - e2e-auth-credentials
            - cleanup-resources
            - e2e-test-context
          filters:
            branches:
              only:
                - master
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - build
          # post-steps:
          #   - run: *clean_e2e_resources
      - amplify_migration_tests_v5:
          context:
            - amplify-ecr-image-pull
            - e2e-auth-credentials
            - cleanup-resources
            - e2e-test-context
          filters:
            branches:
              only:
                - master
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - build
          # post-steps:
          #   - run: *clean_e2e_resources
      - amplify_migration_tests_non_multi_env_layers:
          context:
            - amplify-ecr-image-pull
            - e2e-auth-credentials
            - cleanup-resources
            - e2e-test-context
          filters:
            branches:
              only:
                - master
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - build
          # post-steps:
          #   - run: *clean_e2e_resources
      - amplify_migration_tests_multi_env_layers:
          context:
            - amplify-ecr-image-pull
            - e2e-auth-credentials
            - cleanup-resources
            - e2e-test-context
          filters:
            branches:
              only:
                - master
                - /tagged-release\/.*/
                - /run-e2e\/.*/
          requires:
            - build
          # post-steps:
          #   - run: *clean_e2e_resources
      - amplify_console_integration_tests:
          context:
            - amplify-ecr-image-pull
            - e2e-auth-credentials
            - cleanup-resources
            - console-e2e-test
            - e2e-test-context
          # post-steps:
          #   - run: *clean_e2e_resources
          filters:
            branches:
              only:
                - beta
          requires:
            - build
            - publish_to_local_registry
      - github_prerelease:
          context: github-publish
          requires:
            - build_pkg_binaries
          filters:
            branches:
              only:
                - release
      - github_prerelease_install_sanity_check:
          requires:
            - github_prerelease
          filters:
            branches:
              only:
                - release
      - cleanup_resources_after_e2e_runs:
          context:
            - cleanup-resources
            - e2e-test-context
          requires:
            - amplify_e2e_tests
            - amplify_e2e_tests_pkg
            - amplify_migration_tests_v6
            - amplify_migration_tests_v5

      - deploy:
          context:
            - amplify-ecr-image-pull
            - npm-publish
          requires:
            - test
            - mock_e2e_tests
            - graphql_e2e_tests
            - integration_test
            - amplify_e2e_tests
            - amplify_e2e_tests_pkg
            - amplify_sudo_install_test
            - amplify_console_integration_tests
            - amplify_migration_tests_v6
            - amplify_migration_tests_v5
            - amplify_migration_tests_non_multi_env_layers
            - amplify_migration_tests_multi_env_layers
            - github_prerelease_install_sanity_check
          filters:
            branches:
              only:
                - release
                - master
                - beta
                - /tagged-release\/.*/
                - /tagged-release-without-e2e-tests\/.*/
      - github_release:
          context: github-publish
          requires:
            - deploy
          filters:
            branches:
              only:
                - release

commands:
  install_packaged_cli:
    description: 'Install Amplify Packaged CLI to PATH'
    parameters:
      os:
        type: executor
        default: l
    steps:
      - when:
          condition:
            equal: [*windows-e2e-executor, << parameters.os >>]
          steps:
            - run:
                shell: powershell.exe
                name: Rename the Packaged CLI to amplify
                command: |
                  # rename the command to amplify
                  cd /home/circleci/repo/out
                  cp amplify-pkg-win.exe amplify.exe
            - run:
                shell: powershell.exe
                name: Move to CLI Binary to already existing PATH
                command: |
                  # This is a Hack to make sure the Amplify CLI is in the PATH
                  cp /home/circleci/repo/out/amplify.exe $env:homedrive\$env:homepath\AppData\Local\Microsoft\WindowsApps
            - run:
                name: Confirm Amplify CLI is installed and available in PATH
                command: amplify version

      - when:
          condition:
            equal: [*linux-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Symlink Amplify packaged CLI
                command: |
                  cd out
                  ln -sf amplify-pkg-linux amplify
                  echo "export PATH=$AMPLIFY_DIR:$PATH" >> $BASH_ENV
                  source $BASH_ENV
            - run:
                name: Confirm Amplify CLI is installed and available in PATH
                command: amplify version

  install_yarn:
    description: 'Install Amplify Packaged CLI to PATH'
    parameters:
      os:
        type: executor
        default: l
    steps:
      - when:
          condition:
            equal: [*windows-e2e-executor, << parameters.os >>]
          steps:
            - run: nvm install 12.22.5
            - run: nvm use 12.22.5
            - run: npm install -g yarn
            - run: yarn --cache-folder ~/.cache/yarn
            - run:
                shell: powershell.exe
                command: cp /home/circleci/repo/out/amplify-pkg-win.exe $env:homedrive\$env:homepath\AppData\Local\Microsoft\WindowsApps\amplify.exe
  install_java:
    description: 'Install Java on Linux and Docker images'
    parameters:
      os:
        type: executor
        default: l
    steps:
      - when:
          condition:
            equal: [*linux-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Install Java
                command: |
                  sudo apt-get update && sudo apt-get install default-jdk

  run_e2e_tests:
    description: 'Run Amplify E2E tests'
    parameters:
      os:
        type: executor
        default: l
    steps:
      - when:
          condition:
            equal: [*windows-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Run E2e Tests
                shell: bash.exe
                command: |
                  source .circleci/local_publish_helpers.sh
                  cd packages/amplify-e2e-tests
                  retry yarn run e2e --detectOpenHandles --maxWorkers=3 $TEST_SUITE
                no_output_timeout: 90m
      - when:
          condition:
            equal: [*linux-e2e-executor, << parameters.os >>]
          steps:
            - run:
                name: Run E2e Tests
                command: |
                  source .circleci/local_publish_helpers.sh
                  source $BASH_ENV
                  amplify version
                  retry runE2eTest
                no_output_timeout: 90m
  scan_e2e_test_artifacts:
    description: 'Scan And Cleanup E2E Test Artifacts'
    parameters:
      os:
        type: executor
        default: l
    steps:
      - run:
          name: Scan E2E artifacts
          command: |
            if ! yarn ts-node .circleci/scan_artifacts.ts; then
              echo "Cleaning the repository"
              git clean -fdx
              exit 1
            fi
          when: always
  clean_e2e_resources:
    description: Cleanup resources
    parameters:
      os:
        type: executor
        default: l
    steps:
      - run:
          name: Clean job resources
          command: |
            pwd
            cd packages/amplify-e2e-tests
            yarn clean-e2e-resources job ${CIRCLE_BUILD_NUM}
          when: always
