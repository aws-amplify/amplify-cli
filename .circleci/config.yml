version: 2
machine:
    environment:
      PATH: "${PATH}:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin"

defaults: &defaults
  working_directory: ~/repo
  docker:
      - image: circleci/node:10.16

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run: yarn config set workspaces-experimental true
      - run: yarn cache clean --force
      - run: yarn run production-build
      - save_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache
      - save_cache:
          key: amplify-cli-ssh-deps-{{ .Branch }}
          paths:
            - ~/.ssh
      - persist_to_workspace:
          root: .
          paths: .
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Java
          command: sudo apt-get install default-jdk
      - run:
          name: Run tests
          command: yarn test-ci
  graphql_e2e_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Run GraphQL end-to-end tests
          command: cd packages/graphql-transformers-e2e-tests/ && yarn e2e --maxWorkers=3
          no_output_timeout: 90m

  amplify_e2e_tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          key: "amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum \"yarn.lock\" }}"
      - run:
          command: "cd packages/amplify-e2e-tests && yarn run e2e --maxWorkers=3"
          name: "Run Amplify end-to-end tests"
          no_output_timeout: 90m
    working_directory: ~/repo

  integration_test:
      working_directory: ~/repo
      docker:
        - image: cypress/base:10
          environment:
            TERM: dumb
      steps:
        - checkout
        - run: apt-get install -y sudo
        - run: sudo apt-get update
        - run: sudo apt-get install -y tcl
        - run: sudo apt-get install -y expect
        - run: sudo apt-get install -y zip
        - run: sudo apt-get install -y lsof
        - run: sudo apt-get install -y python
        - run: sudo apt-get install -y python-pip libpython-dev
        - run: sudo apt-get install -y jq
        - run: pip install awscli
        - run: cd .circleci/ && chmod +x aws.sh
        - run: expect .circleci/aws_configure.exp
        - run: yarn setup-dev
        - run: amplify-dev
        - run:
            name: "Clone auth test package"
            command: |
              cd ..
              git clone $AUTH_CLONE_URL
              cd aws-amplify-cypress-auth
              yarn
        - run: cd .circleci/ && chmod +x auth.sh
        - run: cd .circleci/ && chmod +x amplify_init.sh
        - run: cd .circleci/ && chmod +x amplify_init.exp
        - run: expect .circleci/amplify_init.exp ../aws-amplify-cypress-auth
        - run: expect .circleci/enable_auth.exp
        - run: cd ../aws-amplify-cypress-auth
        - run: yarn --frozen-lockfile
        - run: cd ../aws-amplify-cypress-auth/src && cat $(find . -type f -name 'aws-exports*')
        - run:
            name: "Start Auth test server in background"
            command: |
              cd ../aws-amplify-cypress-auth
              pwd
              yarn start
            background: true
        - run: cat $(find ../repo -type f -name 'auth_spec*')
        - run:
            name: "Run cypress tests for auth"
            command: |
              cd ../aws-amplify-cypress-auth
              yarn add cypress --save
              cp ../repo/cypress.json .
              cp -R ../repo/cypress .
              node_modules/.bin/cypress run --spec $(find . -type f -name 'auth_spec*')
        - run: sudo kill -9 $(lsof -t -i:3000)
        - run: cd .circleci/ && chmod +x delete_auth.sh
        - run: expect .circleci/delete_auth.exp
        - run:
            name: "Clone API test package"
            command: |
              cd ..
              git clone $API_CLONE_URL
              cd aws-amplify-cypress-api
              yarn
        - run: cd .circleci/ && chmod +x api.sh
        - run: expect .circleci/amplify_init.exp ../aws-amplify-cypress-api
        - run: expect .circleci/enable_api.exp
        - run: cd ../aws-amplify-cypress-api
        - run: yarn --frozen-lockfile
        - run: cd ../aws-amplify-cypress-api/src && cat $(find . -type f -name 'aws-exports*')
        - run:
            name: "Start API test server in background"
            command: |
              cd ../aws-amplify-cypress-api
              pwd
              yarn start
            background: true
        - run:
            name: "Run cypress tests for api"
            command: |
              cd ../aws-amplify-cypress-auth
              yarn add cypress --save
              cp ../repo/cypress.json .
              cp -R ../repo/cypress .
              node_modules/.bin/cypress run --spec $(find . -type f -name 'api_spec*')
        - run: cd .circleci/ && chmod +x delete_api.sh
        - run: expect .circleci/delete_api.exp
        - store_artifacts:
            path: ../../aws-amplify-cypress-auth/cypress/videos
        - store_artifacts:
            path: ../aws-amplify-cypress-auth/cypress/screenshots
        - store_artifacts:
            path: ../aws-amplify-cypress-api/cypress/videos
        - store_artifacts:
            path: ../aws-amplify-cypress-api/cypress/screenshots
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          keys:
            - amplify-cli-ssh-deps-{{ .Branch }}
            - amplify-cli-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Authenticate with npm
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: "Publish Amplify CLI"
          command: |
            if [ -z "$CIRCLE_PULL_REQUEST" ]; then
              git config --global user.email $GITHUB_EMAIL
              git config --global user.name $GITHUB_USER
              npm run publish:$CIRCLE_BRANCH
            else
              echo "Skipping deploy."
            fi
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - graphql_e2e_tests:
          filters:
            branches:
              only:
                - master
                - graphql_e2e_testing
          requires:
            - build
      - integration_test:
          filters:
            branches:
              only:
                - master
                - beta
          requires:
            - build
      - amplify_e2e_tests:
          filters:
            branches:
              only:
                - master
          requires:
            - build

      - deploy:
          requires:
            - build
            - test
            - integration_test
            - graphql_e2e_tests
            - amplify_e2e_tests
          filters:
            branches:
              only:
                - release
                - master
                - beta
